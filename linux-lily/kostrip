#!/usr/bin/bash

build_id() {
  LANG=C readelf -n $1 | sed -n '/Build ID/ { s/.*: //p; q; }'
}

strip_file() {
  local binary=$1; shift

  local bid=$(build_id "$binary")

  # has this file already been stripped
  if [[ -n "$bid" ]]; then
    if [[ -f "$dbgdir/.build_id/${bid:0:2}/${bid:2}.debug" ]]; then
      return
    fi
  elif [[ -f "$dbgdir/$binary.debug" ]]; then
    return
  fi

  mkdir -p "$dbgdir/${binary%/*}"
  objcopy --only-keep-debug "$binary" "$dbgdir/$binary.debug"
  objcopy --add-gnu-debuglink="$dbgdir/${binary#/}.debug" "$binary"

  # I know for sure that there aren't any hardlinks.
  # create any needed hardlinks
  # while read -d '' file ; do
  #   if [[ "${binary}" -ef "${file}" && ! -f "$dbgdir/${file}.debug" ]]; then
  #     mkdir -p "$dbgdir/${file%/*}"
  #     ln "$dbgdir/${binary}.debug" "$dbgdir/${file}.debug"
  #   fi
  # done < <(find . -type f -perm -u+w -print0 2>/dev/null)

  if [[ -n "$bid" ]]; then
    local target
    mkdir -p "$dbgdir/.build_id/${bid:0:2}"

    target="../../../../../${binary#./}"
    target="${target/..\/..\/usr\/lib\/}"
    target="${target/..\/usr\/}"
    ln -s "$target" "$dbgdir/.build_id/${bid:0:2}/${bid:2}"

    target="../../${binary#./}.debug"
    ln -s "$target" "$dbgdir/.build_id/${bid:0:2}/${bid:2}.debug"
  fi

  strip $@ "$binary"
}

strip_file "$@" -S
