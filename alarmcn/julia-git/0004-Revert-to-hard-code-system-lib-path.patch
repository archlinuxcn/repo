From 2428e250bf81e607f1277f10599bddd95c3fdb26 Mon Sep 17 00:00:00 2001
From: Yichao Yu <yyc1992@gmail.com>
Date: Fri, 30 Dec 2022 16:15:59 -0500
Subject: [PATCH 4/7] Revert to hard code system lib path

---
 .../src/CompilerSupportLibraries_jll.jl       | 52 ++++++-------------
 1 file changed, 15 insertions(+), 37 deletions(-)

diff --git a/stdlib/CompilerSupportLibraries_jll/src/CompilerSupportLibraries_jll.jl b/stdlib/CompilerSupportLibraries_jll/src/CompilerSupportLibraries_jll.jl
index b32a229d65..813c7127ef 100644
--- a/stdlib/CompilerSupportLibraries_jll/src/CompilerSupportLibraries_jll.jl
+++ b/stdlib/CompilerSupportLibraries_jll/src/CompilerSupportLibraries_jll.jl
@@ -13,10 +13,6 @@ const PATH_list = String[]
 const LIBPATH = Ref("")
 const LIBPATH_list = String[]
 artifact_dir::String = ""
-libgcc_s_path::String = ""
-libgfortran_path::String = ""
-libstdcxx_path::String = ""
-libgomp_path::String = ""
 
 if Sys.iswindows()
     const _libatomic_path = BundledLazyLibraryPath("libatomic-1.dll")
@@ -44,36 +40,28 @@ elseif Sys.isapple()
     const _libssp_path = BundledLazyLibraryPath("libssp.0.dylib")
 else
     if Sys.isfreebsd()
-        const _libatomic_path = BundledLazyLibraryPath("libatomic.so.3")
+        const libatomic_path = "libatomic.so.3"
     else
-        const _libatomic_path = BundledLazyLibraryPath("libatomic.so.1")
+        const libatomic_path = "libatomic.so.1"
     end
-    const _libgcc_s_path = BundledLazyLibraryPath("libgcc_s.so.1")
-    const _libgfortran_path = BundledLazyLibraryPath(string("libgfortran.so.", libgfortran_version(HostPlatform()).major))
-    const _libstdcxx_path = BundledLazyLibraryPath("libstdc++.so.6")
-    const _libgomp_path = BundledLazyLibraryPath("libgomp.so.1")
+    const libgcc_s_path = "libgcc_s.so.1"
+    const libgfortran_path = "libgfortran.so.5"
+    const libstdcxx_path = "libstdc++.so.6"
+    const libgomp_path = "libgomp.so.1"
     if libc(HostPlatform()) != "musl"
-        const _libssp_path = BundledLazyLibraryPath("libssp.so.0")
-    end
-    if arch(HostPlatform()) âˆˆ ("x86_64", "i686")
-        const _libquadmath_path = BundledLazyLibraryPath("libquadmath.so.0")
+        const libssp_path = "libc.so.6"
     end
 end
 
-if @isdefined(_libatomic_path)
-    const libatomic = LazyLibrary(_libatomic_path)
-end
-const libgcc_s = LazyLibrary(_libgcc_s_path)
-libgfortran_deps = [libgcc_s]
-if @isdefined _libquadmath_path
-    const libquadmath = LazyLibrary(_libquadmath_path)
-    push!(libgfortran_deps, libquadmath)
+if @isdefined(libatomic_path)
+    const libatomic = libatomic_path
 end
-const libgfortran = LazyLibrary(_libgfortran_path, dependencies=libgfortran_deps)
-const libstdcxx = LazyLibrary(_libstdcxx_path, dependencies=[libgcc_s])
-const libgomp = LazyLibrary(_libgomp_path)
-if @isdefined _libssp_path
-    const libssp = LazyLibrary(_libssp_path)
+const libgcc_s = libgcc_s_path
+const libgfortran = libgfortran_path
+const libstdcxx = libstdcxx_path
+const libgomp = libgomp_path
+if @isdefined libssp_path
+    const libssp = libssp_path
 end
 
 # Conform to LazyJLLWrappers API
@@ -95,19 +83,9 @@ end
 is_available() = true
 
 function __init__()
-    if @isdefined _libatomic_path
-        global libatomic_path = string(_libatomic_path)
-    end
-    global libgcc_s_path = string(_libgcc_s_path)
-    global libgomp_path = string(_libgomp_path)
     if @isdefined _libquadmath_path
         global libquadmath_path = string(_libquadmath_path)
     end
-    if @isdefined _libssp_path
-        global libssp_path = string(_libssp_path)
-    end
-    global libgfortran_path = string(_libgfortran_path)
-    global libstdcxx_path = string(_libstdcxx_path)
     global artifact_dir = dirname(Sys.BINDIR)
     LIBPATH[] = dirname(libgcc_s_path)
     push!(LIBPATH_list, LIBPATH[])
-- 
2.48.1

