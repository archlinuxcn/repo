# Maintainer: Evangelos Foutras <evangelos@foutrelis.com>
# Contributor: Jan "heftig" Steffens <jan.steffens@gmail.com>

pkgname=(llvm-julia llvm-libs-julia)
pkgver=14.0.6
_julia_rel=0
pkgrel=3
arch=(i686 x86_64 armv7h aarch64)
url="https://llvm.org/"
license=('custom:Apache 2.0 with LLVM Exception')
makedepends=(cmake ninja libffi libedit ncurses libxml2
             python-setuptools python-psutil python-sphinx python-recommonmark git)
# Disable LTO for now since there seems to be some issue at least on aarch64
options=('staticlibs' '!strip' '!lto')
source=(https://github.com/JuliaLang/llvm-project/archive/refs/tags/julia-$pkgver-$_julia_rel.tar.gz
        llvm-coroutines-ubsan.patch
        llvm-config.h)
sha256sums=('312d4ba131c76af5f64d724f9496e8e41f7cfe0cbb129f0f500597325681add8'
            'ee9baf6df05474083857044d92f26f59d3ee709cdf82ba3bdb2792e6645f71d9'
            '597dc5968c695bbdbb0eac9e8eb5117fcd2773bc91edf5ec103ecffffab8bc48')

prepare() {
  cd "$srcdir/llvm-project-julia-$pkgver-$_julia_rel/llvm"
  mkdir build

  # Arch patches
  msg "Applying Arch patches"
  patch -Np2 -i "$srcdir"/llvm-coroutines-ubsan.patch
}

build() {
  cd llvm-project-julia-$pkgver-$_julia_rel/llvm/build

  export PATH="${srcdir}/bin:${PATH}"
  CFLAGS+=" -ffile-prefix-map=${srcdir}=${DBGSRCDIR:-/usr/src/debug}"
  CXXFLAGS+=" -ffile-prefix-map=${srcdir}=${DBGSRCDIR:-/usr/src/debug}"
  CFLAGS+=' -ggdb1 -O3 -fasynchronous-unwind-tables'
  CXXFLAGS+=' -ggdb1 -O3 -fasynchronous-unwind-tables'
  LDFLAGS+=' -O3 -fasynchronous-unwind-tables'

  cmake .. -G Ninja \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_DOCDIR=share/doc \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DCMAKE_SKIP_RPATH=ON \
        -DLLVM_BINUTILS_INCDIR=/usr/include \
        -DLLVM_BUILD_DOCS=ON \
        -DLLVM_BUILD_LLVM_DYLIB=ON \
        -DLLVM_BUILD_TESTS=OFF \
        -DLLVM_ENABLE_BINDINGS=OFF \
        -DLLVM_ENABLE_FFI=ON \
        -DLLVM_ENABLE_RTTI=ON \
        -DLLVM_ENABLE_SPHINX=ON \
        -DLLVM_HOST_TRIPLE=$CHOST \
        -DLLVM_INSTALL_UTILS=ON \
        -DLLVM_LINK_LLVM_DYLIB=ON \
        -DSPHINX_WARNINGS_AS_ERRORS=OFF
  ninja
}

package_llvm-julia() {
  pkgdesc="Compiler infrastructure (with patch for julia)"
  depends=("llvm-libs-julia=$pkgver-$pkgrel" perl)
  optdepends=('python-setuptools: for using lit (LLVM Integrated Tester)')
  conflicts=(llvm)
  provides=("llvm=$pkgver-$pkgrel")

  cd llvm-project-julia-$pkgver-$_julia_rel/llvm/build

  DESTDIR="$pkgdir" ninja install

  # Include lit for running lit-based tests in other projects
  pushd ../utils/lit
  python3 setup.py install --root="$pkgdir" -O1
  popd

  # The runtime libraries go into llvm-libs
  mv -f "$pkgdir"/usr/lib/lib{LLVM,LTO,Remarks}*.so* "$srcdir"
  mv -f "$pkgdir"/usr/lib/LLVMgold.so "$srcdir"

  if [[ $CARCH == x86_64 ]]; then
    # Needed for multilib (https://bugs.archlinux.org/task/29951)
    # Header stub is taken from Fedora
    mv "$pkgdir/usr/include/llvm/Config/llvm-config"{,-64}.h
    cp "$srcdir/llvm-config.h" "$pkgdir/usr/include/llvm/Config/llvm-config.h"
  fi

  # Remove documentation sources
  rm -r "$pkgdir"/usr/share/doc/llvm/html/{_sources,.buildinfo}

  install -Dm644 ../LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}

package_llvm-libs-julia() {
  pkgdesc="LLVM runtime libraries (with patch for julia)"
  depends=(gcc-libs zlib libffi.so libedit libncursesw.so libxml2)
  conflicts=("llvm-libs")
  provides=("llvm-libs=$pkgver-$pkgrel")

  install -d "$pkgdir/usr/lib"
  cp -P \
     "$srcdir"/lib{LLVM,LTO,Remarks}*.so* \
     "$srcdir"/LLVMgold.so \
     "$pkgdir/usr/lib/"

  # Symlink LLVMgold.so from /usr/lib/bfd-plugins
  # https://bugs.archlinux.org/task/28479
  install -d "$pkgdir/usr/lib/bfd-plugins"
  ln -s ../LLVMgold.so "$pkgdir/usr/lib/bfd-plugins/LLVMgold.so"

  install -Dm644 "$srcdir/llvm-project-julia-$pkgver-$_julia_rel/llvm/LICENSE.TXT" \
          "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}
