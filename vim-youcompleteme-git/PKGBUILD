# Maintainer: Erik Beran <eberan AT_gmail_DOT com>
# Contributor: Stephen Zhang <zsrkmyn at gmail dot com>
# Contributor: Thor K. H. <thor at roht dot no>
# Contributor: Babken Vardanyan <483ken 4tgma1l
# Contributor: mikezackles
# Contributor: z33ky
# Contributor: stykr
# Contributor: Svenstaro
# Contributor: KaiSforza
# Contributor: Simon Gomizelj <simongmzlj@gmail.com>
# Contributor: Daniel Micay <danielmicay@gmail.com>
# Contributor: shmilee
# Contributor: foobster
# Contributor: archdria
# Contributor: Andy Weidenbaum <archbaum@gmail.com>

pkgname=vim-youcompleteme-git
pkgver=1969.8161d350
_CLANG_VERSION_MAX=4.0
_CLANG_VERSION_MIN=3.9
pkgrel=1
pkgdesc="A code-completion engine for Vim"
arch=('i686' 'x86_64')
url='http://valloric.github.com/YouCompleteMe/'
license=('GPL3')
groups=('vim-plugins')
depends=('python' 'vim' "clang>=$_CLANG_VERSION_MIN" "clang<$_CLANG_VERSION_MAX"
         'python-bottle' 'python-future' 'python-requests'
         'python-waitress' 'python-jedi')
optdepends=('mono: for C# completer'
            'nodejs: for nodejs completer'
            'rust: for rust completer')
makedepends=('cargo' 'cmake' 'git' 'go' 'make' 'mono' 'npm' 'nodejs' 'rust')
source=('git+https://github.com/Valloric/YouCompleteMe.git'
        'git+https://github.com/ross/requests-futures.git'
        'git+https://github.com/Valloric/ycmd.git'
        'frozendict::git+https://github.com/slezica/python-frozendict.git'
        'git+https://github.com/vheon/JediHTTP.git'
        'git+https://github.com/nsf/gocode.git'
        'git+https://github.com/Manishearth/godef.git'
        'git+https://github.com/nosami/OmniSharpServer.git'
        'git+https://github.com/icsharpcode/NRefactory.git'
        'git+https://github.com/jbevain/cecil.git'
        'git+https://github.com/jwilm/racerd.git'
        'use-python3.patch')
sha256sums=('SKIP' 'SKIP' 'SKIP' 'SKIP' 'SKIP' 'SKIP'
            'SKIP' 'SKIP' 'SKIP' 'SKIP' 'SKIP'
            '36712bac48fa10777ea213b51fbf77c5bc67732cd4af21b47a73bad030ed1577')
_COMPLETER="USE_CLANG_COMPLETER"
_SYSTEM_LIBCLANG="USE_SYSTEM_LIBCLANG"

pkgver() {
  cd "$srcdir/YouCompleteMe"
  echo $(git rev-list --count HEAD).$(git rev-parse --short HEAD)
}

prepare() {
  msg2 'Setting up Git submodules...'

  patch -Np1 -i "$srcdir/use-python3.patch"

  cd "$srcdir/YouCompleteMe"
  git submodule init
  for _m in requests-futures ycmd; do
    git config submodule.third_party/$_m.url "$srcdir/$_m"
    git submodule update third_party/$_m
  done

  cd "$srcdir/YouCompleteMe/third_party/ycmd"
  git submodule init
  for _m in JediHTTP gocode godef OmniSharpServer racerd frozendict; do
    git config submodule.third_party/$_m.url "$srcdir/$_m"
    git submodule update third_party/$_m
  done

  cd "$srcdir/YouCompleteMe/third_party/ycmd/third_party/OmniSharpServer"
  git submodule init
  git config submodule.NRefactory.url "$srcdir/NRefactory"
  git config submodule.cecil.url "$srcdir/cecil"
  git submodule update
}

build() {
  # https://github.com/Valloric/ycmd/blob/master/build.py {{{

  msg2 'Building ycmd...' # BuildYcmdLibs()
  mkdir -p "$srcdir/ycmd_build"
  cd "$srcdir/ycmd_build"
  cmake -G "Unix Makefiles" -DUSE_PYTHON2=0 -D${_COMPLETER}=1 -D${_SYSTEM_LIBCLANG}=1 . "$srcdir/YouCompleteMe/third_party/ycmd/cpp"
  make ycm_core

  msg2 'Building OmniSharp completer...' # BuildOmniSharp()
  cd "$srcdir/YouCompleteMe/third_party/ycmd/third_party/OmniSharpServer"
  xbuild /property:Configuration=Release

  msg2 'Building Gocode completer...' # BuildGoCode()
  cd "$srcdir/YouCompleteMe/third_party/ycmd/third_party/gocode"
  go build
  cd "$srcdir/YouCompleteMe/third_party/ycmd/third_party/godef"
  go build

  msg2 'Building Rust completer...' # BuildRacerd()
  cd "$srcdir/YouCompleteMe/third_party/ycmd/third_party/racerd"
  cargo build --release

  msg2 'Building Tern completer...' # SetUpTern()
  cd "$srcdir/YouCompleteMe/third_party/ycmd/third_party/tern_runtime"
  npm install --production
  # }}}

  rm -rf "$srcdir/YouCompleteMe/third_party/ycmd/"{ycmd/tests,third_party/JediHTTP/jedihttp/tests}

  for _m in requests-futures retries; do
    cd "$srcdir/YouCompleteMe/third_party/$_m"
    python3 -m compileall -x 'setup.py' .
  done

  for _m in JediHTTP frozendict; do
    cd "$srcdir/YouCompleteMe/third_party/ycmd/third_party/$_m"
    python3 -m compileall -x 'setup.py' .
  done

  cd "$srcdir/YouCompleteMe/third_party/ycmd/ycmd"
  python3 -m compileall .

  cd "$srcdir/YouCompleteMe/python/ycm/"
  rm -rf tests/
  python3 -m compileall .
}

package() {
  mkdir -p "$pkgdir/usr/share/vim/vimfiles/third_party/ycmd/third_party/OmniSharpServer/OmniSharp/bin/Release"
  mkdir -p "$pkgdir/usr/share/vim/vimfiles/third_party/ycmd/third_party/gocode"
  mkdir -p "$pkgdir/usr/share/vim/vimfiles/third_party/ycmd/third_party/godef"
  mkdir -p "$pkgdir/usr/share/vim/vimfiles/third_party/ycmd/third_party/racerd/target/release"

  cp -r "$srcdir/YouCompleteMe/"{autoload,doc,plugin,python} \
    "$pkgdir/usr/share/vim/vimfiles"
  cp -r "$srcdir/YouCompleteMe/third_party/"{requests-futures,retries} \
    "$pkgdir/usr/share/vim/vimfiles/third_party"
  cp -r "$srcdir/YouCompleteMe/third_party/ycmd/"{ycmd,ycm_core.so,CORE_VERSION} \
    "$pkgdir/usr/share/vim/vimfiles/third_party/ycmd"

  ln -s "/usr/lib/clang/${_CLANG_VERSION_MIN}" \
    "$pkgdir/usr/share/vim/vimfiles/third_party/ycmd/clang_includes"

  cp -r "$srcdir/YouCompleteMe/third_party/ycmd/third_party/"{frozendict,JediHTTP,tern_runtime} \
    "$pkgdir/usr/share/vim/vimfiles/third_party/ycmd/third_party"

  cp    "$srcdir/YouCompleteMe/third_party/ycmd/third_party/gocode/gocode" \
    "$pkgdir/usr/share/vim/vimfiles/third_party/ycmd/third_party/gocode/gocode"
  cp    "$srcdir/YouCompleteMe/third_party/ycmd/third_party/godef/godef" \
    "$pkgdir/usr/share/vim/vimfiles/third_party/ycmd/third_party/godef/godef"
  cp -r "$srcdir/YouCompleteMe/third_party/ycmd/third_party/OmniSharpServer/OmniSharp/bin/Release" \
    "$pkgdir/usr/share/vim/vimfiles/third_party/ycmd/third_party/OmniSharpServer/OmniSharp/bin"
  cp    "$srcdir/YouCompleteMe/third_party/ycmd/third_party/racerd/target/release/racerd" \
    "$pkgdir/usr/share/vim/vimfiles/third_party/ycmd/third_party/racerd/target/release/racerd"

  for _f in .git .gitignore .gitmodules .hgignore .hgtags .travis.yml; do
    find "$pkgdir" -name "$_f" -delete
  done
  rm -fr "$pkgdir/usr/share/vim/vimfiles/third_party/ycmd/third_party/JediHTTP/vendor/*"
  rm -fr "$pkgdir/usr/share/vim/vimfiles/third_party/ycmd/third_party/JediHTTP/travis"
  rm -fr "$pkgdir/usr/share/vim/vimfiles/third_party/requests-futures/setup.py"
  rm -fr "$pkgdir/usr/share/vim/vimfiles/third_party/ycmd/third_party/frozendict/setup.py"
}
# vim:set ts=2 sw=2 et:
