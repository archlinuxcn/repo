# Maintainer: Matthew McGinn <mamcgi@gmail.com>
# Contributor: HÃ¥vard Pettersson <mail@haavard.me>
# Contributor: Andrew Stubbs <andrew.stubbs@gmail.com>

pkgname=balena-etcher
_pkgname=etcher
pkgver=1.18.11
_electron=electron19
pkgrel=2
epoch=2
pkgdesc='Flash OS images to SD cards & USB drives, safely and easily'
arch=('x86_64' 'i686' 'armv7h' 'aarch64')
_github_url='https://github.com/balena-io/etcher'
url='https://balena.io/etcher'
license=(Apache)
depends=("${_electron}" "gtk3" "libxtst" "libxss" "nss" "alsa-lib" "glib2" "polkit" "libusb")
makedepends=("npm" "jq" "patch" "nodejs-lts-hydrogen" 'moreutils' 'node-gyp' )
optdepends=("libnotify: for notifications")
conflicts=("${_pkgname}"
  "${_pkgname}-git"
  "${_pkgname}-bin"
)
# options=('!strip')
source=("${_pkgname}-${pkgver}.tar.gz::https://github.com/balena-io/etcher/archive/refs/tags/v${pkgver}.tar.gz"
        "${pkgname}-electron.sh"
        "${pkgname}-electron.desktop"
        "resin-${pkgver}.tar.gz::https://github.com/product-os/scripts/archive/refs/tags/v1.26.6.tar.gz"
        )
sha256sums=('4d24d601df47702d78cb122b75bf13f2cea681bf73965efa72fd741362662bed'
            '71d3ca348f879c585aee8724fd565ce22ca5767833829ddce15ada81a5dceaf8'
            'c950d9578f9cf60998c920bb60c6617559963f06a4918e7072fdc706b0ef5754'
            '805acaa946df051059a4d16cd6d5adc93b753d0b2783deecfe72bf651500573d')

prepare() {
  cd "${_pkgname}-${pkgver}"
  sed -i "s|_ELECTRON_|${_electron}|g" ${srcdir}/balena-etcher-electron.sh
  cp -rf ${srcdir}/scripts-*/* "${srcdir}/${_pkgname}-${pkgver}/scripts/resin"

  # patch electron version
  local electronDist="/usr/lib/${_electron}"
	local electronVersion="$(< $electronDist/version)"
  electronVersion="^${electronVersion%.*}"
	jq ".devDependencies.electron = \"$electronVersion\"" package.json | sponge package.json
	jq ".build.electronDist = \"$electronDist\"" package.json | sponge package.json
	jq ".build.electronVersion = \"$electronVersion\"" package.json | sponge package.json

  rm -rf package-lock.json
}

build() {
  cd "${_pkgname}-${pkgver}"
  export HOME=${srcdir}
  unset MAKEFLAGS
  npm install

  npm run webpack
  npm prune --production
}

package() {
  cd "${_pkgname}-${pkgver}"

  _appdir="${pkgdir}/usr/lib/${pkgname}"
  install -d "${_appdir}"

  install package.json "${_appdir}"
  cp -a {lib,generated,node_modules} "${_appdir}"
  install -D assets/icon.png "${_appdir}/assets/icon.png"
  install -D lib/gui/app/index.html "${_appdir}/lib/gui/app/index.html"

  install -Dm755 "${srcdir}/${pkgname}-electron.sh" "${pkgdir}/usr/bin/${pkgname}-electron"
  install -Dm644 "${srcdir}/${pkgname}-electron.desktop" \
    "${pkgdir}/usr/share/applications/${pkgname}-electron.desktop"

  for size in 16x16 32x32 48x48 128x128 256x256 512x512; do
    install -Dm644 "assets/iconset/${size}.png" \
      "${pkgdir}/usr/share/icons/hicolor/${size}/apps/${pkgname}-electron.png"
  done

  find "${pkgdir}" -name package.json -print0 | xargs -r -0 sed -i '/_where/d'
}

# vim:set ts=2 sw=2 et:
