diff --git a/plugins/load-dcraw/dcraw.cc b/plugins/load-dcraw/dcraw.cc
index 9ab3bcd7..dd7f6c4d 100644
--- a/plugins/load-dcraw/dcraw.cc
+++ b/plugins/load-dcraw/dcraw.cc
@@ -1,7 +1,7 @@
 /*
    dcraw.cc - Dave Coffin's raw photo decoder - C++ adaptation
-   Copyright 1997-2015 by Dave Coffin, dcoffin a cybercom o net
-   Copyright 2004-2015 by Udi Fuchs, udifuchs a gmail o com
+   Copyright 1997-2018 by Dave Coffin, dcoffin a cybercom o net
+   Copyright 2004-2016 by Udi Fuchs, udifuchs a gmail o com
 
    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
@@ -11,8 +11,8 @@
    This is a adaptation of Dave Coffin's original dcraw.c to C++.
    It can work as either a command-line tool or called by other programs.
 
-   $Revision: 1.476 $
-   $Date: 2015/05/25 02:29:14 $
+   $Revision: 1.478 $
+   $Date: 2018/06/01 20:36:25 $
  */
 
 #ifdef HAVE_CONFIG_H /*For UFRaw config system - NKBJ*/
@@ -22,7 +22,7 @@ extern "C" {
 #include "uf_progress.h"
 }
 
-#define DCRAW_VERSION "9.26"
+#define DCRAW_VERSION "9.28"
 
 #ifndef _GNU_SOURCE
 #define _GNU_SOURCE
@@ -943,8 +943,10 @@ int CLASS ljpeg_start (struct jhead *jh, int info_only)
 	jh->restart = data[0] << 8 | data[1];
     }
   } while (tag != 0xffda);
+  if (jh->bits > 16 || jh->clrs > 6 ||
+     !jh->bits || !jh->high || !jh->wide || !jh->clrs) return 0;
   if (info_only) return 1;
-  if (jh->clrs > 6 || !jh->huff[0]) return 0;
+  if (!jh->huff[0]) return 0;
   FORC(19) if (!jh->huff[c+1]) jh->huff[c+1] = jh->huff[c];
   if (jh->sraw) {
     FORC(4)        jh->huff[2+c] = jh->huff[1];
@@ -1736,7 +1738,7 @@ void CLASS phase_one_correct()
 	    for (col = (qc ? ph1.split_col : 0);
 		 (int) col < (qc ? raw_width : ph1.split_col); col++)
 	      RAW(row,col) = curve[RAW(row,col)];
-        }
+	}
       }
       qmult_applied = 1;
       qlin_applied = 1;
@@ -1866,7 +1868,7 @@ void CLASS phase_one_load_raw_c()
 	pixel[col] = curve[pixel[col]];
     }
     for (col=0; col < raw_width; col++) {
-      i = (pixel[col] << 2) - ph1.black
+      i = (pixel[col] << 2*(ph1.format != 8)) - ph1.black
 	+ cblack[row][col >= ph1.split_col]
 	+ rblack[col][row >= ph1.split_row];
       if (i > 0) RAW(row,col) = i;
@@ -1966,7 +1968,7 @@ void CLASS unpacked_load_raw()
   int row, col, bits=0;
 
   while ((unsigned) 1 << ++bits < maximum);
-  read_shorts (raw_image, raw_width*raw_height);
+  read_shorts (raw_image, raw_width*raw_height - (fuji_layout && shot_select ? raw_width >> 1 : 0));
   for (row=0; row < raw_height; row++)
     for (col=0; col < raw_width; col++)
       if ((RAW(row,col) >>= load_flags) >> bits
@@ -2020,10 +2022,10 @@ void CLASS packed_load_raw()
   UINT64 bitbuf=0;
 
   bwide = raw_width * tiff_bps / 8;
-  bwide += bwide & load_flags >> 7;
+  bwide += bwide & load_flags >> 9;
   rbits = bwide * 8 - raw_width * tiff_bps;
   if (load_flags & 1) bwide = bwide * 16 / 15;
-  bite = 8 + (load_flags & 24);
+  bite = 8 + (load_flags & 56);
   half = (raw_height+1) >> 1;
   for (irow=0; irow < raw_height; irow++) {
     row = irow;
@@ -2041,10 +2043,10 @@ void CLASS packed_load_raw()
       for (vbits -= tiff_bps; vbits < 0; vbits += bite) {
 	bitbuf <<= bite;
 	for (i=0; i < bite; i+=8)
-	  bitbuf |= (unsigned) (fgetc(ifp) << i);
+	  bitbuf |= ((UINT64) fgetc(ifp) << i);
       }
       val = bitbuf << (64-tiff_bps-vbits) >> (64-tiff_bps);
-      RAW(row,col ^ (load_flags >> 6 & 1)) = val;
+      RAW(row,col ^ (load_flags >> 6 & 3)) = val;
       if (load_flags & 1 && (col % 10) == 9 && fgetc(ifp) &&
 	row < height+top_margin && col < width+left_margin) derror();
     }
@@ -2181,6 +2183,14 @@ void CLASS olympus_load_raw()
   }
 }
 
+void CLASS canon_crx_load_raw()
+{
+}
+
+void CLASS fuji_xtrans_load_raw()
+{
+}
+
 void CLASS minolta_rd175_load_raw()
 {
   uchar pixel[768];
@@ -2404,7 +2414,7 @@ fill_input_buffer (j_decompress_ptr cinfo)
 #endif
   cinfo->src->next_input_byte = jpeg_buffer;
   cinfo->src->bytes_in_buffer = nbytes;
-  return TRUE;
+  return boolean(TRUE);
 }
 
 void CLASS kodak_jpeg_load_raw()
@@ -2420,7 +2430,7 @@ void CLASS kodak_jpeg_load_raw()
   jpeg_create_decompress (&cinfo);
   jpeg_stdio_src (&cinfo, ifp);
   cinfo.src->fill_input_buffer = fill_input_buffer;
-  jpeg_read_header (&cinfo, TRUE);
+  jpeg_read_header (&cinfo, boolean(TRUE));
   jpeg_start_decompress (&cinfo);
   if ((cinfo.output_width      != width  ) ||
       (cinfo.output_height*2   != height ) ||
@@ -2493,7 +2503,7 @@ void CLASS lossy_dng_load_raw()
     if (tile_length < INT_MAX)
       fseek (ifp, get4(), SEEK_SET);
     jpeg_stdio_src (&cinfo, ifp);
-    jpeg_read_header (&cinfo, TRUE);
+    jpeg_read_header (&cinfo, boolean(TRUE));
     jpeg_start_decompress (&cinfo);
     buf = (*cinfo.mem->alloc_sarray)
 	((j_common_ptr) &cinfo, JPOOL_IMAGE, cinfo.output_width*3, 1);
@@ -2868,7 +2878,7 @@ void CLASS samsung_load_raw()
       }
       for (c=0; c < 16; c+=2) {
 	i = len[((c & 1) << 1) | (c >> 3)];
-        RAW(row,col+c) = ((signed) ph1_bits(i) << (32-i) >> (32-i)) +
+	RAW(row,col+c) = ((signed) ph1_bits(i) << (32-i) >> (32-i)) +
 	  (dir ? RAW(row+(~c | -2),col+c) : col ? RAW(row,col+(c | -2)) : 128);
 	if (c == 14) c = -1;
       }
@@ -2971,6 +2981,8 @@ void CLASS smal_decode_segment (unsigned seg[2][2], int holes)
 
   fseek (ifp, seg[0][1]+1, SEEK_SET);
   getbits(-1);
+  if (seg[1][0] > (unsigned) raw_width*raw_height)
+      seg[1][0] = raw_width*raw_height;
   for (pix=seg[0][0]; pix < seg[1][0]; pix++) {
     for (s=0; s < 3; s++) {
       data = data << nbits | getbits(nbits);
@@ -3013,7 +3025,10 @@ void CLASS smal_decode_segment (unsigned seg[2][2], int holes)
       diff = diff ? -diff : 0x80;
     if (ftell(ifp) + 12 >= (int) seg[1][1])
       diff = 0;
-    raw_image[pix] = pred[pix & 1] += diff;
+    if(pix>=raw_width*raw_height)
+      derror();
+    else
+      raw_image[pix] = pred[pix & 1] += diff;
     if (!(pix & 1) && HOLE(pix / raw_width)) pix += 2;
   }
   maximum = 0xff;
@@ -4185,7 +4200,7 @@ void CLASS crop_masked_pixels()
       load_raw == &CLASS sony_load_raw ||
      (load_raw == &CLASS eight_bit_load_raw && strncmp(model,"DC2",3)) ||
       load_raw == &CLASS kodak_262_load_raw ||
-     (load_raw == &CLASS packed_load_raw && (load_flags & 32))) {
+     (load_raw == &CLASS packed_load_raw && (load_flags & 256))) {
 sides:
     mask[0][0] = mask[1][0] = top_margin;
     mask[0][2] = mask[1][2] = top_margin+height;
@@ -5626,7 +5641,7 @@ void CLASS parse_makernote (int base, int uptag)
     offset = get4();
     fseek (ifp, offset-8, SEEK_CUR);
   } else if (!strcmp (buf,"OLYMPUS") ||
-             !strcmp (buf,"PENTAX ")) {
+	     !strcmp (buf,"PENTAX ")) {
     base = ftell(ifp)-10;
     fseek (ifp, -2, SEEK_CUR);
     order = get2();
@@ -5727,7 +5742,7 @@ nf: order = 0x4949;
       FORC4 cam_mul[c ^ (c >> 1) ^ 1] = get4();
     }
     if (tag == 0x3d && type == 3 && len == 4)
-      FORC4 cblack[c ^ c >> 1] = get2() >> (14-tiff_ifd[2].bps);
+      FORC4 cblack[c ^ c >> 1] = get2() >> (14-tiff_bps);
     if (tag == 0x81)  { /* NTC UF*/
       tone_mode_offset = ftell(ifp);
       tone_mode_size = len;
@@ -5846,7 +5861,7 @@ nf: order = 0x4949;
     }
     if ((tag | 0x70) == 0x2070 && (type == 4 || type == 13))
       fseek (ifp, get4()+base, SEEK_SET);
-    if (tag == 0x2020)
+    if (tag == 0x2020 && !strncmp(buf,"OLYMP",5))
       parse_thumb_note (base, 257, 258);
     if (tag == 0x2040)
       parse_makernote (base, 0x2040);
@@ -6159,12 +6174,13 @@ int CLASS parse_tiff_ifd (int base)
       case 258:				/* BitsPerSample */
       case 61443:
 	tiff_ifd[ifd].samples = len & 7;
-	tiff_ifd[ifd].bps = getint(type);
+	if ((tiff_ifd[ifd].bps = getint(type)) > 32)
+	     tiff_ifd[ifd].bps = 8;
+	if (tiff_bps < tiff_ifd[ifd].bps)
+	    tiff_bps = tiff_ifd[ifd].bps;
 	break;
       case 61446:
 	raw_height = 0;
-	if (tiff_ifd[ifd].bps > 12) break;
-	load_raw = &CLASS packed_load_raw;
 	load_flags = get4() ? 24:80;
 	break;
       case 259:				/* Compression */
@@ -6453,7 +6469,7 @@ int CLASS parse_tiff_ifd (int base)
       case 50708:			/* UniqueCameraModel */
 	if (model[0]) break;
 	fgets (make, 64, ifp);
-        if ((cp = strchr(make,' '))) {
+	if ((cp = strchr(make,' '))) {
 	  strcpy(model,cp+1);
 	  *cp = 0;
 	}
@@ -6495,7 +6511,7 @@ int CLASS parse_tiff_ifd (int base)
 	break;
       case 50715:			/* BlackLevelDeltaH */
       case 50716:			/* BlackLevelDeltaV */
-	for (num=i=0; i < len && i < 65536; i++)
+	for (num=i=0; i < (len & 0xffff); i++)
 	  num += getreal(type);
 	black += num/len + 0.5;
 	break;
@@ -6546,7 +6562,7 @@ int CLASS parse_tiff_ifd (int base)
 	width = getint(type) - left_margin;
 	break;
       case 50830:			/* MaskedAreas */
-        for (i=0; i < len && i < 32; i++)
+	for (i=0; i < len && i < 32; i++)
 	  ((int *)mask)[i] = getint(type);
 	black = 0;
 	break;
@@ -6642,6 +6658,10 @@ void CLASS apply_tiff()
     if (max_samp > 3) max_samp = 3;
     os = raw_width*raw_height;
     ns = tiff_ifd[i].width*tiff_ifd[i].height;
+    if (tiff_bps) {
+      os *= tiff_bps;
+      ns *= tiff_ifd[i].bps;
+    }
     if ((tiff_ifd[i].comp != 6 || tiff_ifd[i].samples != 3) &&
 	(tiff_ifd[i].width | tiff_ifd[i].height) < 0x10000 &&
 	(unsigned)tiff_ifd[i].bps < 33 && (unsigned)tiff_ifd[i].samples < 13 &&
@@ -6670,6 +6690,7 @@ void CLASS apply_tiff()
       case 32767:
 	if (tiff_ifd[raw].bytes == raw_width*raw_height) {
 	  tiff_bps = 12;
+	  maximum = 4095;
 	  load_raw = &CLASS sony_arw2_load_raw;			break;
 	}
 	if (tiff_ifd[raw].bytes*8 != (int)(raw_width*raw_height*tiff_bps)) {
@@ -6685,6 +6706,9 @@ void CLASS apply_tiff()
 	if (!strncmp(make,"OLYMPUS",7) &&
 		tiff_ifd[raw].bytes*2 == raw_width*raw_height*3)
 	  load_flags = 24;
+	if (!strcmp(make,"SONY") && tiff_bps < 14 &&
+		tiff_ifd[raw].bytes == raw_width*raw_height*2)
+	    tiff_bps = 14;
 	if (tiff_ifd[raw].bytes*5 == raw_width*raw_height*8) {
 	  load_flags = 81;
 	  tiff_bps = 12;
@@ -6694,12 +6718,16 @@ void CLASS apply_tiff()
 	  case 12: if (tiff_ifd[raw].phint == 2)
 		     load_flags = 6;
 		   load_raw = &CLASS packed_load_raw;		break;
-	  case 14: load_flags = 0;
+	  case 14: load_raw = &CLASS packed_load_raw;
+		   if (tiff_ifd[raw].bytes*4 == raw_width*raw_height*7) break;
+		   load_flags = 0;
 	  case 16: load_raw = &CLASS unpacked_load_raw;
 		   if (!strncmp(make,"OLYMPUS",7) &&
 			tiff_ifd[raw].bytes*7 > raw_width*raw_height)
 		     load_raw = &CLASS olympus_load_raw;
 	}
+	if (filters == 9 && tiff_ifd[raw].bytes*8 < raw_width*raw_height*tiff_bps)
+	  load_raw = &CLASS fuji_xtrans_load_raw;
 	break;
       case 6:  case 7:  case 99:
 	load_raw = &CLASS lossless_jpeg_load_raw;		break;
@@ -6737,8 +6765,8 @@ void CLASS apply_tiff()
   if (!dng_version)
     if ( (tiff_samples == 3 && tiff_ifd[raw].bytes && tiff_bps != 14 &&
 	  (tiff_compress & -16) != 32768)
-      || (tiff_bps == 8 && !strcasestr(make,"Kodak") &&
-	  !strstr(model2,"DEBUG RAW")))
+      || (tiff_bps == 8 && strncmp(make,"Phase",5) &&
+	  !strcasestr(make,"Kodak") && !strstr(model2,"DEBUG RAW")))
       is_raw = 0;
   for (i=0; i < tiff_nifds; i++)
     if ((int) i != raw && tiff_ifd[i].samples == max_samp &&
@@ -7159,10 +7187,10 @@ void CLASS parse_fuji (int offset)
       FORC4 cam_mul[c ^ 1] = get2();
     } else if (tag == 0x9650) {		/* FUJIFILM exposure bias - NKBJ */
       fuji_dr = get2();
-    } else if (tag == 0xc000) {
+    } else if (tag == 0xc000 && len > 20000) {
       c = order;
       order = 0x4949;
-      if ((tag = get4()) > 10000) tag = get4();
+      while ((tag = get4()) > raw_width);
       width = tag;
       height = get4();
       order = c;
@@ -7184,7 +7212,7 @@ int CLASS parse_jpeg (int offset)
     order = 0x4d4d;
     len   = get2() - 2;
     save  = ftell(ifp);
-    if (mark == 0xc0 || mark == 0xc3) {
+    if (mark == 0xc0 || mark == 0xc3 || mark == 0xc9) {
       fgetc(ifp);
       raw_height = get2();
       raw_width  = get2();
@@ -7239,6 +7267,72 @@ void CLASS parse_riff()
     fseek (ifp, size, SEEK_CUR);
 }
 
+void CLASS parse_crx (int end)
+{
+  unsigned i, save, size, tag, base;
+  static int index=0, wide, high, off, len;
+
+  order = 0x4d4d;
+  while (ftell(ifp)+7 < end) {
+    save = ftell(ifp);
+    if ((size = get4()) < 8) break;
+    switch (tag = get4()) {
+      case 0x6d6f6f76:				/* moov */
+      case 0x7472616b:				/* trak */
+      case 0x6d646961:				/* mdia */
+      case 0x6d696e66:				/* minf */
+      case 0x7374626c:				/* stbl */
+	parse_crx (save+size);
+	break;
+      case 0x75756964:				/* uuid */
+	switch (i=get4()) {
+	  case 0xeaf42b5e: fseek (ifp,  8, SEEK_CUR);
+	  case 0x85c0b687: fseek (ifp, 12, SEEK_CUR);
+	    parse_crx (save+size);
+	}
+	break;
+      case 0x434d5431:				/* CMT1 */
+      case 0x434d5432:				/* CMT2 */
+	base = ftell(ifp);
+	order = get2();
+	fseek (ifp, 6, SEEK_CUR);
+	tag & 1 ? (void)parse_tiff_ifd (base) : parse_exif (base);
+	order = 0x4d4d;
+	break;
+      case 0x746b6864:				/* tkhd */
+	fseek (ifp, 12, SEEK_CUR);
+	index = get4();
+	fseek (ifp, 58, SEEK_CUR);
+	wide = get4();
+	high = get4();
+	break;
+      case 0x7374737a:				/* stsz */
+	len = (get4(),get4());
+	break;
+      case 0x636f3634:				/* co64 */
+	fseek (ifp, 12, SEEK_CUR);
+	off = get4();
+	switch (index) {
+	  case 1:			/* 1 = full size, 2 = 27% size */
+	    thumb_width  = wide;
+	    thumb_height = high;
+	    thumb_length = len;
+	    thumb_offset = off;
+	    break;
+	  case 3:
+	    raw_width  = wide;
+	    raw_height = high;
+	    data_offset = off;
+	    load_raw = &CLASS canon_crx_load_raw;
+	}
+	break;
+      case 0x50525657:				/* PRVW */
+	fseek (ifp, 6, SEEK_CUR);
+    }
+    fseek (ifp, save+size, SEEK_SET);
+  }
+}
+
 void CLASS parse_qt (int end)
 {
   unsigned save, size;
@@ -7496,12 +7590,16 @@ void CLASS adobe_coeff (const char *make, const char *model)
 	{ 6188,-1341,-890,-7168,14489,2937,-2640,3228,8483 } },
     { "Canon EOS 5DS", 0, 0x3c96,
 	{ 6250,-711,-808,-5153,12794,2636,-1249,2198,5610 } },
+    { "Canon EOS 5D Mark IV", 0, 0,
+	{ 6446,-366,-864,-4436,12204,2513,-952,2496,6348 } },
     { "Canon EOS 5D Mark III", 0, 0x3c80,
 	{ 6722,-635,-963,-4287,12460,2028,-908,2162,5668 } },
     { "Canon EOS 5D Mark II", 0, 0x3cf0,
 	{ 4716,603,-830,-7798,15474,2480,-1496,1937,6651 } },
     { "Canon EOS 5D", 0, 0xe6c,
 	{ 6347,-479,-972,-8297,15954,2480,-1968,2131,7649 } },
+    { "Canon EOS 6D Mark II", 0, 0,
+	{ 6875,-970,-932,-4691,12459,2501,-874,1953,5809 } },
     { "Canon EOS 6D", 0, 0x3c82,
 	{ 7034,-804,-1014,-4420,12564,2058,-851,1994,5758 } },
     { "Canon EOS 7D Mark II", 0, 0x3510,
@@ -7524,8 +7622,14 @@ void CLASS adobe_coeff (const char *make, const char *model)
 	{ 6719,-994,-925,-4408,12426,2211,-887,2129,6051 } },
     { "Canon EOS 70D", 0, 0x3bc7,
 	{ 7034,-804,-1014,-4420,12564,2058,-851,1994,5758 } },
+    { "Canon EOS 77D", 0, 0,
+	{ 7377,-742,-998,-4235,11981,2549,-673,1918,5538 } },
+    { "Canon EOS 80D", 0, 0,
+	{ 7457,-671,-937,-4849,12495,2643,-1213,2354,5492 } },
     { "Canon EOS 100D", 0, 0x350f,
 	{ 6602,-841,-939,-4472,12458,2247,-975,2039,6148 } },
+    { "Canon EOS 200D", 0, 0,
+	{ 7377,-742,-998,-4235,11981,2549,-673,1918,5538 } },
     { "Canon EOS 300D", 0, 0xfa0,
 	{ 8197,-2000,-1118,-6714,14335,2592,-2536,3178,8266 } },
     { "Canon EOS 350D", 0, 0xfff,
@@ -7548,14 +7652,30 @@ void CLASS adobe_coeff (const char *make, const char *model)
 	{ 6362,-823,-847,-4426,12109,2616,-743,1857,5635 } },
     { "Canon EOS 760D", 0, 0x350f,
 	{ 6362,-823,-847,-4426,12109,2616,-743,1857,5635 } },
+    { "Canon EOS 800D", 0, 0,
+	{ 6970,-512,-968,-4425,12161,2553,-739,1982,5601 } },
     { "Canon EOS 1000D", 0, 0xe43,
 	{ 6771,-1139,-977,-7818,15123,2928,-1244,1437,7533 } },
     { "Canon EOS 1100D", 0, 0x3510,
 	{ 6444,-904,-893,-4563,12308,2535,-903,2016,6728 } },
     { "Canon EOS 1200D", 0, 0x37c2,
 	{ 6461,-907,-882,-4300,12184,2378,-819,1944,5931 } },
+    { "Canon EOS 1300D", 0, 0x3510,
+	{ 6939,-1016,-866,-4428,12473,2177,-1175,2178,6162 } },
+    { "Canon EOS 1500D", 0, 0,
+	{ 8532,-701,-1167,-4095,11879,2508,-797,2424,7010 } },
+    { "Canon EOS 3000D", 0, 0,
+	{ 6939,-1016,-866,-4428,12473,2177,-1175,2178,6162 } },
+    { "Canon EOS M6", 0, 0,
+	{ 8532,-701,-1167,-4095,11879,2508,-797,2424,7010 } },
+    { "Canon EOS M5", 0, 0,	/* also M50 */
+	{ 8532,-701,-1167,-4095,11879,2508,-797,2424,7010 } },
     { "Canon EOS M3", 0, 0,
 	{ 6362,-823,-847,-4426,12109,2616,-743,1857,5635 } },
+    { "Canon EOS M100", 0, 0,
+	{ 8532,-701,-1167,-4095,11879,2508,-797,2424,7010 } },
+    { "Canon EOS M10", 0, 0,
+	{ 6400,-480,-888,-5294,13416,2047,-1296,2203,6137 } },
     { "Canon EOS M", 0, 0,
 	{ 6602,-841,-939,-4472,12458,2247,-975,2039,6148 } },
     { "Canon EOS-1Ds Mark III", 0, 0x3bb0,
@@ -7574,6 +7694,8 @@ void CLASS adobe_coeff (const char *make, const char *model)
 	{ 4374,3631,-1743,-7520,15212,2472,-2892,3632,8161 } },
     { "Canon EOS-1D C", 0, 0x3c4e,
 	{ 6847,-614,-1014,-4669,12737,2139,-1197,2488,6846 } },
+    { "Canon EOS-1D X Mark II", 0, 0,
+	{ 7596,-978,-967,-4808,12571,2503,-1398,2567,5752 } },
     { "Canon EOS-1D X", 0, 0x3c4e,
 	{ 6847,-614,-1014,-4669,12737,2139,-1197,2488,6846 } },
     { "Canon EOS-1D", 0, 0xe20,
@@ -7596,20 +7718,30 @@ void CLASS adobe_coeff (const char *make, const char *model)
 	{ 7474,-2301,-567,-4056,11456,2975,-222,716,4181 } },
     { "Canon PowerShot G16", 0, 0,
 	{ 8020,-2687,-682,-3704,11879,2052,-965,1921,5556 } },
+    { "Canon PowerShot G1 X Mark III", 0, 0,
+	{ 8532,-701,-1167,-4095,11879,2508,-797,2424,7010 } },
     { "Canon PowerShot G1 X", 0, 0,
 	{ 7378,-1255,-1043,-4088,12251,2048,-876,1946,5805 } },
     { "Canon PowerShot G1", 0, 0,
 	{ -4778,9467,2172,4743,-1141,4344,-5146,9908,6077,-1566,11051,557 } },
     { "Canon PowerShot G2", 0, 0,
 	{ 9087,-2693,-1049,-6715,14382,2537,-2291,2819,7790 } },
+    { "Canon PowerShot G3 X", 0, 0,
+	{ 9701,-3857,-921,-3149,11537,1817,-786,1817,5147 } },
     { "Canon PowerShot G3", 0, 0,
 	{ 9212,-2781,-1073,-6573,14189,2605,-2300,2844,7664 } },
+    { "Canon PowerShot G5 X", 0, 0,
+	{ 9602,-3823,-937,-2984,11495,1675,-407,1415,5049 } },
     { "Canon PowerShot G5", 0, 0,
 	{ 9757,-2872,-933,-5972,13861,2301,-1622,2328,7212 } },
     { "Canon PowerShot G6", 0, 0,
 	{ 9877,-3775,-871,-7613,14807,3072,-1448,1305,7485 } },
     { "Canon PowerShot G7 X", 0, 0,
 	{ 9602,-3823,-937,-2984,11495,1675,-407,1415,5049 } },
+    { "Canon PowerShot G9 X Mark II", 0, 0,
+	{ 10056,-4131,-944,-2576,11143,1625,-238,1294,5179 } },
+    { "Canon PowerShot G9 X", 0, 0,
+	{ 9602,-3823,-937,-2984,11495,1675,-407,1415,5049 } },
     { "Canon PowerShot G9", 0, 0,
 	{ 7368,-2141,-598,-5621,13254,2625,-1418,1696,5743 } },
     { "Canon PowerShot Pro1", 0, 0,
@@ -7668,6 +7800,8 @@ void CLASS adobe_coeff (const char *make, const char *model)
 	{ 14134,-5576,-1527,-1991,10719,1273,-1158,1929,3581 } },
     { "Canon PowerShot SX220", 0, 0,	/* DJC */
 	{ 13898,-5076,-1447,-1405,10109,1297,-244,1860,3687 } },
+    { "Canon IXUS 160", 0, 0,		/* DJC */
+	{ 11657,-3781,-1136,-3544,11262,2283,-160,1219,4700 } },
     { "Casio EX-S20", 0, 0,		/* DJC */
 	{ 11634,-3924,-1128,-4968,12954,2015,-1588,2648,7206 } },
     { "Casio EX-Z750", 0, 0,		/* DJC */
@@ -7682,6 +7816,8 @@ void CLASS adobe_coeff (const char *make, const char *model)
 	{ 20183,-4295,-423,-3940,15330,3985,-280,4870,9800 } },
     { "Contax N Digital", 0, 0xf1e,
 	{ 7777,1285,-1053,-9280,16543,2916,-3677,5679,7060 } },
+    { "DXO ONE", 0, 0,
+	{ 6596,-2079,-562,-4782,13016,1933,-970,1581,5181 } },
     { "Epson R-D1", 0, 0,
 	{ 6827,-1878,-732,-8429,16012,2564,-704,592,7145 } },
     { "Fujifilm E550", 0, 0,
@@ -7698,6 +7834,8 @@ void CLASS adobe_coeff (const char *make, const char *model)
 	{ 10004,-3219,-1201,-7036,15047,2107,-1863,2565,7736 } },
     { "Fujifilm F8", 0, 0,
 	{ 13690,-5358,-1474,-3369,11600,1998,-132,1554,4395 } },
+    { "Fujifilm GFX 50S", 0, 0,
+	{ 11756,-4754,-874,-3056,11045,2305,-381,1457,6006 } },
     { "Fujifilm S100FS", 514, 0,
 	{ 11521,-4355,-1065,-6524,13767,3058,-1466,1984,6045 } },
     { "Fujifilm S1", 0, 0,
@@ -7706,9 +7844,9 @@ void CLASS adobe_coeff (const char *make, const char *model)
 	{ 10004,-3219,-1201,-7036,15047,2107,-1863,2565,7736 } },
     { "Fujifilm S20", 512, 0x3fff,
 	{ 11401,-4498,-1312,-5088,12751,2613,-838,1568,5941 } },
-    { "Fujifilm S2Pro", 128, 0,
+    { "Fujifilm S2Pro", 128, 0xf15,
 	{ 12492,-4690,-1402,-7033,15423,1647,-1507,2111,7697 } },
-    { "Fujifilm S3Pro", 0, 0,
+    { "Fujifilm S3Pro", 0, 0x3dff,
 	{ 11807,-4612,-1294,-8927,16968,1988,-2120,2741,8006 } },
     { "Fujifilm S5Pro", 0, 0,
 	{ 12300,-5110,-1304,-9117,17143,1998,-1947,2448,8100 } },
@@ -7742,7 +7880,7 @@ void CLASS adobe_coeff (const char *make, const char *model)
 	{ 12300,-5110,-1304,-9117,17143,1998,-1947,2448,8100 } },
     { "Fujifilm HS10 HS11", 0, 0xf68,
 	{ 12440,-3954,-1183,-1123,9674,1708,-83,1614,4086 } },
-    { "Fujifilm HS2", 0, 0,
+    { "Fujifilm HS2", 0, 0xfef,
 	{ 13690,-5358,-1474,-3369,11600,1998,-132,1554,4395 } },
     { "Fujifilm HS3", 0, 0,
 	{ 13690,-5358,-1474,-3369,11600,1998,-132,1554,4395 } },
@@ -7750,6 +7888,8 @@ void CLASS adobe_coeff (const char *make, const char *model)
 	{ 12085,-4727,-953,-3257,11489,2002,-511,2046,4592 } },
     { "Fujifilm F900EXR", 0, 0,
 	{ 12085,-4727,-953,-3257,11489,2002,-511,2046,4592 } },
+    { "Fujifilm X100F", 0, 0,
+	{ 11434,-4948,-1210,-3746,12042,1903,-666,1479,5235 } },
     { "Fujifilm X100S", 0, 0,
 	{ 10592,-4262,-1008,-3514,11355,2465,-870,2025,6386 } },
     { "Fujifilm X100T", 0, 0,
@@ -7762,26 +7902,48 @@ void CLASS adobe_coeff (const char *make, const char *model)
 	{ 11768,-4971,-1133,-4904,12927,2183,-480,1723,4605 } },
     { "Fujifilm X30", 0, 0,
 	{ 12328,-5256,-1144,-4469,12927,1675,-87,1291,4351 } },
+    { "Fujifilm X70", 0, 0,
+	{ 10450,-4329,-878,-3217,11105,2421,-752,1758,6519 } },
     { "Fujifilm X-Pro1", 0, 0,
 	{ 10413,-3996,-993,-3721,11640,2361,-733,1540,6011 } },
+    { "Fujifilm X-Pro2", 0, 0,
+	{ 11434,-4948,-1210,-3746,12042,1903,-666,1479,5235 } },
+    { "Fujifilm X-A10", 0, 0,
+	{ 11540,-4999,-991,-2949,10963,2278,-382,1049,5605 } },
+    { "Fujifilm X-A20", 0, 0,
+	{ 11540,-4999,-991,-2949,10963,2278,-382,1049,5605 } },
     { "Fujifilm X-A1", 0, 0,
 	{ 11086,-4555,-839,-3512,11310,2517,-815,1341,5940 } },
     { "Fujifilm X-A2", 0, 0,
 	{ 10763,-4560,-917,-3346,11311,2322,-475,1135,5843 } },
+    { "Fujifilm X-A3", 0, 0,
+	{ 12407,-5222,-1086,-2971,11116,2120,-294,1029,5284 } },
+    { "Fujifilm X-A5", 0, 0,
+	{ 11673,-4760,-1041,-3988,12058,2166,-771,1417,5569 } },
     { "Fujifilm X-E1", 0, 0,
 	{ 10413,-3996,-993,-3721,11640,2361,-733,1540,6011 } },
+    { "Fujifilm X-E2S", 0, 0,
+	{ 11562,-5118,-961,-3022,11007,2311,-525,1569,6097 } },
     { "Fujifilm X-E2", 0, 0,
 	{ 8458,-2451,-855,-4597,12447,2407,-1475,2482,6526 } },
+    { "Fujifilm X-E3", 0, 0,
+	{ 11434,-4948,-1210,-3746,12042,1903,-666,1479,5235 } },
+    { "Fujifilm X-H1", 0, 0,
+	{ 11434,-4948,-1210,-3746,12042,1903,-666,1479,5235 } },
     { "Fujifilm X-M1", 0, 0,
 	{ 10413,-3996,-993,-3721,11640,2361,-733,1540,6011 } },
     { "Fujifilm X-S1", 0, 0,
 	{ 13509,-6199,-1254,-4430,12733,1865,-331,1441,5022 } },
-    { "Fujifilm X-T1", 0, 0,
+    { "Fujifilm X-T1", 0, 0,	/* also X-T10 */
 	{ 8458,-2451,-855,-4597,12447,2407,-1475,2482,6526 } },
+    { "Fujifilm X-T2", 0, 0,	/* also X-T20 */
+	{ 11434,-4948,-1210,-3746,12042,1903,-666,1479,5235 } },
     { "Fujifilm XF1", 0, 0,
 	{ 13509,-6199,-1254,-4430,12733,1865,-331,1441,5022 } },
-    { "Fujifilm XQ", 0, 0,	// XQ1 and XQ2
+    { "Fujifilm XQ", 0, 0,	/* XQ1 and XQ2 */
 	{ 9252,-2704,-1064,-5893,14265,1717,-1101,2341,4349 } },
+    { "GoPro HERO5 Black", 0, 0,
+	{ 10344,-4210,-620,-2315,10625,1948,93,1058,5541 } },
     { "Imacon Ixpress", 0, 0,		/* DJC */
 	{ 7025,-1415,-704,-5188,13765,1424,-1248,2742,6038 } },
     { "Kodak NC2000", 0, 0,
@@ -7894,6 +8056,8 @@ void CLASS adobe_coeff (const char *make, const char *model)
 	{ 7013,-1408,-635,-5268,12902,2640,-1470,2801,7379 } },
     { "Nikon D3300", 0, 0,
 	{ 6988,-1384,-714,-5631,13410,2447,-1485,2204,7318 } },
+    { "Nikon D3400", 0, 0,
+	{ 6988,-1384,-714,-5631,13410,2447,-1485,2204,7318 } },
     { "Nikon D300", 0, 0,
 	{ 9030,-1992,-715,-8465,16302,2255,-2689,3217,8069 } },
     { "Nikon D3X", 0, 0,
@@ -7922,8 +8086,14 @@ void CLASS adobe_coeff (const char *make, const char *model)
 	{ 6988,-1384,-714,-5631,13410,2447,-1485,2204,7318 } },
     { "Nikon D5500", 0, 0,
 	{ 8821,-2938,-785,-4178,12142,2287,-824,1651,6860 } },
+    { "Nikon D5600", 0, 0,
+	{ 8821,-2938,-785,-4178,12142,2287,-824,1651,6860 } },
+    { "Nikon D500", 0, 0,
+	{ 8813,-3210,-1036,-4703,12868,2021,-1054,1940,6129 } },
     { "Nikon D50", 0, 0,
 	{ 7732,-2422,-789,-8238,15884,2498,-859,783,7330 } },
+    { "Nikon D5", 0, 0,
+	{ 9200,-3522,-992,-5755,13803,2117,-753,1486,6338 } },
     { "Nikon D600", 0, 0x3e07,
 	{ 8178,-2245,-609,-4857,12394,2776,-1207,2086,7298 } },
     { "Nikon D610", 0, 0,
@@ -7936,12 +8106,16 @@ void CLASS adobe_coeff (const char *make, const char *model)
 	{ 8322,-3112,-1047,-6367,14342,2179,-988,1638,6394 } },
     { "Nikon D7200", 0, 0,
 	{ 8322,-3112,-1047,-6367,14342,2179,-988,1638,6394 } },
+    { "Nikon D7500", 0, 0,
+	{ 8813,-3210,-1036,-4703,12868,2021,-1054,1940,6129 } },
     { "Nikon D750", 0, 0,
 	{ 9020,-2890,-715,-4535,12436,2348,-934,1919,7086 } },
     { "Nikon D700", 0, 0,
 	{ 8139,-2171,-663,-8747,16541,2295,-1925,2008,8093 } },
     { "Nikon D70", 0, 0,
 	{ 7732,-2422,-789,-8238,15884,2498,-859,783,7330 } },
+    { "Nikon D850", 0, 0,
+	{ 10405,-3755,-1270,-5461,13787,1793,-1040,2015,6785 } },
     { "Nikon D810", 0, 0,
 	{ 9369,-3195,-791,-4488,12430,2301,-893,1796,6872 } },
     { "Nikon D800", 0, 0,
@@ -7982,6 +8156,8 @@ void CLASS adobe_coeff (const char *make, const char *model)
 	{ 7971,-2314,-913,-8451,15762,2894,-1442,1520,7610 } },
     { "Nikon COOLPIX A", 0, 0,
 	{ 8198,-2239,-724,-4871,12389,2798,-1043,2050,7181 } },
+    { "Nikon COOLPIX B700", 200, 0,
+	{ 14387,-6014,-1299,-1357,9975,1616,467,1047,4744 } },
     { "Nikon COOLPIX P330", 200, 0,
 	{ 10321,-3920,-931,-2750,11146,1824,-442,1545,5539 } },
     { "Nikon COOLPIX P340", 200, 0,
@@ -8000,8 +8176,8 @@ void CLASS adobe_coeff (const char *make, const char *model)
 	{ 5958,-1559,-571,-4021,11453,2939,-634,1548,5087 } },
     { "Nikon 1 J4", 0, 0,
 	{ 5958,-1559,-571,-4021,11453,2939,-634,1548,5087 } },
-    { "Nikon 1 J5", 0, 0,		/* DJC */
-	{ 2621,-856,500,-4471,8761,5711,-1321,2644,11945 } },
+    { "Nikon 1 J5", 0, 0,
+	{ 7520,-2518,-645,-3844,12102,1945,-913,2249,6835 } },
     { "Nikon 1 S2", 200, 0,
 	{ 6612,-1342,-618,-3338,11055,2623,-174,1792,5075 } },
     { "Nikon 1 V2", 0, 0,
@@ -8012,6 +8188,8 @@ void CLASS adobe_coeff (const char *make, const char *model)
 	{ 6588,-1305,-693,-3277,10987,2634,-355,2016,5106 } },
     { "Nikon 1 ", 0, 0,		/* J1, J2, S1, V1 */
 	{ 8994,-2667,-865,-4594,12324,2552,-699,1786,6260 } },
+    { "Olympus AIR A01", 0, 0,
+	{ 8992,-3093,-639,-2563,10721,2122,-437,1270,5473 } },
     { "Olympus C5050", 0, 0,
 	{ 10508,-3124,-1273,-6079,14294,1901,-1653,2306,6237 } },
     { "Olympus C5060", 0, 0,
@@ -8078,18 +8256,26 @@ void CLASS adobe_coeff (const char *make, const char *model)
 	{ 8380,-2630,-639,-2887,10725,2496,-627,1427,5438 } },
     { "Olympus E-PL7", 0, 0,
 	{ 9197,-3190,-659,-2606,10830,2039,-458,1250,5458 } },
+    { "Olympus E-PL8", 0, 0,
+	{ 9197,-3190,-659,-2606,10830,2039,-458,1250,5458 } },
+    { "Olympus E-PL9", 0, 0,
+	{ 8380,-2630,-639,-2887,10725,2496,-627,1427,5438 } },
     { "Olympus E-PM1", 0, 0,
 	{ 7575,-2159,-571,-3722,11341,2725,-1434,2819,6271 } },
     { "Olympus E-PM2", 0, 0,
 	{ 8380,-2630,-639,-2887,10725,2496,-627,1427,5438 } },
-    { "Olympus E-M10", 0, 0,
+    { "Olympus E-M10", 0, 0,	/* also E-M10 Mark II & III */
 	{ 8380,-2630,-639,-2887,10725,2496,-627,1427,5438 } },
+    { "Olympus E-M1Mark II", 0, 0,
+	{ 9383,-3170,-763,-2457,10702,2020,-384,1236,5552 } },
     { "Olympus E-M1", 0, 0,
 	{ 7687,-1984,-606,-4327,11928,2721,-1381,2339,6452 } },
     { "Olympus E-M5MarkII", 0, 0,
 	{ 9422,-3258,-711,-2655,10898,2015,-512,1354,5512 } },
     { "Olympus E-M5", 0, 0xfe1,
 	{ 8380,-2630,-639,-2887,10725,2496,-627,1427,5438 } },
+    { "Olympus PEN-F", 0, 0,
+	{ 9476,-3182,-765,-2613,10958,1893,-449,1315,5268 } },
     { "Olympus SH-2", 0, 0,
 	{ 10156,-3425,-1077,-2611,11177,1624,-385,1592,5080 } },
     { "Olympus SP350", 0, 0,
@@ -8110,6 +8296,8 @@ void CLASS adobe_coeff (const char *make, const char *model)
 	{ 8360,-2420,-880,-3928,12353,1739,-1381,2416,5173 } },
     { "Olympus TG-4", 0, 0,
 	{ 11426,-4159,-1126,-2066,10678,1593,-120,1327,4998 } },
+    { "Olympus TG-5", 0, 0,
+	{ 10899,-3833,-1082,-2112,10736,1575,-267,1452,5269 } },
     { "Olympus XZ-10", 0, 0,
 	{ 9777,-3483,-925,-2886,11297,1800,-602,1663,5134 } },
     { "Olympus XZ-1", 0, 0,
@@ -8144,39 +8332,57 @@ void CLASS adobe_coeff (const char *make, const char *model)
 	{ 8843,-2837,-625,-5025,12644,2668,-411,1234,7410 } },
     { "Pentax K-r", 0, 0,
 	{ 9895,-3077,-850,-5304,13035,2521,-883,1768,6936 } },
+    { "Pentax K-1", 0, 0,
+	{ 8596,-2981,-639,-4202,12046,2431,-685,1424,6122 } },
+    { "Pentax K-30", 0, 0,
+	{ 8710,-2632,-1167,-3995,12301,1881,-981,1719,6535 } },
+    { "Pentax K-3 II", 0, 0,
+	{ 8626,-2607,-1155,-3995,12301,1881,-1039,1822,6925 } },
     { "Pentax K-3", 0, 0,
 	{ 7415,-2052,-721,-5186,12788,2682,-1446,2157,6773 } },
     { "Pentax K-5 II", 0, 0,
 	{ 8170,-2725,-639,-4440,12017,2744,-771,1465,6599 } },
     { "Pentax K-5", 0, 0,
 	{ 8713,-2833,-743,-4342,11900,2772,-722,1543,6247 } },
+    { "Pentax K-70", 0, 0,
+	{ 8270,-2117,-1299,-4359,12953,1515,-1078,1933,5975 } },
     { "Pentax K-7", 0, 0,
 	{ 9142,-2947,-678,-8648,16967,1663,-2224,2898,8615 } },
     { "Pentax K-S1", 0, 0,
 	{ 8512,-3211,-787,-4167,11966,2487,-638,1288,6054 } },
-    { "Pentax K-S2", 0, 0,		/* DJC */
-	{ 5322,-2195,41,-3689,8902,4788,-858,1831,7969 } },
+    { "Pentax K-S2", 0, 0,
+	{ 8662,-3280,-798,-3928,11771,2444,-586,1232,6054 } },
+    { "Pentax KP", 0, 0,
+	{ 8617,-3228,-1034,-4674,12821,2044,-803,1577,5728 } },
     { "Pentax Q-S1", 0, 0,
 	{ 12995,-5593,-1107,-1879,10139,2027,-64,1233,4919 } },
     { "Pentax 645D", 0, 0x3e00,
 	{ 10646,-3593,-1158,-3329,11699,1831,-667,2874,6287 } },
     { "Panasonic DMC-CM1", 15, 0,
 	{ 8770,-3194,-820,-2871,11281,1803,-513,1552,4434 } },
+    { "Panasonic DC-FZ80", 0, 0,
+	{ 8550,-2908,-842,-3195,11529,1881,-338,1603,4631 } },
     { "Panasonic DMC-FZ8", 0, 0xf7f,
 	{ 8986,-2755,-802,-6341,13575,3077,-1476,2144,6379 } },
     { "Panasonic DMC-FZ18", 0, 0,
 	{ 9932,-3060,-935,-5809,13331,2753,-1267,2155,5575 } },
     { "Panasonic DMC-FZ28", 15, 0xf96,
 	{ 10109,-3488,-993,-5412,12812,2916,-1305,2140,5543 } },
+    { "Panasonic DMC-FZ2500", 15, 0,
+	{ 7386,-2443,-743,-3437,11864,1757,-608,1660,4766 } },
+    { "Panasonic DMC-FZ330", 15, 0,
+	{ 8378,-2798,-769,-3068,11410,1877,-538,1792,4623 } },
+    { "Panasonic DMC-FZ300", 15, 0,
+	{ 8378,-2798,-769,-3068,11410,1877,-538,1792,4623 } },
     { "Panasonic DMC-FZ30", 0, 0xf94,
 	{ 10976,-4029,-1141,-7918,15491,2600,-1670,2071,8246 } },
-    { "Panasonic DMC-FZ3", 15, 0,
+    { "Panasonic DMC-FZ3", 15, 0,	/* FZ35, FZ38 */
 	{ 9938,-2780,-890,-4604,12393,2480,-1117,2304,4620 } },
-    { "Panasonic DMC-FZ4", 15, 0,
+    { "Panasonic DMC-FZ4", 15, 0,	/* FZ40, FZ45 */
 	{ 13639,-5535,-1371,-1698,9633,2430,316,1152,4108 } },
     { "Panasonic DMC-FZ50", 0, 0,
 	{ 7906,-2709,-594,-6231,13351,3220,-1922,2631,6537 } },
-    { "Panasonic DMC-FZ7", 15, 0,
+    { "Panasonic DMC-FZ7", 15, 0,	/* FZ70, FZ72 */
 	{ 11532,-4324,-1066,-2375,10847,1749,-564,1699,4351 } },
     { "Leica V-LUX1", 0, 0,
 	{ 7906,-2709,-594,-6231,13351,3220,-1922,2631,6537 } },
@@ -8218,6 +8424,8 @@ void CLASS adobe_coeff (const char *make, const char *model)
 	{ 10148,-3743,-991,-2837,11366,1659,-701,1893,4899 } },
     { "Leica D-LUX 6", 15, 0,
 	{ 10148,-3743,-991,-2837,11366,1659,-701,1893,4899 } },
+    { "Panasonic DMC-LX9", 15, 0,
+	{ 7790,-2736,-755,-3452,11870,1769,-628,1647,4898 } },
     { "Panasonic DMC-FZ1000", 15, 0,
 	{ 7830,-2696,-763,-3325,11667,1866,-641,1712,4824 } },
     { "Leica V-LUX (Typ 114)", 15, 0,
@@ -8248,6 +8456,12 @@ void CLASS adobe_coeff (const char *make, const char *model)
 	{ 7798,-2562,-740,-3879,11584,2613,-1055,2248,5434 } },
     { "Panasonic DMC-G6", 15, 0xfff,
 	{ 8294,-2891,-651,-3869,11590,2595,-1183,2267,5352 } },
+    { "Panasonic DMC-G7", 15, 0xfff,
+	{ 7610,-2780,-576,-4614,12195,2733,-1375,2393,6490 } },
+    { "Panasonic DMC-G8", 15, 0xfff,	/* G8, G80, G81, G85 */
+	{ 7610,-2780,-576,-4614,12195,2733,-1375,2393,6490 } },
+    { "Panasonic DC-G9", 15, 0xfff,
+	{ 7685,-2375,-634,-3687,11700,2249,-748,1546,5111 } },
     { "Panasonic DMC-GF1", 15, 0xf92,
 	{ 7888,-1902,-1011,-8106,16085,2099,-2353,2866,7330 } },
     { "Panasonic DMC-GF2", 15, 0xfff,
@@ -8260,6 +8474,10 @@ void CLASS adobe_coeff (const char *make, const char *model)
 	{ 8130,-2801,-946,-3520,11289,2552,-1314,2511,5791 } },
     { "Panasonic DMC-GF7", 15, 0,
 	{ 7610,-2780,-576,-4614,12195,2733,-1375,2393,6490 } },
+    { "Panasonic DMC-GF8", 15, 0,
+	{ 7610,-2780,-576,-4614,12195,2733,-1375,2393,6490 } },
+    { "Panasonic DC-GF9", 15, 0,
+	{ 7610,-2780,-576,-4614,12195,2733,-1375,2393,6490 } },
     { "Panasonic DMC-GH1", 15, 0xf92,
 	{ 6299,-1466,-532,-6535,13852,2969,-2331,3112,5984 } },
     { "Panasonic DMC-GH2", 15, 0xf95,
@@ -8268,6 +8486,10 @@ void CLASS adobe_coeff (const char *make, const char *model)
 	{ 6559,-1752,-491,-3672,11407,2586,-962,1875,5130 } },
     { "Panasonic DMC-GH4", 15, 0,
 	{ 7122,-2108,-512,-3155,11201,2231,-541,1423,5045 } },
+    { "Panasonic DC-GH5S", 15, 0,
+	{ 6929,-2355,-708,-4192,12534,1828,-1097,1989,5195 } },
+    { "Panasonic DC-GH5", 15, 0,
+	{ 7641,-2336,-605,-3218,11299,2187,-485,1338,5121 } },
     { "Panasonic DMC-GM1", 15, 0,
 	{ 6770,-1895,-744,-5232,13145,2303,-1664,2691,5703 } },
     { "Panasonic DMC-GM5", 15, 0,
@@ -8276,14 +8498,44 @@ void CLASS adobe_coeff (const char *make, const char *model)
 	{ 6763,-1919,-863,-3868,11515,2684,-1216,2387,5879 } },
     { "Panasonic DMC-GX7", 15, 0,
 	{ 7610,-2780,-576,-4614,12195,2733,-1375,2393,6490 } },
-    { "Panasonic DMC-TZ6", 15, 0,
-	{ 8607,-2822,-808,-3755,11930,2049,-820,2060,5224 } },
-    { "Panasonic DMC-ZS4", 15, 0,
+    { "Panasonic DMC-GX85", 15, 0,
+	{ 7771,-3020,-629,-4029,11950,2345,-821,1977,6119 } },
+    { "Panasonic DMC-GX8", 15, 0,
+	{ 7564,-2263,-606,-3148,11239,2177,-540,1435,4853 } },
+    { "Panasonic DC-GX9", 15, 0,
+	{ 7564,-2263,-606,-3148,11239,2177,-540,1435,4853 } },
+    { "Panasonic DMC-ZS100", 15, 0,
+	{ 7790,-2736,-755,-3452,11870,1769,-628,1647,4898 } },
+    { "Panasonic DC-ZS200", 15, 0,
+	{ 7790,-2736,-755,-3452,11870,1769,-628,1647,4898 } },
+    { "Panasonic DMC-ZS40", 15, 0,
 	{ 8607,-2822,-808,-3755,11930,2049,-820,2060,5224 } },
-    { "Panasonic DMC-TZ7", 15, 0,
-	{ 8802,-3135,-789,-3151,11468,1904,-550,1745,4810 } },
-    { "Panasonic DMC-ZS5", 15, 0,
+    { "Panasonic DMC-ZS50", 15, 0,
 	{ 8802,-3135,-789,-3151,11468,1904,-550,1745,4810 } },
+    { "Panasonic DMC-TZ82", 15, 0,
+	{ 8550,-2908,-842,-3195,11529,1881,-338,1603,4631 } },
+    { "Panasonic DMC-ZS6", 15, 0,
+	{ 8550,-2908,-842,-3195,11529,1881,-338,1603,4631 } },
+    { "Panasonic DMC-ZS70", 15, 0,
+	{ 9052,-3117,-883,-3045,11346,1927,-205,1520,4730 } },
+    { "Leica S (Typ 007)", 0, 0,
+	{ 6063,-2234,-231,-5210,13787,1500,-1043,2866,6997 } },
+    { "Leica X", 0, 0,		/* X and X-U, both (Typ 113) */
+	{ 7712,-2059,-653,-3882,11494,2726,-710,1332,5958 } },
+    { "Leica Q (Typ 116)", 0, 0,
+	{ 11865,-4523,-1441,-5423,14458,935,-1587,2687,4830 } },
+    { "Leica M (Typ 262)", 0, 0,
+	{ 6653,-1486,-611,-4221,13303,929,-881,2416,7226 } },
+    { "Leica SL (Typ 601)", 0, 0,
+	{ 11865,-4523,-1441,-5423,14458,935,-1587,2687,4830 } },
+    { "Leica TL2", 0, 0,
+	{ 5836,-1626,-647,-5384,13326,2261,-1207,2129,5861 } },
+    { "Leica TL", 0, 0,
+	{ 5463,-988,-364,-4634,12036,2946,-766,1389,6522 } },
+    { "Leica CL", 0, 0,
+	{ 7414,-2393,-840,-5127,13180,2138,-1585,2468,5064 } },
+    { "Leica M10", 0, 0,
+	{ 8249,-2849,-620,-5415,14756,565,-957,3074,6517 } },
     { "Phase One H 20", 0, 0,		/* DJC */
 	{ 1313,1855,-109,-6715,15908,808,-327,1840,6020 } },
     { "Phase One H 25", 0, 0,
@@ -8302,6 +8554,10 @@ void CLASS adobe_coeff (const char *make, const char *model)
 	{ 14603,-4122,-528,-1810,9794,2017,-297,2763,5936 } },
     { "Red One", 704, 0xffff,		/* DJC */
 	{ 21014,-7891,-2613,-3056,12201,856,-2203,5125,8042 } },
+    { "Ricoh GR II", 0, 0,
+	{ 4630,-834,-423,-4977,12805,2417,-638,1467,6115 } },
+    { "Ricoh GR", 0, 0,
+	{ 3708,-543,-160,-5381,12254,3556,-1471,1929,8234 } },
     { "Samsung EX1", 0, 0x3e00,
 	{ 8898,-2498,-994,-3144,11328,2066,-760,1381,4576 } },
     { "Samsung EX2F", 0, 0x7ff,
@@ -8310,6 +8566,8 @@ void CLASS adobe_coeff (const char *make, const char *model)
 	{ 7557,-2522,-739,-4679,12949,1894,-840,1777,5311 } },
     { "Samsung NX mini", 0, 0,
 	{ 5222,-1196,-550,-6540,14649,2009,-1666,2819,5657 } },
+    { "Samsung NX3300", 0, 0,
+	{ 8060,-2933,-761,-4504,12890,1762,-630,1489,5227 } },
     { "Samsung NX3000", 0, 0,
 	{ 8060,-2933,-761,-4504,12890,1762,-630,1489,5227 } },
     { "Samsung NX30", 0, 0,	/* NX30, NX300, NX300M */
@@ -8344,18 +8602,24 @@ void CLASS adobe_coeff (const char *make, const char *model)
 	{ 16442,-2956,-2422,-2877,12128,750,-1136,6066,4559 } },
     { "Sony DSC-F828", 0, 0,
 	{ 7924,-1910,-777,-8226,15459,2998,-1517,2199,6818,-7242,11401,3481 } },
-    { "Sony DSC-R1", 512, 0,
+    { "Sony DSC-R1", 0, 0,
 	{ 8512,-2641,-694,-8042,15670,2526,-1821,2117,7414 } },
     { "Sony DSC-V3", 0, 0,
 	{ 7511,-2571,-692,-7894,15088,3060,-948,1111,8128 } },
-    { "Sony DSC-RX100M", 200, 0,	/* M2 and M3 */
+    { "Sony DSC-RX100M", 0, 0,		/* M2, M3, M4, and M5 */
 	{ 6596,-2079,-562,-4782,13016,1933,-970,1581,5181 } },
-    { "Sony DSC-RX100", 200, 0,
+    { "Sony DSC-RX100", 0, 0,
 	{ 8651,-2754,-1057,-3464,12207,1373,-568,1398,4434 } },
-    { "Sony DSC-RX10", 200, 0,
+    { "Sony DSC-RX10M4", 0, 0,
+	{ 7699,-2566,-629,-2967,11270,1928,-378,1286,4807 } },
+    { "Sony DSC-RX10", 0, 0,		/* also RX10M2, RX10M3 */
 	{ 6679,-1825,-745,-5047,13256,1953,-1580,2422,5183 } },
-    { "Sony DSC-RX1", 128, 0,
+    { "Sony DSC-RX1RM2", 0, 0,
+	{ 6629,-1900,-483,-4618,12349,2550,-622,1381,6514 } },
+    { "Sony DSC-RX1", 0, 0,
 	{ 6344,-1612,-462,-4863,12477,2681,-865,1786,6899 } },
+    { "Sony DSC-RX0", 200, 0,
+	{ 9396,-3507,-843,-2497,11111,1572,-343,1355,5089 } },
     { "Sony DSLR-A100", 0, 0xfeb,
 	{ 9437,-2811,-774,-8405,16215,2290,-710,596,7181 } },
     { "Sony DSLR-A290", 0, 0,
@@ -8372,72 +8636,88 @@ void CLASS adobe_coeff (const char *make, const char *model)
 	{ 6038,-1484,-579,-9145,16746,2512,-875,746,7218 } },
     { "Sony DSLR-A390", 0, 0,
 	{ 6038,-1484,-579,-9145,16746,2512,-875,746,7218 } },
-    { "Sony DSLR-A450", 128, 0xfeb,
+    { "Sony DSLR-A450", 0, 0xfeb,
 	{ 4950,-580,-103,-5228,12542,3029,-709,1435,7371 } },
-    { "Sony DSLR-A580", 128, 0xfeb,
+    { "Sony DSLR-A580", 0, 0xfeb,
 	{ 5932,-1492,-411,-4813,12285,2856,-741,1524,6739 } },
-    { "Sony DSLR-A500", 128, 0xfeb,
+    { "Sony DSLR-A500", 0, 0xfeb,
 	{ 6046,-1127,-278,-5574,13076,2786,-691,1419,7625 } },
-    { "Sony DSLR-A5", 128, 0xfeb,
+    { "Sony DSLR-A5", 0, 0xfeb,
 	{ 4950,-580,-103,-5228,12542,3029,-709,1435,7371 } },
-    { "Sony DSLR-A700", 128, 0,
+    { "Sony DSLR-A700", 0, 0,
 	{ 5775,-805,-359,-8574,16295,2391,-1943,2341,7249 } },
-    { "Sony DSLR-A850", 128, 0,
+    { "Sony DSLR-A850", 0, 0,
 	{ 5413,-1162,-365,-5665,13098,2866,-608,1179,8440 } },
-    { "Sony DSLR-A900", 128, 0,
+    { "Sony DSLR-A900", 0, 0,
 	{ 5209,-1072,-397,-8845,16120,2919,-1618,1803,8654 } },
-    { "Sony ILCA-77M2", 128, 0,
+    { "Sony ILCA-68", 0, 0,
+	{ 6435,-1903,-536,-4722,12449,2550,-663,1363,6517 } },
+    { "Sony ILCA-77M2", 0, 0,
 	{ 5991,-1732,-443,-4100,11989,2381,-704,1467,5992 } },
-    { "Sony ILCE-7M2", 128, 0,
+    { "Sony ILCA-99M2", 0, 0,
+	{ 6660,-1918,-471,-4613,12398,2485,-649,1433,6447 } },
+    { "Sony ILCE-6", 0, 0,		/* 6300, 6500 */
+	{ 5973,-1695,-419,-3826,11797,2293,-639,1398,5789 } },
+    { "Sony ILCE-7M2", 0, 0,
 	{ 5271,-712,-347,-6153,13653,2763,-1601,2366,7242 } },
-    { "Sony ILCE-7S", 128, 0,
+    { "Sony ILCE-7M3", 0, 0,
+	{ 7374,-2389,-551,-5435,13162,2519,-1006,1795,6552 } },
+    { "Sony ILCE-7S", 0, 0,	/* also ILCE-7SM2 */
 	{ 5838,-1430,-246,-3497,11477,2297,-748,1885,5778 } },
-    { "Sony ILCE-7R", 128, 0,
+    { "Sony ILCE-7RM3", 0, 0,
+	{ 6640,-1847,-503,-5238,13010,2474,-993,1673,6527 } },
+    { "Sony ILCE-7RM2", 0, 0,
+	{ 6629,-1900,-483,-4618,12349,2550,-622,1381,6514 } },
+    { "Sony ILCE-7R", 0, 0,
 	{ 4913,-541,-202,-6130,13513,2906,-1564,2151,7183 } },
-    { "Sony ILCE-7", 128, 0,
+    { "Sony ILCE-7", 0, 0,
 	{ 5271,-712,-347,-6153,13653,2763,-1601,2366,7242 } },
-    { "Sony ILCE", 128, 0,	/* 3000, 5000, 5100, 6000, and QX1 */
+    { "Sony ILCE-9", 0, 0,
+	{ 6389,-1703,-378,-4562,12265,2587,-670,1489,6550 } },
+    { "Sony ILCE", 0, 0,	/* 3000, 5000, 5100, 6000, and QX1 */
 	{ 5991,-1456,-455,-4764,12135,2980,-707,1425,6701 } },
-    { "Sony NEX-5N", 128, 0,
+    { "Sony NEX-5N", 0, 0,
 	{ 5991,-1456,-455,-4764,12135,2980,-707,1425,6701 } },
-    { "Sony NEX-5R", 128, 0,
+    { "Sony NEX-5R", 0, 0,
 	{ 6129,-1545,-418,-4930,12490,2743,-977,1693,6615 } },
-    { "Sony NEX-5T", 128, 0,
+    { "Sony NEX-5T", 0, 0,
 	{ 6129,-1545,-418,-4930,12490,2743,-977,1693,6615 } },
-    { "Sony NEX-3N", 128, 0,
+    { "Sony NEX-3N", 0, 0,
 	{ 6129,-1545,-418,-4930,12490,2743,-977,1693,6615 } },
     { "Sony NEX-3", 138, 0,		/* DJC */
 	{ 6907,-1256,-645,-4940,12621,2320,-1710,2581,6230 } },
     { "Sony NEX-5", 116, 0,		/* DJC */
 	{ 6807,-1350,-342,-4216,11649,2567,-1089,2001,6420 } },
-    { "Sony NEX-3", 128, 0,		/* Adobe */
+    { "Sony NEX-3", 0, 0,		/* Adobe */
 	{ 6549,-1550,-436,-4880,12435,2753,-854,1868,6976 } },
-    { "Sony NEX-5", 128, 0,		/* Adobe */
+    { "Sony NEX-5", 0, 0,		/* Adobe */
 	{ 6549,-1550,-436,-4880,12435,2753,-854,1868,6976 } },
-    { "Sony NEX-6", 128, 0,
+    { "Sony NEX-6", 0, 0,
 	{ 6129,-1545,-418,-4930,12490,2743,-977,1693,6615 } },
-    { "Sony NEX-7", 128, 0,
+    { "Sony NEX-7", 0, 0,
 	{ 5491,-1192,-363,-4951,12342,2948,-911,1722,7192 } },
-    { "Sony NEX", 128, 0,	/* NEX-C3, NEX-F3 */
+    { "Sony NEX", 0, 0,	/* NEX-C3, NEX-F3 */
 	{ 5991,-1456,-455,-4764,12135,2980,-707,1425,6701 } },
-    { "Sony SLT-A33", 128, 0,
+    { "Sony SLT-A33", 0, 0,
 	{ 6069,-1221,-366,-5221,12779,2734,-1024,2066,6834 } },
-    { "Sony SLT-A35", 128, 0,
+    { "Sony SLT-A35", 0, 0,
 	{ 5986,-1618,-415,-4557,11820,3120,-681,1404,6971 } },
-    { "Sony SLT-A37", 128, 0,
+    { "Sony SLT-A37", 0, 0,
 	{ 5991,-1456,-455,-4764,12135,2980,-707,1425,6701 } },
-    { "Sony SLT-A55", 128, 0,
+    { "Sony SLT-A55", 0, 0,
 	{ 5932,-1492,-411,-4813,12285,2856,-741,1524,6739 } },
-    { "Sony SLT-A57", 128, 0,
+    { "Sony SLT-A57", 0, 0,
 	{ 5991,-1456,-455,-4764,12135,2980,-707,1425,6701 } },
-    { "Sony SLT-A58", 128, 0,
+    { "Sony SLT-A58", 0, 0,
 	{ 5991,-1456,-455,-4764,12135,2980,-707,1425,6701 } },
-    { "Sony SLT-A65", 128, 0,
+    { "Sony SLT-A65", 0, 0,
 	{ 5491,-1192,-363,-4951,12342,2948,-911,1722,7192 } },
-    { "Sony SLT-A77", 128, 0,
+    { "Sony SLT-A77", 0, 0,
 	{ 5491,-1192,-363,-4951,12342,2948,-911,1722,7192 } },
-    { "Sony SLT-A99", 128, 0,
+    { "Sony SLT-A99", 0, 0,
 	{ 6344,-1612,-462,-4863,12477,2681,-865,1786,6899 } },
+    { "YI M1", 0, 0,
+	{ 7712,-2059,-653,-3882,11494,2726,-710,1332,5958 } },
   };
   double cam_xyz[4][3];
   char name[130];
@@ -8502,9 +8782,15 @@ float CLASS find_green (int bps, int bite, int off0, int off1)
 {
   UINT64 bitbuf=0;
   int vbits, col, i, c;
-  ushort img[2][2064];
+  ushort *img;
   double sum[]={0,0};
 
+#define IMG2D(row,col) \
+  img[(row)*width+(col)]
+
+  img = (ushort *) malloc(2*width*sizeof(ushort));
+  merror (img, "find_green()");
+
   FORC(2) {
     fseek (ifp, c ? off1:off0, SEEK_SET);
     for (vbits=col=0; col < width; col++) {
@@ -8513,13 +8799,14 @@ float CLASS find_green (int bps, int bite, int off0, int off1)
 	for (i=0; i < bite; i+=8)
 	  bitbuf |= (unsigned) (fgetc(ifp) << i);
       }
-      img[c][col] = bitbuf << (64-bps-vbits) >> (64-bps);
+      IMG2D(c,col) = bitbuf << (64-bps-vbits) >> (64-bps);
     }
   }
   FORC(width-1) {
-    sum[ c & 1] += ABS(img[0][c]-img[1][c+1]);
-    sum[~c & 1] += ABS(img[1][c]-img[0][c+1]);
+    sum[ c & 1] += ABS(IMG2D(0,c)-IMG2D(1,c+1));
+    sum[~c & 1] += ABS(IMG2D(1,c)-IMG2D(0,c+1));
   }
+  free(img);
   return 100 * log(sum[0]/sum[1]);
 }
 
@@ -8595,7 +8882,11 @@ void CLASS identify()
     { 5712, 3774,  62, 20, 10,  2 },
     { 5792, 3804, 158, 51,  0,  0 },
     { 5920, 3950, 122, 80,  2,  0 },
+    { 6096, 4051,  76, 35,  0,  0 },
     { 6096, 4056,  72, 34,  0,  0 },
+    { 6288, 4056, 264, 36,  0,  0 },
+    { 6384, 4224, 120, 44,  0,  0 },
+    { 6880, 4544, 136, 42,  0,  0 },
     { 8896, 5920, 160, 64,  0,  0 },
   };
   static const struct {
@@ -8609,6 +8900,10 @@ void CLASS identify()
     { 0x261, "EOS 50D" },    { 0x281, "EOS-1D Mark IV" },
     { 0x287, "EOS 60D" },    { 0x167, "EOS-1DS" },
     { 0x325, "EOS 70D" },
+    { 0x408, "EOS 77D" },    { 0x331, "EOS M" },
+    { 0x350, "EOS 80D" },    { 0x328, "EOS-1D X Mark II" },
+    { 0x346, "EOS 100D" },
+    { 0x417, "EOS 200D" },
     { 0x170, "EOS 300D" },   { 0x188, "EOS-1Ds Mark II" },
     { 0x176, "EOS 450D" },   { 0x215, "EOS-1Ds Mark III" },
     { 0x189, "EOS 350D" },   { 0x324, "EOS-1D C" },
@@ -8619,11 +8914,14 @@ void CLASS identify()
     { 0x301, "EOS 650D" },   { 0x302, "EOS 6D" },
     { 0x326, "EOS 700D" },   { 0x250, "EOS 7D" },
     { 0x393, "EOS 750D" },   { 0x289, "EOS 7D Mark II" },
-    { 0x347, "EOS 760D" },
+    { 0x347, "EOS 760D" },   { 0x406, "EOS 6D Mark II" },
+    { 0x405, "EOS 800D" },   { 0x349, "EOS 5D Mark IV" },
     { 0x254, "EOS 1000D" },
     { 0x288, "EOS 1100D" },
-    { 0x327, "EOS 1200D" },
-    { 0x346, "EOS 100D" },
+    { 0x327, "EOS 1200D" },  { 0x382, "EOS 5DS" },
+    { 0x404, "EOS 1300D" },  { 0x401, "EOS 5DS R" },
+    { 0x422, "EOS 1500D" },
+    { 0x432, "EOS 3000D" },
   }, sonique[] = {
     { 0x002, "DSC-R1" },     { 0x100, "DSLR-A100" },
     { 0x101, "DSLR-A900" },  { 0x102, "DSLR-A700" },
@@ -8650,7 +8948,33 @@ void CLASS identify()
     { 0x139, "ILCE-5000" },  { 0x13d, "DSC-RX100M3" },
     { 0x13e, "ILCE-7S" },    { 0x13f, "ILCA-77M2" },
     { 0x153, "ILCE-5100" },  { 0x154, "ILCE-7M2" },
-    { 0x15a, "ILCE-QX1" },
+    { 0x155, "DSC-RX100M4" },{ 0x156, "DSC-RX10M2" },
+    { 0x158, "DSC-RX1RM2" }, { 0x15a, "ILCE-QX1" },
+    { 0x15b, "ILCE-7RM2" },  { 0x15e, "ILCE-7SM2" },
+    { 0x161, "ILCA-68" },    { 0x162, "ILCA-99M2" },
+    { 0x163, "DSC-RX10M3" }, { 0x164, "DSC-RX100M5" },
+    { 0x165, "ILCE-6300" },  { 0x166, "ILCE-9" },
+    { 0x168, "ILCE-6500" },  { 0x16a, "ILCE-7RM3" },
+    { 0x16b, "ILCE-7M3" },   { 0x16c, "DSC-RX0" },
+    { 0x16d, "DSC-RX10M4" },
+  };
+  static const char *orig, panalias[][12] = {
+    "@DC-FZ80", "DC-FZ82", "DC-FZ85",
+    "@DC-FZ81", "DC-FZ83",
+    "@DC-GF9", "DC-GX800", "DC-GX850",
+    "@DC-GF10", "DC-GF90",
+    "@DC-GX9", "DC-GX7MK3",
+    "@DC-ZS70", "DC-TZ90", "DC-TZ91", "DC-TZ92", "DC-TZ93",
+    "@DMC-FZ40", "DMC-FZ45",
+    "@DMC-FZ2500", "DMC-FZ2000", "DMC-FZH1",
+    "@DMC-G8", "DMC-G80", "DMC-G81", "DMC-G85",
+    "@DMC-GX85", "DMC-GX80", "DMC-GX7MK2",
+    "@DMC-LX9", "DMC-LX10", "DMC-LX15",
+    "@DMC-ZS40", "DMC-TZ60", "DMC-TZ61",
+    "@DMC-ZS50", "DMC-TZ70", "DMC-TZ71",
+    "@DMC-ZS60", "DMC-TZ80", "DMC-TZ81", "DMC-TZ85",
+    "@DMC-ZS100", "DMC-ZS110", "DMC-TZ100", "DMC-TZ101", "DMC-TZ110", "DMC-TX1",
+    "@DC-ZS200", "DC-TX2", "DC-TZ200", "DC-TZ202", "DC-TZ220", "DC-ZS220",
   };
   static const struct {
     unsigned fsize;
@@ -8670,23 +8994,24 @@ void CLASS identify()
     { 15980544,3264,2448, 0, 0, 0, 0, 8,0x61,0,1,"AgfaPhoto","DC-833m",0 },
     {  9631728,2532,1902, 0, 0, 0, 0,96,0x61,0,0,"Alcatel","5035D",0 },
     {  2868726,1384,1036, 0, 0, 0, 0,64,0x49,0,8,"Baumer","TXG14",1078 },
-    {  5298000,2400,1766,12,12,44, 2,40,0x94,0,2,"Canon","PowerShot SD300",0 },
-    {  6553440,2664,1968, 4, 4,44, 4,40,0x94,0,2,"Canon","PowerShot A460",0 },
-    {  6573120,2672,1968,12, 8,44, 0,40,0x94,0,2,"Canon","PowerShot A610",0 },
-    {  6653280,2672,1992,10, 6,42, 2,40,0x94,0,2,"Canon","PowerShot A530",0 },
-    {  7710960,2888,2136,44, 8, 4, 0,40,0x94,0,2,"Canon","PowerShot S3 IS",0 },
-    {  9219600,3152,2340,36,12, 4, 0,40,0x94,0,2,"Canon","PowerShot A620",0 },
-    {  9243240,3152,2346,12, 7,44,13,40,0x49,0,2,"Canon","PowerShot A470",0 },
-    { 10341600,3336,2480, 6, 5,32, 3,40,0x94,0,2,"Canon","PowerShot A720 IS",0 },
-    { 10383120,3344,2484,12, 6,44, 6,40,0x94,0,2,"Canon","PowerShot A630",0 },
-    { 12945240,3736,2772,12, 6,52, 6,40,0x94,0,2,"Canon","PowerShot A640",0 },
-    { 15636240,4104,3048,48,12,24,12,40,0x94,0,2,"Canon","PowerShot A650",0 },
-    { 15467760,3720,2772, 6,12,30, 0,40,0x94,0,2,"Canon","PowerShot SX110 IS",0 },
-    { 15534576,3728,2778,12, 9,44, 9,40,0x94,0,2,"Canon","PowerShot SX120 IS",0 },
-    { 18653760,4080,3048,24,12,24,12,40,0x94,0,2,"Canon","PowerShot SX20 IS",0 },
-    { 19131120,4168,3060,92,16, 4, 1,40,0x94,0,2,"Canon","PowerShot SX220 HS",0 },
-    { 21936096,4464,3276,25,10,73,12,40,0x16,0,2,"Canon","PowerShot SX30 IS",0 },
-    { 24724224,4704,3504, 8,16,56, 8,40,0x94,0,2,"Canon","PowerShot A3300 IS",0 },
+    {  5298000,2400,1766,12,12,44, 2, 8,0x94,0,2,"Canon","PowerShot SD300",0 },
+    {  6553440,2664,1968, 4, 4,44, 4, 8,0x94,0,2,"Canon","PowerShot A460",0 },
+    {  6573120,2672,1968,12, 8,44, 0, 8,0x94,0,2,"Canon","PowerShot A610",0 },
+    {  6653280,2672,1992,10, 6,42, 2, 8,0x94,0,2,"Canon","PowerShot A530",0 },
+    {  7710960,2888,2136,44, 8, 4, 0, 8,0x94,0,2,"Canon","PowerShot S3 IS",0 },
+    {  9219600,3152,2340,36,12, 4, 0, 8,0x94,0,2,"Canon","PowerShot A620",0 },
+    {  9243240,3152,2346,12, 7,44,13, 8,0x49,0,2,"Canon","PowerShot A470",0 },
+    { 10341600,3336,2480, 6, 5,32, 3, 8,0x94,0,2,"Canon","PowerShot A720 IS",0 },
+    { 10383120,3344,2484,12, 6,44, 6, 8,0x94,0,2,"Canon","PowerShot A630",0 },
+    { 12945240,3736,2772,12, 6,52, 6, 8,0x94,0,2,"Canon","PowerShot A640",0 },
+    { 15636240,4104,3048,48,12,24,12, 8,0x94,0,2,"Canon","PowerShot A650",0 },
+    { 15467760,3720,2772, 6,12,30, 0, 8,0x94,0,2,"Canon","PowerShot SX110 IS",0 },
+    { 15534576,3728,2778,12, 9,44, 9, 8,0x94,0,2,"Canon","PowerShot SX120 IS",0 },
+    { 18653760,4080,3048,24,12,24,12, 8,0x94,0,2,"Canon","PowerShot SX20 IS",0 },
+    { 19131120,4168,3060,92,16, 4, 1, 8,0x94,0,2,"Canon","PowerShot SX220 HS",0 },
+    { 21936096,4464,3276,25,10,73,12, 8,0x16,0,2,"Canon","PowerShot SX30 IS",0 },
+    { 24724224,4704,3504, 8,16,56, 8, 8,0x94,0,2,"Canon","PowerShot A3300 IS",0 },
+    { 30858240,5248,3920, 8,16,56,16, 8,0x94,0,2,"Canon","IXUS 160",0 },
     {  1976352,1632,1211, 0, 2, 0, 1, 0,0x94,0,1,"Casio","QV-2000UX",0 },
     {  3217760,2080,1547, 0, 0,10, 1, 0,0x94,0,1,"Casio","QV-3*00EX",0 },
     {  6218368,2585,1924, 0, 0, 9, 0, 0,0x94,0,1,"Casio","QV-5700",0 },
@@ -8759,15 +9084,16 @@ void CLASS identify()
     { 44390468,4080,5440, 0, 0, 0, 0,33,0x61,0,0,"Sinar","",68 },
     {  1409024,1376,1024, 0, 0, 1, 0, 0,0x49,0,0,"Sony","XCD-SX910CR",0 },
     {  2818048,1376,1024, 0, 0, 1, 0,97,0x49,0,0,"Sony","XCD-SX910CR",0 },
+    { 17496000,4320,3240, 0, 0, 0,0,224,0x94,0,0,"Xiro","Xplorer V",0 },
   };
   static const char *corp[] =
     { "AgfaPhoto", "Canon", "Casio", "Epson", "Fujifilm",
       "Mamiya", "Minolta", "Motorola", "Kodak", "Konica", "Leica",
-      "Nikon", "Nokia", "Olympus", "Pentax", "Phase One", "Ricoh",
-      "Samsung", "Sigma", "Sinar", "Sony" };
+      "Nikon", "Nokia", "Olympus", "Ricoh", "Pentax", "Phase One",
+      "Samsung", "Sigma", "Sinar", "Sony", "YI" };
   char head[32], *cp;
-  unsigned fsize, i, c;
-  int hlen, flen, zero_fsize=1;
+  unsigned fsize;
+  int hlen, flen, zero_fsize=1, i, c;
   struct jhead jh;
 
   tiff_flip = flip = filters = UINT_MAX;	/* unknown */
@@ -8853,14 +9179,20 @@ void CLASS identify()
       if (is_raw == 2 && shot_select)
 	parse_fuji (i);
     }
-    load_raw = &CLASS unpacked_load_raw;
     fseek (ifp, 100+28*(shot_select > 0), SEEK_SET);
     parse_tiff (data_offset = get4());
     parse_tiff (thumb_offset+12);
     apply_tiff();
+    if (!load_raw) {
+      load_raw = &CLASS unpacked_load_raw;
+      tiff_bps = 14;
+    }
   } else if (!memcmp (head,"RIFF",4)) {
     fseek (ifp, 0, SEEK_SET);
     parse_riff();
+  } else if (!memcmp (head+4,"ftypcrx ",8)) {
+    fseek (ifp, 0, SEEK_SET);
+    parse_crx (fsize);
   } else if (!memcmp (head+4,"ftypqt   ",9)) {
     fseek (ifp, 0, SEEK_SET);
     parse_qt (fsize);
@@ -8956,7 +9288,8 @@ void CLASS identify()
 	  case 8:
 	    load_raw = &CLASS eight_bit_load_raw;  break;
 	  case 10: case 12:
-	    load_flags |= 128;
+	    load_flags |= 512;
+	    if (!strcmp(make,"Canon")) load_flags |= 256;
 	    load_raw = &CLASS packed_load_raw;     break;
 	  case 16:
 	    order = 0x4949 | 0x404 * (load_flags & 1);
@@ -8989,6 +9322,8 @@ void CLASS identify()
 	((cp = strcasestr(model," DIGITAL CAMERA")) ||
 	 (cp = strstr(model,"FILE VERSION"))))
      *cp = 0;
+  if (!strcmp(make,"Pentax") && !strncmp(model,"GR",2))
+    strcpy (make, "Ricoh");		/* Ricoh GR not Pentax GR */
   if (!strncasecmp(model,"PENTAX",6))
     strcpy (make, "Pentax");
   cp = make + strlen(make);		/* Remove trailing spaces */
@@ -9011,17 +9346,25 @@ void CLASS identify()
     { height  = 2616;   width  = 3896; }
   if (height == 3136 && width == 4864)  /* Pentax K20D and Samsung GX20 */
     { height  = 3124;   width  = 4688; filters = 0x16161616; }
-  if (width == 4352 && (!strcmp(model,"K-r") || !strcmp(model,"K-x")))
+  if (raw_height == 2868 && (!strcmp(model,"K-r") || !strcmp(model,"K-x")))
     {			width  = 4309; filters = 0x16161616; }
-  if (width >= 4960 && !strncmp(model,"K-5",3))
-    { left_margin = 10; width  = 4950; filters = 0x16161616; }
-  if (width == 4736 && !strcmp(model,"K-7"))
+  if (raw_height == 3136 && !strcmp(model,"K-7"))
     { height  = 3122;   width  = 4684; filters = 0x16161616; top_margin = 2; }
-  if (width == 6080 && !strcmp(model,"K-3"))
-    { left_margin = 4;  width  = 6040; }
-  if (width == 7424 && !strcmp(model,"645D"))
-    { height  = 5502;   width  = 7328; filters = 0x61616161; top_margin = 29;
-      left_margin = 48; }
+  if (raw_height == 3284 && !strncmp(model,"K-5",3))
+    { left_margin = 10; width  = 4950; filters = 0x16161616; }
+  if (raw_height == 3300 && !strncmp(model,"K-50",4))
+    { height  = 3288,   width  = 4952;  left_margin = 0;  top_margin = 12; }
+  if (raw_height == 3664 && !strncmp(model,"K-S",3))
+    {			width  = 5492;  left_margin = 0; }
+  if (raw_height == 4032 && !strcmp(model,"K-3"))
+    { height  = 4032;   width  = 6040;  left_margin = 4; }
+  if (raw_height == 4060 && !strcmp(model,"KP"))
+    { height  = 4032;   width  = 6032;  left_margin = 52; top_margin = 28; }
+  if (raw_height == 4950 && !strcmp(model,"K-1"))
+    { height  = 4932;   width  = 7380;  left_margin = 4;  top_margin = 18; }
+  if (raw_height == 5552 && !strcmp(model,"645D"))
+    { height  = 5502;   width  = 7328;  left_margin = 48; top_margin = 29;
+      filters = 0x61616161; }
   if (height == 3014 && width == 4096)	/* Ricoh GX200 */
 			width  = 4014;
   if (dng_version) {
@@ -9066,6 +9409,10 @@ void CLASS identify()
   for (i=0; i < sizeof sonique / sizeof *sonique; i++)
     if (unique_id == sonique[i].id)
       strcpy (model, sonique[i].model);
+  for (i=0; i < sizeof panalias / sizeof *panalias; i++)
+    if (panalias[i][0] == '@') orig = panalias[i]+1;
+    else if (!strcmp(model,panalias[i]))
+      adobe_coeff ("Panasonic", orig);
   if (!strcmp(make,"Nikon")) {
     if (!load_raw)
       load_raw = &CLASS packed_load_raw;
@@ -9081,6 +9428,8 @@ void CLASS identify()
     top_margin = filters = 0;
     strcpy (model,"C603");
   }
+  if (!strcmp(make,"Sony") && raw_width > 3888)
+    black = 128 << (tiff_bps - 12);
   if (is_foveon) {
     if (height*2 < width) pixel_aspect = 0.5;
     if (height   > width) pixel_aspect = 2;
@@ -9131,7 +9480,7 @@ void CLASS identify()
     colors = 4;
     tiff_bps = 10;
     load_raw = &CLASS packed_load_raw;
-    load_flags = 40;
+    load_flags = 264;
   } else if (!strcmp(model,"PowerShot Pro90 IS") ||
 	     !strcmp(model,"PowerShot G1")) {
     colors = 4;
@@ -9143,6 +9492,9 @@ void CLASS identify()
   } else if (!strcmp(model,"EOS D2000C")) {
     filters = 0x61616161;
     black = curve[200];
+  } else if (!strcmp(model,"EOS 80D")) {
+    top_margin -= 2;
+    height += 2;
   } else if (!strcmp(model,"D1")) {
     cam_mul[0] *= 256/527.0;
     cam_mul[2] *= 256/317.0;
@@ -9197,6 +9549,8 @@ void CLASS identify()
     else width -= 8;
   } else if (!strncmp(model,"D300",4)) {
     width -= 32;
+  } else if (!strncmp(model,"COOLPIX B",9)) {
+    load_flags = 24;
   } else if (!strncmp(model,"COOLPIX P",9) && raw_width != 4032) {
     load_flags = 24;
     filters = 0x94949494;
@@ -9269,12 +9623,11 @@ void CLASS identify()
       height = 2144;
       width  = 2880;
       flip = 6;
-    } else if (load_raw != &CLASS packed_load_raw)
-      maximum = (is_raw == 2 && shot_select) ? 0x2f00 : 0x3e00;
+    }
     top_margin = (raw_height - height) >> 2 << 1;
     left_margin = (raw_width - width ) >> 2 << 1;
     if (width == 2848 || width == 3664) filters = 0x16161616;
-    if (width == 4032 || width == 4952) left_margin = 0;
+    if (width == 4032 || width == 4952 || width == 6032 || width == 8280) left_margin = 0;
     if (width == 3328 && (width -= 66)) left_margin = 34;
     if (width == 4936) left_margin = 4;
     if (!strcmp(model,"HS50EXR") ||
@@ -9336,7 +9689,7 @@ void CLASS identify()
   } else if (!strcmp(make,"Samsung") && raw_width == 4704) {
     height -= top_margin = 8;
     width -= 2 * (left_margin = 8);
-    load_flags = 32;
+    load_flags = 256;
   } else if (!strcmp(make,"Samsung") && raw_height == 3714) {
     height -= top_margin = 18;
     left_margin = raw_width - (width = 5536);
@@ -9406,6 +9759,11 @@ void CLASS identify()
       top_margin  = 4;
       left_margin = 41;
       filters = 0x61616161;
+    } else if (raw_width == 8384) {
+      height = 6208;
+      width  = 8280;
+      top_margin  = 96;
+      left_margin = 46;
     } else if (raw_width == 9044) {
       height = 6716;
       width  = 8964;
@@ -9517,6 +9875,10 @@ void CLASS identify()
       thumb_length = flen - (thumb_offset = 0xa39800);
       thumb_height = 480;
       thumb_width  = 640;
+    } else if (!strcmp(model,"TG-4")) {
+      width -= 16;
+    } else if (!strcmp(model,"TG-5")) {
+      width -= 6;
     }
   } else if (!strcmp(model,"N Digital")) {
     height = 2047;
@@ -9544,16 +9906,24 @@ void CLASS identify()
     order = 0x4d4d;
   } else if (!strcmp(make,"Sony") && raw_width == 4288) {
     width -= 32;
+  } else if (!strcmp(make,"Sony") && raw_width == 4600) {
+    if (!strcmp(model,"DSLR-A350"))
+      height -= 4;
+    black = 0;
   } else if (!strcmp(make,"Sony") && raw_width == 4928) {
     if (height < 3280) width -= 8;
   } else if (!strcmp(make,"Sony") && raw_width == 5504) {
     width -= height > 3664 ? 8 : 32;
+    if (!strncmp(model,"DSC",3))
+      black = 200 << (tiff_bps - 12);
   } else if (!strcmp(make,"Sony") && raw_width == 6048) {
     width -= 24;
     if (strstr(model,"RX1") || strstr(model,"A99"))
       width -= 6;
   } else if (!strcmp(make,"Sony") && raw_width == 7392) {
     width -= 30;
+  } else if (!strcmp(make,"Sony") && raw_width == 8000) {
+    width -= 32;
   } else if (!strcmp(model,"DSLR-A100")) {
     if (width == 3880) {
       height--;
@@ -9565,8 +9935,6 @@ void CLASS identify()
       load_flags = 2;
     }
     filters = 0x61616161;
-  } else if (!strcmp(model,"DSLR-A350")) {
-    height -= 4;
   } else if (!strcmp(model,"PIXL")) {
     height -= top_margin = 4;
     width -= left_margin = 32;
@@ -9631,6 +9999,7 @@ bw:   colors = 1;
       width  = 768;
       data_offset = 1152;
       load_raw = &CLASS kodak_radc_load_raw;
+      tiff_bps = 12;
     } else if (strstr(model,"DC50")) {
       strcpy (model, "DC50");
       height = 512;
@@ -9843,10 +10212,14 @@ void CLASS convert_to_rgb()
   { { 0.529317, 0.330092, 0.140588 },
     { 0.098368, 0.873465, 0.028169 },
     { 0.016879, 0.117663, 0.865457 } };
+  static const double aces_rgb[3][3] =
+  { { 0.432996, 0.375380, 0.189317 },
+    { 0.089427, 0.816523, 0.102989 },
+    { 0.019165, 0.118150, 0.941914 } };
   static const double (*out_rgb[])[3] =
-  { rgb_rgb, adobe_rgb, wide_rgb, prophoto_rgb, xyz_rgb };
+  { rgb_rgb, adobe_rgb, wide_rgb, prophoto_rgb, xyz_rgb, aces_rgb };
   static const char *name[] =
-  { "sRGB", "Adobe RGB (1998)", "WideGamut D65", "ProPhoto D65", "XYZ" };
+  { "sRGB", "Adobe RGB (1998)", "WideGamut D65", "ProPhoto D65", "XYZ", "ACES" };
   static const int phead[] =
   { 1024, 0, 0x2100000, 0x6d6e7472, 0x52474220, 0x58595a20, 0, 0, 0,
     0x61637370, 0, 0, 0x6e6f6e65, 0, 0, 0, 0, 0xf6d6, 0x10000, 0xd32d };
@@ -9867,7 +10240,7 @@ void CLASS convert_to_rgb()
   gamma_curve (gamm[0], gamm[1], 0, 0);
   memcpy (out_cam, rgb_cam, sizeof out_cam);
   raw_color |= colors == 1 || document_mode ||
-		output_color < 1 || output_color > 5;
+		output_color < 1 || output_color > 6;
   if (!raw_color) {
     oprof = (unsigned *) calloc (phead[0], 1);
     merror (oprof, "convert_to_rgb()");
@@ -10255,7 +10628,7 @@ int CLASS main (int argc, const char **argv)
     puts(_("-n <num>  Set threshold for wavelet denoising"));
     puts(_("-H [0-9]  Highlight mode (0=clip, 1=unclip, 2=blend, 3+=rebuild)"));
     puts(_("-t [0-7]  Flip image (0=none, 3=180, 5=90CCW, 6=90CW)"));
-    puts(_("-o [0-5]  Output colorspace (raw,sRGB,Adobe,Wide,ProPhoto,XYZ)"));
+    puts(_("-o [0-6]  Output colorspace (raw,sRGB,Adobe,Wide,ProPhoto,XYZ,ACES)"));
 #ifndef NO_LCMS
     puts(_("-o <file> Apply output ICC profile from file"));
     puts(_("-p <file> Apply camera ICC profile from file or \"embed\""));
diff --git a/plugins/load-dcraw/dcraw.h b/plugins/load-dcraw/dcraw.h
index aae5e3ea..39e7dfc1 100644
--- a/plugins/load-dcraw/dcraw.h
+++ b/plugins/load-dcraw/dcraw.h
@@ -1,7 +1,7 @@
 /*
    dcraw.h - Dave Coffin's raw photo decoder - header for C++ adaptation
-   Copyright 1997-2015 by Dave Coffin, dcoffin a cybercom o net
-   Copyright 2004-2015 by Udi Fuchs, udifuchs a gmail o com
+   Copyright 1997-2016 by Dave Coffin, dcoffin a cybercom o net
+   Copyright 2004-2016 by Udi Fuchs, udifuchs a gmail o com
 
    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
@@ -152,7 +152,7 @@ class DCRaw
     void lossless_jpeg_load_raw();
     void canon_sraw_load_raw();
     void adobe_copy_pixel(unsigned row, unsigned col, ushort **rp);
-    void ljpeg_idct (struct jhead *jh);
+    void ljpeg_idct(struct jhead *jh);
     void lossless_dng_load_raw();
     void packed_dng_load_raw();
     void pentax_load_raw();
@@ -217,6 +217,9 @@ class DCRaw
     void foveon_sd_load_raw();
     void foveon_huff(ushort *huff);
     void foveon_dp_load_raw();
+    void canon_crx_load_raw();
+    void fuji_xtrans_load_raw();
+    void parse_crx (int end);
     void foveon_load_camf();
     const char * foveon_camf_param(const char *block, const char *param);
     void * foveon_camf_matrix(unsigned dim[3], const char *name);
diff --git a/plugins/load-dcraw/dcraw_api.cc b/plugins/load-dcraw/dcraw_api.cc
index c3d2902c..d33f0300 100644
--- a/plugins/load-dcraw/dcraw_api.cc
+++ b/plugins/load-dcraw/dcraw_api.cc
@@ -2,7 +2,7 @@
  * UFRaw - Unidentified Flying Raw converter for digital camera images
  *
  * dcraw_api.cc - API for DCRaw
- * Copyright 2004-2015 by Udi Fuchs
+ * Copyright 2004-2016 by Udi Fuchs
  *
  * based on dcraw by Dave Coffin
  * http://www.cybercom.net/~dcoffin/
@@ -34,6 +34,10 @@
 #define FORC3 FORC(3)
 #define FORC4 FORC(4)
 #define FORCC FORC(colors)
+
+#define LIM(x,min,max) MAX(min,MIN(x,max))
+#define CLIP(x) LIM((int)(x),0,65535)
+
 extern "C" {
     int fcol_INDI(const unsigned filters, const int row, const int col,
                   const int top_margin, const int left_margin,
@@ -211,12 +215,140 @@ extern "C" {
         }
     }
 
+    void fuji_merge(DCRaw *d, ushort *saved_raw_image, float saved_cam_mul[4], int saved_fuji_dr)
+    {
+        int i, j, c, s;
+        unsigned b;
+        float  S, R, w, l, m, th, tl, mul[4][4];
+
+        if (d->fuji_width) { /* Super CCD SR */
+
+            /* Populate a small array for converting the whitebalance */
+            /* of the second image to that of the first one.          */
+
+            if (d->fuji_layout) {
+                /* First generation Super CCD SR (S20Pro, F700, F710)         */
+                /* Many of these sensors are defective and have a colourcast. */
+
+                /* RBRB */
+                /* GGGG */
+                /* BRBR */
+                /* GGGG */
+                mul[1][1] = mul[1][0] = mul[1][2] = mul[1][3] = 1;
+                mul[3][1] = mul[3][0] = mul[3][2] = mul[3][3] = 1;
+                mul[0][0] = mul[0][2] = mul[2][1] = mul[2][3] = d->cam_mul[0] / saved_cam_mul[0];
+                mul[0][1] = mul[0][3] = mul[2][0] = mul[2][2] = d->cam_mul[2] / saved_cam_mul[2];
+
+            } else { /* Super CCD SR II (S3Pro, S5Pro) */
+
+                /* RGBG */
+                /* BGRG */
+                /* RGBG */
+                /* BGRG */
+                mul[0][1] = mul[0][3] = mul[1][1] = mul[1][3] = 1;
+                mul[2][1] = mul[2][3] = mul[3][1] = mul[3][3] = 1;
+                mul[0][0] = mul[1][2] = mul[2][0] = mul[3][2] = d->cam_mul[0] / saved_cam_mul[0];
+                mul[0][2] = mul[1][0] = mul[2][2] = mul[3][0] = d->cam_mul[2] / saved_cam_mul[2];
+            }
+
+            for (i = 0 ; i < d->raw_height; i++)
+                for (j = 0 ; j < d->raw_width; j++) {
+
+                    S = saved_raw_image[i * d->raw_width + j];
+                    R = d->raw_image[i * d->raw_width + j] * mul[i & 3][j & 3] * 16;
+
+                    /* Fade from S to R in one stop. */
+                    /* Response of these sensors appears to be non-linear, */
+                    /* causing a slight colourcast in the transition zone. */
+                    if (S > 0x1f00) {
+                        if (S < 0x3e00) {
+                            w = (S - 0x1f00) / 0x1f00;
+                            S = (1 - w) * S + w * R;
+                        } else
+                            S = R;
+                    }
+
+                    d->raw_image[i * d->raw_width + j] = CLIP((S * 0xffff / 0x2f000));
+                }
+
+            d->maximum = 0xffff;
+
+            FORC4 d->cam_mul[c] = saved_cam_mul[c];
+
+            d->fuji_dr = -400;
+
+        } else { /* EXR */
+
+            if (d->black)
+                b = d->black;
+            else
+                b = d->cblack[6];
+
+            s = (saved_fuji_dr - d->fuji_dr) / 100;
+
+
+            if (s) { /* DR-mode */
+
+                th = l = d->maximum - b;
+                m = 1 << s;
+                tl = th / m;
+                th += tl;
+                m += 1;
+                l *= m;
+
+                for (i = 0 ; i < d->raw_height * d->raw_width; i++) {
+
+                    /* Range check to avoid problems when value is below black. */
+                    S = LIM(saved_raw_image[i], b, d->maximum) - b;
+                    R = LIM(d->raw_image[i], b, d->maximum) - b;
+                    /* Adding R to S pixels reduces noise a bit. */
+                    S += R;
+                    R *= m;
+
+                    /* Fade from S to R in ~1.5 or 2.25 stops. */
+                    /* Response of EXR sensors appears to be linear. */
+                    if (S > tl) {
+                        if (S < th) {
+                            w = (S - tl) / (th - tl);
+                            S = (1 - w) * S + w * R;
+                        } else
+                            S = R;
+                    }
+
+                    /* l can be larger than 0xffff. */
+                    d->raw_image[i] = CLIP(S * 0xffff / l);
+                }
+
+                d->maximum = 0xffff;
+                d->black = 0;
+
+                for (i = 6 ; i < 10 ; i++)
+                    d->cblack[i] = 0;
+
+                //d->fuji_dr = saved_fuji_dr;
+
+            } else { /* Low-noise-mode */
+
+                for (i = 0 ; i < d->raw_height * d->raw_width ; i++)
+                    d->raw_image[i] += saved_raw_image[i];
+
+                d->maximum *= 2;
+                d->black *= 2;
+
+                for (i = 6 ; i < 10 ; i++)
+                    d->cblack[i] *= 2;
+            }
+        }
+    }
+
     int dcraw_load_raw(dcraw_data *h)
     {
-        DCRaw *d = (DCRaw *)h->dcraw;
+        /* 'volatile' supresses clobbering warning */
+        DCRaw * volatile d = (DCRaw *)h->dcraw;
         int c, i, j;
         double dmin;
 
+start:
         g_free(d->messageBuffer);
         d->messageBuffer = NULL;
         d->lastStatus = DCRAW_SUCCESS;
@@ -247,6 +379,88 @@ extern "C" {
         d->ifpSize = ftell(d->ifp);
         fseek(d->ifp, d->data_offset, SEEK_SET);
         (d->*d->load_raw)();
+
+        /* multishot support, for now Pentax only. */
+        if (d->is_raw == 4 && !strncasecmp(d->make, "Pentax", 6)) {
+
+            int row, col, i;
+            int positions[4][2] = {{0, 0}, {1, 0}, {1, 1}, {0, 1}};
+            static dcraw_image_type *tmp = NULL;
+
+            if (!tmp)
+                tmp = d->image = g_new0(dcraw_image_type, d->height * d->width + d->meta_length);
+
+#ifdef _OPENMP
+            #pragma omp parallel for private(col)
+#endif
+            for (row = 0 ; row < d->height ; row++)
+                for (col = 0 ; col < d->width ; col++)
+                    tmp[row * d->width + col][fcol_INDI(d->filters, row + positions[d->shot_select][0], col + positions[d->shot_select][1], d->top_margin, d->left_margin, d->xtrans)] = d->raw_image[(row + d->top_margin + positions[d->shot_select][0]) * d->raw_width + col + d->left_margin + positions[d->shot_select][1]];
+
+            g_free(d->raw_image);
+            d->raw_image = NULL;
+
+            if (d->shot_select < 3) {
+                d->shot_select++;
+                fseek(d->ifp, 0, SEEK_SET);
+                d->identify();
+                goto start;
+            }
+
+            if (d->shot_select == 3) /* Just to keep the compiler happy. */
+#ifdef _OPENMP
+                #pragma omp parallel for
+#endif
+                for (i = 0 ; i < d->height * d->width ; i++)
+                    tmp[i][1] = (tmp[i][1] + tmp[i][3]) / 2;
+
+            d->image = tmp;
+            d->shot_select = 0;
+            d->is_raw = 0;
+            d->filters = 0;
+            d->shrink = 0;
+            d->meta_data = (char *)(tmp + d->height * d->width);
+
+            h->raw.image = tmp;
+            h->filters = 0;
+            h->shrink = 0;
+
+            tmp = NULL;
+        }
+
+        /* Fuji Super CCD SR and EXR support */
+        if (d->is_raw == 2 && !strncasecmp(d->make, "Fujifilm", 8)) {
+
+            static int saved_fuji_dr;
+            static float saved_cam_mul[4];
+            static guint16 *saved_raw_image = NULL;
+
+            if (!saved_raw_image) {
+
+                saved_raw_image = d->raw_image;
+                d->raw_image = NULL;
+                saved_fuji_dr = d->fuji_dr;
+                FORC4 saved_cam_mul[c] = d->cam_mul[c];
+
+                d->shot_select++;
+                fseek(d->ifp, 0, SEEK_SET);
+                d->identify();
+                goto start;
+            }
+
+            fuji_merge(d, saved_raw_image, saved_cam_mul, saved_fuji_dr);
+
+            free(saved_raw_image);
+            saved_raw_image = NULL;
+            d->shot_select--;
+
+            FORC4 h->cam_mul[c] = d->cam_mul[c];
+            h->fuji_dr = d->fuji_dr;
+            h->filters = d->filters;
+            h->rgbMax = d->maximum;
+            h->black = d->black;
+        }
+
         h->raw.height = d->iheight = (h->height + h->shrink) >> h->shrink;
         h->raw.width = d->iwidth = (h->width + h->shrink) >> h->shrink;
         if (d->raw_image) {
@@ -686,7 +900,7 @@ extern "C" {
             rgbWB[3] = rgbWB[1];
         if (dark) {
 #ifdef _OPENMP
-            #pragma omp parallel for schedule(static) default(none) \
+            #pragma omp parallel for schedule(static) \
             shared(h,dark,rgbWB)
 #endif
             for (int i = 0; i < pixels; i++) {
@@ -699,7 +913,7 @@ extern "C" {
             }
         } else {
 #ifdef _OPENMP
-            #pragma omp parallel for schedule(static) default(none) \
+            #pragma omp parallel for schedule(static) \
             shared(h,dark,rgbWB)
 #endif
             for (int i = 0; i < pixels; i++) {
diff --git a/plugins/load-dcraw/dcraw_api.h b/plugins/load-dcraw/dcraw_api.h
index 712cd755..e43b7b8d 100644
--- a/plugins/load-dcraw/dcraw_api.h
+++ b/plugins/load-dcraw/dcraw_api.h
@@ -2,7 +2,7 @@
  * UFRaw - Unidentified Flying Raw converter for digital camera images
  *
  * dcraw_api.h - API for DCRaw
- * Copyright 2004-2015 by Udi Fuchs
+ * Copyright 2004-2016 by Udi Fuchs
  *
  * based on dcraw by Dave Coffin
  * http://www.cybercom.net/~dcoffin/
diff --git a/plugins/load-dcraw/dcraw_indi.c b/plugins/load-dcraw/dcraw_indi.c
index a291af2c..a6e2a949 100644
--- a/plugins/load-dcraw/dcraw_indi.c
+++ b/plugins/load-dcraw/dcraw_indi.c
@@ -2,7 +2,7 @@
  * UFRaw - Unidentified Flying Raw converter for digital camera images
  *
  * dcraw_indi.c - DCRaw functions made independent
- * Copyright 2004-2015 by Udi Fuchs
+ * Copyright 2004-2016 by Udi Fuchs
  *
  * based on dcraw by Dave Coffin
  * http://www.cybercom.net/~dcoffin/
@@ -137,12 +137,10 @@ void CLASS wavelet_denoise_INDI(ushort(*image)[4], const int black,
 #ifdef _OPENMP
 #if defined(__sun) && !defined(__GNUC__)	/* Fix bug #3205673 - NKBJ */
     #pragma omp parallel for				\
-    default(none)					\
     shared(nc,image,size,noise)				\
     private(c,i,hpass,lev,lpass,row,col,thold,fimg,temp)
 #else
     #pragma omp parallel for				\
-    default(none)					\
     shared(nc,image,size)				\
     private(c,i,hpass,lev,lpass,row,col,thold,fimg,temp)
 #endif
@@ -413,7 +411,6 @@ void CLASS vng_interpolate_INDI(ushort(*image)[4], const unsigned filters,
     progress(PROGRESS_INTERPOLATE, -height);
 #ifdef _OPENMP
     #pragma omp parallel				\
-    default(none)					\
     shared(image,code,prow,pcol,h)			\
     private(row,col,g,brow,rowtmp,pix,ip,gval,diff,gmin,gmax,thold,sum,color,num,c,t)
 #endif
@@ -496,7 +493,6 @@ void CLASS ppg_interpolate_INDI(ushort(*image)[4], const unsigned filters,
 
 #ifdef _OPENMP
     #pragma omp parallel				\
-    default(none)					\
     shared(image,dir,diff)				\
     private(row,col,i,d,c,pix,guess)
 #endif
diff --git a/plugins/load-dcraw/nikon_curve.c b/plugins/load-dcraw/nikon_curve.c
index dd71a82a..1a785b9f 100644
--- a/plugins/load-dcraw/nikon_curve.c
+++ b/plugins/load-dcraw/nikon_curve.c
@@ -1,7 +1,7 @@
 /***************************************************
  nikon_curve.c - read Nikon NTC/NCV files
 
- Copyright 2004-2015 by Shawn Freeman, Udi Fuchs
+ Copyright 2004-2016 by Shawn Freeman, Udi Fuchs
 
  This program reads in a Nikon NTC/NCV file,
  interperates it's tone curve, and writes out a
diff --git a/plugins/load-dcraw/nikon_curve.h b/plugins/load-dcraw/nikon_curve.h
index d8961dcf..65079c86 100644
--- a/plugins/load-dcraw/nikon_curve.h
+++ b/plugins/load-dcraw/nikon_curve.h
@@ -1,7 +1,7 @@
 /***************************************************
  nikon_curve.h - read Nikon NTC/NCV files
 
- Copyright 2004-2015 by Shawn Freeman, Udi Fuchs
+ Copyright 2004-2016 by Shawn Freeman, Udi Fuchs
 
  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
diff --git a/plugins/load-dcraw/uf_glib.h b/plugins/load-dcraw/uf_glib.h
index d2044f88..21c10b19 100644
--- a/plugins/load-dcraw/uf_glib.h
+++ b/plugins/load-dcraw/uf_glib.h
@@ -2,7 +2,7 @@
  * UFRaw - Unidentified Flying Raw converter for digital camera images
  *
  * uf_glib.h - glib compatibility header
- * Copyright 2004-2015 by Udi Fuchs
+ * Copyright 2004-2016 by Udi Fuchs
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
diff --git a/plugins/load-dcraw/uf_progress.h b/plugins/load-dcraw/uf_progress.h
index 085b18c1..79f66bb8 100644
--- a/plugins/load-dcraw/uf_progress.h
+++ b/plugins/load-dcraw/uf_progress.h
@@ -2,7 +2,7 @@
  * UFRaw - Unidentified Flying Raw converter for digital camera images
  *
  * uf_progress.h - progress bar header
- * Copyright 2009-2015 by Frank van Maarseveen, Udi Fuchs
+ * Copyright 2009-2016 by Frank van Maarseveen, Udi Fuchs
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
diff --git a/plugins/load-dcraw/ufobject.cc b/plugins/load-dcraw/ufobject.cc
index 96d3a766..bdcdc314 100644
--- a/plugins/load-dcraw/ufobject.cc
+++ b/plugins/load-dcraw/ufobject.cc
@@ -2,7 +2,7 @@
  * UFRaw - Unidentified Flying Raw converter for digital camera images
  *
  * ufobject.cc - UFObject C++ implementation and C interface.
- * Copyright 2004-2015 by Udi Fuchs
+ * Copyright 2004-2016 by Udi Fuchs
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -37,16 +37,14 @@ class _UFObject
     UFEventHandle *EventHandle;
     explicit _UFObject(UFName name) : Name(name), UserData(NULL), String(NULL),
         Parent(NULL), EventHandle(NULL) { }
-    virtual ~_UFObject()
-    {
+    virtual ~_UFObject() {
         g_free(String);
         if (Parent != NULL)
             g_warning("%s: Destroyed while having a parent.", Name);
     }
     virtual bool Changing() const;
     virtual void SetChanging(bool state);
-    void CallValueChangedEvent(UFObject *that)
-    {
+    void CallValueChangedEvent(UFObject *that) {
         bool saveChanging = Changing();
         if (!Changing()) {
             SetChanging(true);
@@ -351,20 +349,17 @@ class _UFNumberArray : public _UFNumberCommon
                    double minimum, double maximum, double defaultValue,
                    int accuracyDigits, double step, double jump) :
         _UFNumberCommon(name, minimum, maximum, accuracyDigits, step, jump),
-        Size(size), Array(new double[size]), Default(new double[size])
-    {
+        Size(size), Array(new double[size]), Default(new double[size]) {
         for (int i = 0; i < size; i++)
             Array[i] = defaultValue;
         for (int i = 0; i < size; i++)
             Default[i] = defaultValue;
     }
-    ~_UFNumberArray()
-    {
+    ~_UFNumberArray() {
         delete [] Array;
         delete [] Default;
     }
-    bool SilentChange(UFNumberArray *that, int index, double number)
-    {
+    bool SilentChange(UFNumberArray *that, int index, double number) {
         if (index < 0 || index >= Size)
             that->Throw("index (%d) out of range 0..%d", index, Size - 1);
         if (number > Maximum) {
@@ -540,8 +535,7 @@ class _UFString : public _UFObject
 public:
     char *Default;
     _UFString(UFName name) : _UFObject(name) { }
-    ~_UFString()
-    {
+    ~_UFString() {
         g_free(Default);
     }
 };
@@ -613,8 +607,7 @@ bool UFString::IsEqual(const char *string) const
 class _UFNameCompare
 {
 public:
-    bool operator()(char const *a, char const *b) const
-    {
+    bool operator()(char const *a, char const *b) const {
         return strcmp(a, b) < 0;
     }
 };
@@ -632,18 +625,15 @@ class _UFGroup : public _UFObject
     char *DefaultIndex;
     _UFGroup(UFGroup *that, UFName name, const char *label) :
         _UFObject(name), This(that), GroupChanging(false),
-        Index(-1), DefaultIndex(NULL)
-    {
+        Index(-1), DefaultIndex(NULL) {
         String = g_strdup(label);
     }
-    bool Changing() const
-    {
+    bool Changing() const {
         if (Parent != NULL)
             return Parent->Changing();
         return GroupChanging;
     }
-    void SetChanging(bool state)
-    {
+    void SetChanging(bool state) {
         if (Parent != NULL)
             Parent->SetChanging(state);
         else
diff --git a/plugins/load-dcraw/ufobject.h b/plugins/load-dcraw/ufobject.h
index 48b98500..ae2887e0 100644
--- a/plugins/load-dcraw/ufobject.h
+++ b/plugins/load-dcraw/ufobject.h
@@ -2,7 +2,7 @@
  * UFRaw - Unidentified Flying Raw converter for digital camera images
  *
  * ufobject.h - UFObject definitions.
- * Copyright 2004-2015 by Udi Fuchs
+ * Copyright 2004-2016 by Udi Fuchs
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
diff --git a/plugins/load-dcraw/ufraw-batch.c b/plugins/load-dcraw/ufraw-batch.c
index eadacdbd..a761d8c0 100644
--- a/plugins/load-dcraw/ufraw-batch.c
+++ b/plugins/load-dcraw/ufraw-batch.c
@@ -2,7 +2,7 @@
  * UFRaw - Unidentified Flying Raw converter for digital camera images
  *
  * ufraw-batch.c - The standalone interface to UFRaw in batch mode.
- * Copyright 2004-2015 by Udi Fuchs
+ * Copyright 2004-2016 by Udi Fuchs
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
diff --git a/plugins/load-dcraw/ufraw.h b/plugins/load-dcraw/ufraw.h
index 16097198..0066ffb6 100644
--- a/plugins/load-dcraw/ufraw.h
+++ b/plugins/load-dcraw/ufraw.h
@@ -3,7 +3,7 @@
  * UFRaw - Unidentified Flying Raw converter for digital camera images
  *
  * ufraw.h - Common definitions for UFRaw.
- * Copyright 2004-2015 by Udi Fuchs
+ * Copyright 2004-2016 by Udi Fuchs
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -284,7 +284,7 @@ typedef struct {
     char inputURI[max_path], inputModTime[max_name];
     int type, compression, createID, embedExif, progressiveJPEG;
     int shrink, size;
-    gboolean overwrite, losslessCompress, embeddedImage;
+    gboolean overwrite, losslessCompress, embeddedImage, noExit;
     gboolean rotate;
 
     /* GUI settings */
@@ -407,7 +407,7 @@ void ufraw_invalidate_darkframe_layer(ufraw_data *uf);
 void ufraw_invalidate_despeckle_layer(ufraw_data *uf);
 void ufraw_invalidate_whitebalance_layer(ufraw_data *uf);
 void ufraw_invalidate_smoothing_layer(ufraw_data *uf);
-int ufraw_set_wb(ufraw_data *uf);
+int ufraw_set_wb(ufraw_data *uf, gboolean interactive);
 void ufraw_auto_expose(ufraw_data *uf);
 void ufraw_auto_black(ufraw_data *uf);
 void ufraw_auto_curve(ufraw_data *uf);
diff --git a/plugins/load-dcraw/ufraw_colorspaces.c b/plugins/load-dcraw/ufraw_colorspaces.c
index bd7feb86..19b29899 100644
--- a/plugins/load-dcraw/ufraw_colorspaces.c
+++ b/plugins/load-dcraw/ufraw_colorspaces.c
@@ -2,7 +2,7 @@
  * UFRaw - Unidentified Flying Raw converter for digital camera images
  *
  * ufraw_colorspaces.c - Functions and data to create built-in color profiles.
- * Copyright 2004-2015 by Udi Fuchs
+ * Copyright 2004-2016 by Udi Fuchs
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
diff --git a/plugins/load-dcraw/ufraw_colorspaces.h b/plugins/load-dcraw/ufraw_colorspaces.h
index 4746b581..bd830e0d 100644
--- a/plugins/load-dcraw/ufraw_colorspaces.h
+++ b/plugins/load-dcraw/ufraw_colorspaces.h
@@ -2,7 +2,7 @@
  * UFRaw - Unidentified Flying Raw converter for digital camera images
  *
  * ufraw_colorspaces.h - Built-in color profile declarations.
- * Copyright 2004-2015 by Udi Fuchs
+ * Copyright 2004-2016 by Udi Fuchs
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
diff --git a/plugins/load-dcraw/ufraw_conf.c b/plugins/load-dcraw/ufraw_conf.c
index 49068a4f..2b17e2c1 100644
--- a/plugins/load-dcraw/ufraw_conf.c
+++ b/plugins/load-dcraw/ufraw_conf.c
@@ -2,7 +2,7 @@
  * UFRaw - Unidentified Flying Raw converter for digital camera images
  *
  * ufraw_conf.c - handle configuration issues
- * Copyright 2004-2015 by Udi Fuchs
+ * Copyright 2004-2016 by Udi Fuchs
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -115,6 +115,7 @@ const conf_data conf_default = {
     FALSE, /* overwrite existing files without asking */
     FALSE, /* losslessCompress */
     FALSE, /* load embedded preview image */
+    FALSE, /* noExit */
     TRUE, /* rotate to camera's setting */
 
     /* GUI settings */
@@ -137,7 +138,7 @@ const conf_data conf_default = {
 #elif HAVE_GIMP_2_4
     "gimp", /* remoteGimpCommand */
 #else
-    "gimp-remote", /* remoteGimpCommand */
+    "gimp", /* remoteGimpCommand */
 #endif
 
     /* EXIF data */
@@ -762,6 +763,7 @@ static void conf_parse_text(GMarkupParseContext *context, const gchar *text,
     if (!strcmp("Overwrite", element)) sscanf(temp, "%d", &c->overwrite);
     if (!strcmp("LosslessCompression", element))
         sscanf(temp, "%d", &c->losslessCompress);
+    if (!strcmp("NoExit", element)) sscanf(temp, "%d", &c->noExit);
 }
 
 int conf_load(conf_data *c, const char *IDFilename)
@@ -1114,6 +1116,8 @@ int conf_save(conf_data *c, char *IDFilename, char **confBuffer)
         buf = uf_markup_buf(buf,
                             "<LosslessCompression>%d</LosslessCompression>\n",
                             c->losslessCompress);
+    if (c->noExit != conf_default.noExit)
+        buf = uf_markup_buf(buf, "<NoExit>%d</NoExit>\n", c->noExit);
     for (i = 0; i < c->BaseCurveCount; i++) {
         char *curveBuf = curve_buffer(&c->BaseCurve[i]);
         /* Write curve if it is non-default and we are not writing to .ufraw */
@@ -1477,6 +1481,7 @@ void conf_copy_save(conf_data *dst, const conf_data *src)
     dst->progressiveJPEG = src->progressiveJPEG;
     dst->losslessCompress = src->losslessCompress;
     dst->embeddedImage = src->embeddedImage;
+    dst->noExit = src->noExit;
 }
 
 int conf_set_cmd(conf_data *conf, const conf_data *cmd)
@@ -1494,6 +1499,7 @@ int conf_set_cmd(conf_data *conf, const conf_data *cmd)
         conf->losslessCompress = cmd->losslessCompress;
     if (cmd->embedExif != -1) conf->embedExif = cmd->embedExif;
     if (cmd->embeddedImage != -1) conf->embeddedImage = cmd->embeddedImage;
+    if (cmd->noExit != -1) conf->noExit = cmd->noExit;
     if (cmd->rotate != -1) conf->rotate = cmd->rotate;
     if (cmd->rotationAngle != NULLF) conf->rotationAngle = cmd->rotationAngle;
     if (cmd->autoCrop != -1)
@@ -1880,6 +1886,7 @@ int ufraw_process_args(int *argc, char ***argv, conf_data *cmd, conf_data *rc)
     cmd->autoBlack = disabled_state;
     cmd->losslessCompress = -1;
     cmd->overwrite = -1;
+    cmd->noExit = -1;
     cmd->WindowMaximized = -1;
     cmd->embedExif = -1;
     cmd->profile[1][0].BitDepth = -1;
diff --git a/plugins/load-dcraw/ufraw_developer.c b/plugins/load-dcraw/ufraw_developer.c
index eff92416..73067d38 100644
--- a/plugins/load-dcraw/ufraw_developer.c
+++ b/plugins/load-dcraw/ufraw_developer.c
@@ -2,7 +2,7 @@
  * UFRaw - Unidentified Flying Raw converter for digital camera images
  *
  * ufraw_developer.c - functions for developing images or more exactly pixels.
- * Copyright 2004-2015 by Udi Fuchs
+ * Copyright 2004-2016 by Udi Fuchs
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
diff --git a/plugins/load-dcraw/ufraw_embedded.c b/plugins/load-dcraw/ufraw_embedded.c
index d0b6f4dd..a010a63f 100644
--- a/plugins/load-dcraw/ufraw_embedded.c
+++ b/plugins/load-dcraw/ufraw_embedded.c
@@ -2,7 +2,7 @@
  * UFRaw - Unidentified Flying Raw converter for digital camera images
  *
  * ufraw_embedded.c - functions to output embedded preview image.
- * Copyright 2004-2015 by Udi Fuchs
+ * Copyright 2004-2016 by Udi Fuchs
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
diff --git a/plugins/load-dcraw/ufraw_exiv2.cc b/plugins/load-dcraw/ufraw_exiv2.cc
index f03011b4..873bacc2 100644
--- a/plugins/load-dcraw/ufraw_exiv2.cc
+++ b/plugins/load-dcraw/ufraw_exiv2.cc
@@ -2,7 +2,7 @@
  * UFRaw - Unidentified Flying Raw converter for digital camera images
  *
  * ufraw_exiv2.cc - read the EXIF data from the RAW file using exiv2.
- * Copyright 2004-2015 by Udi Fuchs
+ * Copyright 2004-2016 by Udi Fuchs
  *
  * Based on a sample program from exiv2 and neftags2jpg.
  *
@@ -15,11 +15,10 @@
 #include "ufraw.h"
 
 #ifdef HAVE_EXIV2
-#include <exiv2/image.hpp>
-#include <exiv2/easyaccess.hpp>
-#include <exiv2/exif.hpp>
+#include <exiv2/exiv2.hpp>
 #include <sstream>
 #include <cassert>
+#include <iostream>
 
 /*
  * Helper function to copy a string to a buffer, converting it from
@@ -67,7 +66,11 @@ extern "C" int ufraw_exif_read_input(ufraw_data *uf)
         if (exifData.empty()) {
             std::string error(uf->filename);
             error += ": No Exif data found in the file";
+#if EXIV2_TEST_VERSION(0,27,0)
+            throw Exiv2::Error(Exiv2::kerErrorMessage, error);
+#else
             throw Exiv2::Error(1, error);
+#endif
         }
 
         /* List of tag names taken from exiv2's printSummary() in actions.cpp */
diff --git a/plugins/load-dcraw/ufraw_message.c b/plugins/load-dcraw/ufraw_message.c
index 3b9cf721..a7186571 100644
--- a/plugins/load-dcraw/ufraw_message.c
+++ b/plugins/load-dcraw/ufraw_message.c
@@ -2,7 +2,7 @@
  * UFRaw - Unidentified Flying Raw converter for digital camera images
  *
  * ufraw_message.c - Error message handling functions
- * Copyright 2004-2015 by Udi Fuchs
+ * Copyright 2004-2016 by Udi Fuchs
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
diff --git a/plugins/load-dcraw/ufraw_routines.c b/plugins/load-dcraw/ufraw_routines.c
index 09e8f0b2..4fcbe100 100644
--- a/plugins/load-dcraw/ufraw_routines.c
+++ b/plugins/load-dcraw/ufraw_routines.c
@@ -2,7 +2,7 @@
  * UFRaw - Unidentified Flying Raw converter for digital camera images
  *
  * ufraw_routines.c - general routines
- * Copyright 2004-2015 by Udi Fuchs
+ * Copyright 2004-2016 by Udi Fuchs
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
diff --git a/plugins/load-dcraw/ufraw_settings.cc b/plugins/load-dcraw/ufraw_settings.cc
index a705c14a..5076ec91 100644
--- a/plugins/load-dcraw/ufraw_settings.cc
+++ b/plugins/load-dcraw/ufraw_settings.cc
@@ -2,7 +2,7 @@
  * UFRaw - Unidentified Flying Raw converter for digital camera images
  *
  * ufraw_settings.cc - define all UFObject settings.
- * Copyright 2004-2015 by Udi Fuchs
+ * Copyright 2004-2016 by Udi Fuchs
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -69,8 +69,7 @@ class Image : public ImageCommon
 public:
     explicit Image(UFObject *root = NULL);
     void SetUFRawData(ufraw_data *data);
-    static ufraw_data *UFRawData(UFObject *object)
-    {
+    static ufraw_data *UFRawData(UFObject *object) {
         if (object->Name() == ufRawImage)
             return dynamic_cast<Image *>(object)->uf;
         if (!object->HasParent())
@@ -78,8 +77,7 @@ class Image : public ImageCommon
         return Image::UFRawData(&object->Parent());
     }
     void SetWB(const char *mode = NULL);
-    void Message(const char *Format, ...) const
-    {
+    void Message(const char *Format, ...) const {
         if (Format == NULL)
             return;
         va_list ap;
@@ -108,14 +106,12 @@ class WB : public UFArray
 {
 public:
     WB() : UFArray(ufWB, uf_camera_wb) { }
-    void Event(UFEventType type)
-    {
+    void Event(UFEventType type) {
         // spot_wb is a temporary value, that would be changed in SetWB()
         if (!this->IsEqual(uf_spot_wb))
             UFObject::Event(type);
     }
-    void OriginalValueChangedEvent()
-    {
+    void OriginalValueChangedEvent() {
         /* Keep compatibility with old numbers from ufraw-0.6 */
         int i;
         if (strlen(StringValue()) <= 2 &&
@@ -160,8 +156,7 @@ class WB : public UFArray
     }
     // Use the original XML format instead of UFArray's format.
     // Output XML block even if IsDefault().
-    std::string XML(const char *indent) const
-    {
+    std::string XML(const char *indent) const {
         char *value = g_markup_escape_text(StringValue(), -1);
         std::string str = (std::string)indent +
                           "<" + Name() + ">" + value + "</" + Name() + ">\n";
@@ -177,8 +172,7 @@ class WBFineTuning : public UFNumber
 {
 public:
     WBFineTuning() : UFNumber(ufWBFineTuning, -9, 9, 0, 0, 1, 1) { }
-    void OriginalValueChangedEvent()
-    {
+    void OriginalValueChangedEvent() {
         if (!HasParent())
             return;
         UFArray &wb = ParentImage(this)[ufWB];
@@ -189,8 +183,7 @@ class WBFineTuning : public UFNumber
             ParentImage(this).SetWB();
     }
     // Output XML block even if IsDefault().
-    std::string XML(const char *indent) const
-    {
+    std::string XML(const char *indent) const {
         char *value = g_markup_escape_text(StringValue(), -1);
         std::string str = (std::string)indent +
                           "<" + Name() + ">" + value + "</" + Name() + ">\n";
@@ -206,8 +199,7 @@ class Temperature : public UFNumber
 {
 public:
     Temperature() : UFNumber(ufTemperature, 2000, 23000, 6500, 0, 50, 200) { }
-    void OriginalValueChangedEvent()
-    {
+    void OriginalValueChangedEvent() {
         if (HasParent())
             ParentImage(this).SetWB(uf_manual_wb);
     }
@@ -220,8 +212,7 @@ class Green : public UFNumber
 {
 public:
     Green() : UFNumber(ufGreen, 0.2, 2.5, 1.0, 3, 0.01, 0.05) { };
-    void OriginalValueChangedEvent()
-    {
+    void OriginalValueChangedEvent() {
         if (HasParent())
             ParentImage(this).SetWB(uf_manual_wb);
     }
@@ -236,8 +227,7 @@ class ChannelMultipliers : public UFNumberArray
     ChannelMultipliers() : UFNumberArray(ufChannelMultipliers, 4,
                                              0.010, 99.000, 1.0, 3, 0.001,
                                              0.001) { };
-    void Event(UFEventType type)
-    {
+    void Event(UFEventType type) {
         if (type != uf_value_changed)
             return UFObject::Event(type);
         if (!HasParent())
@@ -263,14 +253,12 @@ class ChannelMultipliers : public UFNumberArray
 
         UFObject::Event(type);
     }
-    void OriginalValueChangedEvent()
-    {
+    void OriginalValueChangedEvent() {
         if (HasParent())
             ParentImage(this).SetWB(uf_spot_wb);
     }
     // Output XML block even if IsDefault().
-    std::string XML(const char *indent) const
-    {
+    std::string XML(const char *indent) const {
         std::string str = "";
         char num[10];
         for (int i = 0; i < Size(); i++) {
@@ -294,8 +282,7 @@ class LensfunAuto : public UFString
 {
 public:
     LensfunAuto() : UFString(ufLensfunAuto, "yes") { }
-    void OriginalValueChangedEvent()
-    {
+    void OriginalValueChangedEvent() {
         if (!HasParent())
             return;
         if (IsEqual("auto")) {
@@ -355,7 +342,7 @@ void Image::SetWB(const char *mode)
     }
     if (mode != NULL)
         wb.Set(mode);
-    ufraw_set_wb(uf);
+    ufraw_set_wb(uf, TRUE);
     if (wb.IsEqual(uf_spot_wb))
         wb.Set(uf_manual_wb);
 }
@@ -368,7 +355,7 @@ void Image::SetUFRawData(ufraw_data *data)
 
     dcraw_data *raw = static_cast<dcraw_data *>(uf->raw);
     if (strcasecmp(uf->conf->make, raw->make) != 0 ||
-            strcmp(uf->conf->model, raw->model) != 0)
+            strcasecmp(uf->conf->model, raw->model) != 0)
         uf->WBDirty = TRUE; // Re-calculate channel multipliers.
     if (uf->LoadingID)
         uf->WBDirty = TRUE; // Re-calculate channel multipliers.
@@ -391,7 +378,7 @@ void Image::SetUFRawData(ufraw_data *data)
     }
     UFArray &wb = (*this)[ufWB];
     for (int i = 0; i < wb_preset_count; i++) {
-        if (strcmp(wb_preset[i].make, "") == 0) {
+        if (strcasecmp(wb_preset[i].make, "") == 0) {
             /* Common presets */
             if (strcmp(wb_preset[i].name, uf_camera_wb) == 0) {
                 // Get the camera's presets.
@@ -409,7 +396,7 @@ void Image::SetUFRawData(ufraw_data *data)
             }
             wb << new UFString(ufPreset, wb_preset[i].name);
         } else if (strcasecmp(wb_preset[i].make, uf->conf->make) == 0 &&
-                   strcmp(wb_preset[i].model, model) == 0) {
+                   strcasecmp(wb_preset[i].model, model) == 0) {
             /* Camera specific presets */
             uf->wb_presets_make_model_match = TRUE;
             if (lastPreset == NULL ||
@@ -427,8 +414,7 @@ extern "C" {
 class Resources : public UFGroup
 {
 public:
-    Resources(): UFGroup(ufRawResources)
-    {
+    Resources(): UFGroup(ufRawResources) {
         *this << new Image(this);
     }
 };
@@ -437,8 +423,7 @@ class CommandLineImage : public ImageCommon
 {
 public:
     CommandLineImage(): ImageCommon() { }
-    void Event(UFEventType type)
-    {
+    void Event(UFEventType type) {
         if (type != uf_element_added)
             return UFObject::Event(type);
         if (Has(ufTemperature) || Has(ufGreen)) {
@@ -478,12 +463,10 @@ extern "C" {
 class CommandLine : public UFGroup
 {
 public:
-    CommandLine(): UFGroup(ufCommandLine)
-    {
+    CommandLine(): UFGroup(ufCommandLine) {
         *this << new CommandLineImage;
     }
-    void Message(const char *Format, ...) const
-    {
+    void Message(const char *Format, ...) const {
         if (Format == NULL)
             return;
         va_list ap;
diff --git a/plugins/load-dcraw/ufraw_ufraw.c b/plugins/load-dcraw/ufraw_ufraw.c
index ce9d262a..516b4c70 100644
--- a/plugins/load-dcraw/ufraw_ufraw.c
+++ b/plugins/load-dcraw/ufraw_ufraw.c
@@ -2,7 +2,7 @@
  * UFRaw - Unidentified Flying Raw converter for digital camera images
  *
  * ufraw_ufraw.c - program interface to all the components
- * Copyright 2004-2015 by Udi Fuchs
+ * Copyright 2004-2016 by Udi Fuchs
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -668,6 +668,7 @@ int ufraw_load_raw(ufraw_data *uf)
         ufraw_message(status, raw->message);
         if (status != DCRAW_WARNING) return status;
     }
+    uf->HaveFilters = raw->filters != 0;
     uf->raw_multiplier = ufraw_scale_raw(raw);
     /* Canon EOS cameras require special exposure normalization */
     if (strcasecmp(uf->conf->make, "Canon") == 0 &&
@@ -726,7 +727,7 @@ int ufraw_load_raw(ufraw_data *uf)
         UFObject *wbTuning = ufgroup_element(uf->conf->ufobject,
                                              ufWBFineTuning);
         double oldTuning = ufnumber_value(wbTuning);
-        ufraw_set_wb(uf);
+        ufraw_set_wb(uf, FALSE);
         /* Here ufobject's automation goes against us. A change in
          * ChannelMultipliers might change ufWB to uf_manual_wb.
          * So we need to change it back. */
@@ -1043,9 +1044,9 @@ static void ufraw_shave_hotpixels(ufraw_data *uf, dcraw_image_type *img,
     delta = rgbMax / (uf->conf->hotpixel + 1.0);
     count = 0;
 #ifdef _OPENMP
-    #pragma omp parallel for schedule(static) default(none) \
+    #pragma omp parallel for schedule(static) \
     shared(uf,img,width,height,colors,rgbMax,delta) \
-    reduction(+:count) \
+reduction(+:count) \
     private(h,p,w,c,t,v,hi,i)
 #endif
     for (h = 1; h < height - 1; ++h) {
@@ -1365,7 +1366,7 @@ static void ufraw_convert_reverse_wb(ufraw_data *uf, UFRawPhase phase)
         mul[i] = (guint64)0x10000 * 0x10000 / uf->developer->rgbWB[i];
     size = img->height * img->width;
 #ifdef _OPENMP
-    #pragma omp parallel for schedule(static) default(none) \
+    #pragma omp parallel for schedule(static) \
     shared(uf,phase,img,mul,size) \
     private(i,p16,c,px)
 #endif
@@ -1390,7 +1391,7 @@ static void ufraw_convert_image_tca(ufraw_data *uf, ufraw_image_data *img,
         return;
     int y;
 #ifdef _OPENMP
-    #pragma omp parallel for schedule(static) default(none) \
+    #pragma omp parallel for schedule(static) \
     shared(uf,img,outimg,area)
 #endif
     for (y = area->y; y < area->y + area->height; y++) {
@@ -2016,7 +2017,7 @@ void ufraw_invalidate_smoothing_layer(ufraw_data *uf)
     ufraw_invalidate_layer(uf, ufraw_first_phase);
 }
 
-int ufraw_set_wb(ufraw_data *uf)
+int ufraw_set_wb(ufraw_data *uf, gboolean interactive)
 {
     dcraw_data *raw = uf->raw;
     double rgbWB[3];
@@ -2033,37 +2034,39 @@ int ufraw_set_wb(ufraw_data *uf)
     /* For uf_manual_wb we calculate chanMul from the temperature/green. */
     /* For all other it is the other way around. */
     if (ufarray_is_equal(wb, uf_manual_wb)) {
-        double chanMulArray[4] = {1, 1, 1, 1 };
-        Temperature_to_RGB(ufnumber_value(temperature), rgbWB);
-        rgbWB[1] = rgbWB[1] / ufnumber_value(green);
-        /* Suppose we shot a white card at some temperature:
-         * rgbWB[3] = rgb_cam[3][4] * preMul[4] * camWhite[4]
-         * Now we want to make it white (1,1,1), so we replace preMul
-         * with chanMul, which is defined as:
-         * chanMul[4][4] = cam_rgb[4][3] * (1/rgbWB[3][3]) * rgb_cam[3][4]
-         *		* preMul[4][4]
-         * We "upgraded" preMul, chanMul and rgbWB to diagonal matrices.
-         * This allows for the manipulation:
-         * (1/chanMul)[4][4] = (1/preMul)[4][4] * cam_rgb[4][3] * rgbWB[3][3]
-         *		* rgb_cam[3][4]
-         * We use the fact that rgb_cam[3][4] * (1,1,1,1) = (1,1,1) and get:
-         * (1/chanMul)[4] = (1/preMul)[4][4] * cam_rgb[4][3] * rgbWB[3]
-         */
-        if (uf->raw_color) {
-            /* If there is no color matrix it is simple */
-            if (uf->colors > 1)
-                for (c = 0; c < 3; c++)
-                    chanMulArray[c] = raw->pre_mul[c] / rgbWB[c];
-            ufnumber_array_set(chanMul, chanMulArray);
-        } else {
-            for (c = 0; c < uf->colors; c++) {
-                double chanMulInv = 0;
-                for (cc = 0; cc < 3; cc++)
-                    chanMulInv += 1 / raw->pre_mul[c] * raw->cam_rgb[c][cc]
-                                  * rgbWB[cc];
-                chanMulArray[c] = 1 / chanMulInv;
+        if (interactive) {
+            double chanMulArray[4] = {1, 1, 1, 1 };
+            Temperature_to_RGB(ufnumber_value(temperature), rgbWB);
+            rgbWB[1] = rgbWB[1] / ufnumber_value(green);
+            /* Suppose we shot a white card at some temperature:
+             * rgbWB[3] = rgb_cam[3][4] * preMul[4] * camWhite[4]
+             * Now we want to make it white (1,1,1), so we replace preMul
+             * with chanMul, which is defined as:
+             * chanMul[4][4] = cam_rgb[4][3] * (1/rgbWB[3][3]) * rgb_cam[3][4]
+             *          * preMul[4][4]
+             * We "upgraded" preMul, chanMul and rgbWB to diagonal matrices.
+             * This allows for the manipulation:
+             * (1/chanMul)[4][4] = (1/preMul)[4][4] * cam_rgb[4][3] * rgbWB[3][3]
+             *          * rgb_cam[3][4]
+             * We use the fact that rgb_cam[3][4] * (1,1,1,1) = (1,1,1) and get:
+             * (1/chanMul)[4] = (1/preMul)[4][4] * cam_rgb[4][3] * rgbWB[3]
+             */
+            if (uf->raw_color) {
+                /* If there is no color matrix it is simple */
+                if (uf->colors > 1)
+                    for (c = 0; c < 3; c++)
+                        chanMulArray[c] = raw->pre_mul[c] / rgbWB[c];
+                ufnumber_array_set(chanMul, chanMulArray);
+            } else {
+                for (c = 0; c < uf->colors; c++) {
+                    double chanMulInv = 0;
+                    for (cc = 0; cc < 3; cc++)
+                        chanMulInv += 1 / raw->pre_mul[c] * raw->cam_rgb[c][cc]
+                                      * rgbWB[cc];
+                    chanMulArray[c] = 1 / chanMulInv;
+                }
+                ufnumber_array_set(chanMul, chanMulArray);
             }
-            ufnumber_array_set(chanMul, chanMulArray);
         }
         ufnumber_set(wbTuning, 0);
         return UFRAW_SUCCESS;
@@ -2125,7 +2128,7 @@ int ufraw_set_wb(ufraw_data *uf)
         for (i = 0; i < wb_preset_count; i++) {
             if (ufarray_is_equal(wb, wb_preset[i].name) &&
                     !strcasecmp(uf->conf->make, wb_preset[i].make) &&
-                    !strcmp(model, wb_preset[i].model)) {
+                    !strcasecmp(model, wb_preset[i].model)) {
                 if (ufnumber_value(wbTuning) == wb_preset[i].tuning) {
                     double chanMulArray[4] = {1, 1, 1, 1 };
                     for (c = 0; c < uf->colors; c++)
@@ -2175,7 +2178,7 @@ int ufraw_set_wb(ufraw_data *uf)
                 ufnumber_array_set(chanMul, wb_preset[lastTuning].channel);
             } else {
                 ufobject_set_string(wb, uf_manual_wb);
-                ufraw_set_wb(uf);
+                ufraw_set_wb(uf, interactive);
                 return UFRAW_WARNING;
             }
         }
diff --git a/plugins/load-dcraw/ufraw_writer.c b/plugins/load-dcraw/ufraw_writer.c
index b26a9522..cd20e178 100644
--- a/plugins/load-dcraw/ufraw_writer.c
+++ b/plugins/load-dcraw/ufraw_writer.c
@@ -2,7 +2,7 @@
  * UFRaw - Unidentified Flying Raw converter for digital camera images
  *
  * ufraw_writer.c - functions to output image files in different formats.
- * Copyright 2004-2015 by Udi Fuchs
+ * Copyright 2004-2016 by Udi Fuchs
  *
  * This program is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
diff --git a/plugins/load-dcraw/wb_presets.c b/plugins/load-dcraw/wb_presets.c
index cd66fead..79fc2045 100644
--- a/plugins/load-dcraw/wb_presets.c
+++ b/plugins/load-dcraw/wb_presets.c
@@ -2,7 +2,7 @@
  * UFRaw - Unidentified Flying Raw converter for digital camera images
  *
  * wb_presets.c - White balance preset values for various cameras
- * Copyright 2004-2015 by Udi Fuchs
+ * Copyright 2004-2016 by Udi Fuchs
  *
  * Thanks goes for all the people who sent in the preset values
  * for their cameras.
@@ -24,7 +24,7 @@
  *	      will be interpolated.
  * Column 5 - Channel multipliers.
  *
- * Minolta's ALPHA and MAXXUM models are treated as the DYNAX model.
+ * MINOLTA's ALPHA and MAXXUM models are treated as the DYNAX model.
  *
  * WB name is standardized to one of the following: */
 // "Sunlight" and other variation should be switched to this:
@@ -39,20 +39,20 @@ static const char IncandescentWarm[] = N_("Incandescent warm");
 // Same as "Incandescent":
 static const char Tungsten[] = N_("Tungsten");
 static const char Fluorescent[] = N_("Fluorescent");
-// In Canon cameras and some newer Nikon cameras:
+// In Canon cameras and some newer NIKON cameras:
 static const char FluorescentHigh[] = N_("Fluorescent high");
 static const char CoolWhiteFluorescent[] = N_("Cool white fluorescent");
 static const char WarmWhiteFluorescent[] = N_("Warm white fluorescent");
 static const char DaylightFluorescent[] = N_("Daylight fluorescent");
 static const char NeutralFluorescent[] = N_("Neutral fluorescent");
 static const char WhiteFluorescent[] = N_("White fluorescent");
-// In some newer Nikon cameras:
+// In some newer NIKON cameras:
 static const char SodiumVaporFluorescent[] = N_("Sodium-vapor fluorescent");
 static const char DayWhiteFluorescent[] = N_("Day white fluorescent");
 static const char HighTempMercuryVaporFluorescent[] = N_("High temp. mercury-vapor fluorescent");
 
 static const char Flash[] = N_("Flash");
-// For Olympus with no real "Flash" preset:
+// For OLYMPUS with no real "Flash" preset:
 static const char FlashAuto[] = N_("Flash (auto mode)");
 static const char EveningSun[] = N_("Evening sun");
 static const char Underwater[] = N_("Underwater");
@@ -79,7 +79,7 @@ const wb_data wb_preset[] = {
   { "Canon", "PowerShot A710 IS", Cloudy, 0,	{ 1.871320, 1, 1.718648, 0 } },
   { "Canon", "PowerShot A710 IS", Tungsten, 0,	{ 1.268692, 1, 2.707944, 0 } },
   { "Canon", "PowerShot A710 IS", Fluorescent, 0, { 1.589857, 1, 2.051819, 0 } },
-  { "Canon", "PowerShot A710 IS", DaylightFluorescent, 0, { 1.820287, 1, 1.820287, 0 } },
+  { "Canon", "PowerShot A710 IS", FluorescentHigh, 0, { 1.820287, 1, 1.820287, 0 } },
   { "Canon", "PowerShot A710 IS", Underwater, 0, { 2.926108, 1, 1.376847, 0 } },
 
   /* These presets were extracted from CHDK-generated DNG files. */
@@ -91,6 +91,19 @@ const wb_data wb_preset[] = {
   { "Canon", "PowerShot A720 IS", Underwater, 0, { 2.303465, 1, 1.882915, 0 } },
   { "Canon", "PowerShot A720 IS", Flash, 0,	{ 2.151586, 1, 1.864865, 0 } },
 
+  { "Canon", "PowerShot G1 X", Daylight, 0,	{ 1.950873, 1, 1.720524, 0 } },
+  { "Canon", "PowerShot G1 X", Cloudy, 0,	{ 2.123060, 1, 1.578714, 0 } },
+  { "Canon", "PowerShot G1 X", Tungsten, 0,	{ 1.244848, 1, 3.175758, 0 } },
+  { "Canon", "PowerShot G1 X", Fluorescent, 0,	{ 1.674806, 1, 2.216426, 0 } },
+  { "Canon", "PowerShot G1 X", Flash, 0,	{ 2.468997, 1, 1.299887, 0 } },
+
+  { "Canon", "PowerShot G1 X Mark II", Daylight, 0, { 1.981522, 1, 1.579348, 0 } },
+  { "Canon", "PowerShot G1 X Mark II", Shade, 0, { 2.258772, 1, 1.350877, 0 } },
+  { "Canon", "PowerShot G1 X Mark II", Cloudy, 0, { 2.138344, 1, 1.435730, 0 } },
+  { "Canon", "PowerShot G1 X Mark II", Tungsten, 0, { 1.371036, 1, 2.464059, 0 } },
+  { "Canon", "PowerShot G1 X Mark II", Fluorescent, 0, { 1.800680, 1, 2.060023, 0 } },
+  { "Canon", "PowerShot G1 X Mark II", Flash, 0, { 2.442968, 1, 1.221484, 0 } },
+
   { "Canon", "PowerShot G2", Daylight, 0,	{ 2.011483, 1, 1.299522, 0 } },
   { "Canon", "PowerShot G2", Cloudy, 0,		{ 2.032505, 1, 1.285851, 0 } },
   { "Canon", "PowerShot G2", Tungsten, 0,	{ 1.976008, 1, 1.332054, 0 } },
@@ -105,6 +118,13 @@ const wb_data wb_preset[] = {
   { "Canon", "PowerShot G3", FluorescentHigh, 0, { 2.580563, 1, 1.496164, 0 } },
   { "Canon", "PowerShot G3", Flash, 0,		{ 2.293173, 1, 1.187416, 0 } },
 
+  { "Canon", "PowerShot G3 X", Daylight, 0,	{ 2.090493, 1, 1.770905, 0 } },
+  { "Canon", "PowerShot G3 X", Shade, 0,	{ 2.371264, 1, 1.511494, 0 } },
+  { "Canon", "PowerShot G3 X", Cloudy, 0,	{ 2.242286, 1, 1.608000, 0 } },
+  { "Canon", "PowerShot G3 X", Tungsten, 0,	{ 1.463675, 1, 2.698718, 0 } },
+  { "Canon", "PowerShot G3 X", Fluorescent, 0,	{ 2.119710, 1, 2.443773, 0 } },
+  { "Canon", "PowerShot G3 X", Flash, 0,	{ 2.555426, 1, 1.417736, 0 } },
+
   { "Canon", "PowerShot G5", Daylight, 0,	{ 1.639521, 1, 1.528144, 0 } },
   { "Canon", "PowerShot G5", Cloudy, 0,		{ 1.702153, 1, 1.462919, 0 } },
   { "Canon", "PowerShot G5", Tungsten, 0,	{ 1.135071, 1, 2.374408, 0 } },
@@ -112,6 +132,13 @@ const wb_data wb_preset[] = {
   { "Canon", "PowerShot G5", FluorescentHigh, 0, { 1.463297, 1, 1.764140, 0 } },
   { "Canon", "PowerShot G5", Flash, 0,		{ 1.603593, 1, 1.562874, 0 } },
 
+  { "Canon", "PowerShot G5 X", Daylight, 0,	{ 2.210405, 1, 1.705202, 0 } },
+  { "Canon", "PowerShot G5 X", Shade, 0,	{ 2.544601, 1, 1.462441, 0 } },
+  { "Canon", "PowerShot G5 X", Cloudy, 0,	{ 2.389277, 1, 1.574592, 0 } },
+  { "Canon", "PowerShot G5 X", Tungsten, 0,	{ 1.497868, 1, 2.715352, 0 } },
+  { "Canon", "PowerShot G5 X", Fluorescent, 0,	{ 2.185766, 1, 2.396864, 0 } },
+  { "Canon", "PowerShot G5 X", Flash, 0,	{ 2.637647, 1, 1.384706, 0 } },
+
   { "Canon", "PowerShot G6", Daylight, 0,	{ 1.769704, 1, 1.637931, 0 } },
   { "Canon", "PowerShot G6", Cloudy, 0,		{ 2.062731, 1, 1.442804, 0 } },
   { "Canon", "PowerShot G6", Tungsten, 0,	{ 1.077106, 1, 2.721234, 0 } },
@@ -119,6 +146,169 @@ const wb_data wb_preset[] = {
   { "Canon", "PowerShot G6", FluorescentHigh, 0, { 2.543677, 1, 1.650587, 0 } },
   { "Canon", "PowerShot G6", Flash, 0,		{ 2.285322, 1, 1.333333, 0 } },
 
+  /* Canon PowerShot G7 X Firmware Version 1.0.0 */
+  { "Canon", "PowerShot G7 X", Daylight, -9,	{ 1.783160, 1, 2.119954, 0 } },
+  { "Canon", "PowerShot G7 X", Daylight, -8,	{ 1.808266, 1, 2.072331, 0 } },
+  { "Canon", "PowerShot G7 X", Daylight, -7,	{ 1.836197, 1, 2.028637, 0 } },
+  { "Canon", "PowerShot G7 X", Daylight, -6,	{ 1.865143, 1, 1.986286, 0 } },
+  { "Canon", "PowerShot G7 X", Daylight, -5,	{ 1.901938, 1, 1.930445, 0 } },
+  { "Canon", "PowerShot G7 X", Daylight, -4,	{ 1.939773, 1, 1.878409, 0 } },
+  { "Canon", "PowerShot G7 X", Daylight, -3,	{ 1.984091, 1, 1.831818, 0 } },
+  { "Canon", "PowerShot G7 X", Daylight, -2,	{ 2.037500, 1, 1.780682, 0 } },
+  { "Canon", "PowerShot G7 X", Daylight, -1,	{ 2.087699, 1, 1.739180, 0 } },
+  { "Canon", "PowerShot G7 X", Daylight, 0,	{ 2.125285, 1, 1.703872, 0 } },
+  { "Canon", "PowerShot G7 X", Daylight, 1,	{ 2.170091, 1, 1.670091, 0 } },
+  { "Canon", "PowerShot G7 X", Daylight, 2,	{ 2.213227, 1, 1.624857, 0 } },
+  { "Canon", "PowerShot G7 X", Daylight, 3,	{ 2.262857, 1, 1.584000, 0 } },
+  { "Canon", "PowerShot G7 X", Daylight, 4,	{ 2.306286, 1, 1.544000, 0 } },
+  { "Canon", "PowerShot G7 X", Daylight, 5,	{ 2.375000, 1, 1.494266, 0 } },
+  { "Canon", "PowerShot G7 X", Daylight, 6,	{ 2.454441, 1, 1.445213, 0 } },
+  { "Canon", "PowerShot G7 X", Daylight, 7,	{ 2.538636, 1, 1.396591, 0 } },
+  { "Canon", "PowerShot G7 X", Daylight, 8,	{ 2.644444, 1, 1.340351, 0 } },
+  { "Canon", "PowerShot G7 X", Daylight, 9,	{ 2.788849, 1, 1.282325, 0 } },
+  { "Canon", "PowerShot G7 X", Shade, -9,	{ 1.964813, 1, 1.847900, 0 } },
+  { "Canon", "PowerShot G7 X", Shade, -8,	{ 2.010216, 1, 1.800227, 0 } },
+  { "Canon", "PowerShot G7 X", Shade, -7,	{ 2.062429, 1, 1.748014, 0 } },
+  { "Canon", "PowerShot G7 X", Shade, -6,	{ 2.109339, 1, 1.716401, 0 } },
+  { "Canon", "PowerShot G7 X", Shade, -5,	{ 2.144647, 1, 1.685649, 0 } },
+  { "Canon", "PowerShot G7 X", Shade, -4,	{ 2.191562, 1, 1.644242, 0 } },
+  { "Canon", "PowerShot G7 X", Shade, -3,	{ 2.238041, 1, 1.600228, 0 } },
+  { "Canon", "PowerShot G7 X", Shade, -2,	{ 2.284247, 1, 1.559361, 0 } },
+  { "Canon", "PowerShot G7 X", Shade, -1,	{ 2.342497, 1, 1.517755, 0 } },
+  { "Canon", "PowerShot G7 X", Shade, 0,	{ 2.413318, 1, 1.463835, 0 } },
+  { "Canon", "PowerShot G7 X", Shade, 1,	{ 2.494226, 1, 1.414550, 0 } },
+  { "Canon", "PowerShot G7 X", Shade, 2,	{ 2.588372, 1, 1.363953, 0 } },
+  { "Canon", "PowerShot G7 X", Shade, 3,	{ 2.720000, 1, 1.302353, 0 } },
+  { "Canon", "PowerShot G7 X", Shade, 4,	{ 2.874402, 1, 1.247608, 0 } },
+  { "Canon", "PowerShot G7 X", Shade, 5,	{ 3.064792, 1, 1.189487, 0 } },
+  { "Canon", "PowerShot G7 X", Shade, 6,	{ 3.337121, 1, 1.126263, 0 } },
+  { "Canon", "PowerShot G7 X", Shade, 7,	{ 3.668421, 1, 1.068421, 0 } },
+  { "Canon", "PowerShot G7 X", Shade, 8,	{ 4.072022, 1, 1.015235, 0 } },
+  { "Canon", "PowerShot G7 X", Shade, 9,	{ 4.596750, 1, 0.964549, 0 } },
+  { "Canon", "PowerShot G7 X", Cloudy, -9,	{ 1.872872, 1, 1.937571, 0 } },
+  { "Canon", "PowerShot G7 X", Cloudy, -8,	{ 1.918275, 1, 1.892168, 0 } },
+  { "Canon", "PowerShot G7 X", Cloudy, -7,	{ 1.958050, 1, 1.843537, 0 } },
+  { "Canon", "PowerShot G7 X", Cloudy, -6,	{ 2.002265, 1, 1.792752, 0 } },
+  { "Canon", "PowerShot G7 X", Cloudy, -5,	{ 2.058957, 1, 1.746032, 0 } },
+  { "Canon", "PowerShot G7 X", Cloudy, -4,	{ 2.097616, 1, 1.709421, 0 } },
+  { "Canon", "PowerShot G7 X", Cloudy, -3,	{ 2.133939, 1, 1.675369, 0 } },
+  { "Canon", "PowerShot G7 X", Cloudy, -2,	{ 2.186788, 1, 1.640091, 0 } },
+  { "Canon", "PowerShot G7 X", Cloudy, -1,	{ 2.230068, 1, 1.595672, 0 } },
+  { "Canon", "PowerShot G7 X", Cloudy, 0,	{ 2.278221, 1, 1.553022, 0 } },
+  { "Canon", "PowerShot G7 X", Cloudy, 1,	{ 2.327252, 1, 1.508552, 0 } },
+  { "Canon", "PowerShot G7 X", Cloudy, 2,	{ 2.403207, 1, 1.460481, 0 } },
+  { "Canon", "PowerShot G7 X", Cloudy, 3,	{ 2.485023, 1, 1.411290, 0 } },
+  { "Canon", "PowerShot G7 X", Cloudy, 4,	{ 2.575406, 1, 1.359629, 0 } },
+  { "Canon", "PowerShot G7 X", Cloudy, 5,	{ 2.707746, 1, 1.299296, 0 } },
+  { "Canon", "PowerShot G7 X", Cloudy, 6,	{ 2.860382, 1, 1.244630, 0 } },
+  { "Canon", "PowerShot G7 X", Cloudy, 7,	{ 3.046285, 1, 1.187576, 0 } },
+  { "Canon", "PowerShot G7 X", Cloudy, 8,	{ 3.316981, 1, 1.122013, 0 } },
+  { "Canon", "PowerShot G7 X", Cloudy, 9,	{ 3.644823, 1, 1.064220, 0 } },
+  { "Canon", "PowerShot G7 X", Tungsten, -9,	{ 1.257614, 1, 3.238579, 0 } },
+  { "Canon", "PowerShot G7 X", Tungsten, -8,	{ 1.277778, 1, 3.184343, 0 } },
+  { "Canon", "PowerShot G7 X", Tungsten, -7,	{ 1.301887, 1, 3.138365, 0 } },
+  { "Canon", "PowerShot G7 X", Tungsten, -6,	{ 1.323714, 1, 3.094103, 0 } },
+  { "Canon", "PowerShot G7 X", Tungsten, -5,	{ 1.344569, 1, 3.047441, 0 } },
+  { "Canon", "PowerShot G7 X", Tungsten, -4,	{ 1.368486, 1, 2.980149, 0 } },
+  { "Canon", "PowerShot G7 X", Tungsten, -3,	{ 1.389163, 1, 2.913793, 0 } },
+  { "Canon", "PowerShot G7 X", Tungsten, -2,	{ 1.415441, 1, 2.857843, 0 } },
+  { "Canon", "PowerShot G7 X", Tungsten, -1,	{ 1.437424, 1, 2.780073, 0 } },
+  { "Canon", "PowerShot G7 X", Tungsten, 0,	{ 1.466102, 1, 2.727603, 0 } },
+  { "Canon", "PowerShot G7 X", Tungsten, 1,	{ 1.492788, 1, 2.658654, 0 } },
+  { "Canon", "PowerShot G7 X", Tungsten, 2,	{ 1.523353, 1, 2.605988, 0 } },
+  { "Canon", "PowerShot G7 X", Tungsten, 3,	{ 1.546539, 1, 2.562053, 0 } },
+  { "Canon", "PowerShot G7 X", Tungsten, 4,	{ 1.570749, 1, 2.516052, 0 } },
+  { "Canon", "PowerShot G7 X", Tungsten, 5,	{ 1.601423, 1, 2.469751, 0 } },
+  { "Canon", "PowerShot G7 X", Tungsten, 6,	{ 1.629586, 1, 2.427219, 0 } },
+  { "Canon", "PowerShot G7 X", Tungsten, 7,	{ 1.659198, 1, 2.378538, 0 } },
+  { "Canon", "PowerShot G7 X", Tungsten, 8,	{ 1.676023, 1, 2.311111, 0 } },
+  { "Canon", "PowerShot G7 X", Tungsten, 9,	{ 1.709790, 1, 2.251748, 0 } },
+  { "Canon", "PowerShot G7 X", Fluorescent, -9,	{ 1.784211, 1, 2.950000, 0 } },
+  { "Canon", "PowerShot G7 X", Fluorescent, -8,	{ 1.817824, 1, 2.891219, 0 } },
+  { "Canon", "PowerShot G7 X", Fluorescent, -7,	{ 1.851175, 1, 2.828982, 0 } },
+  { "Canon", "PowerShot G7 X", Fluorescent, -6,	{ 1.883117, 1, 2.762338, 0 } },
+  { "Canon", "PowerShot G7 X", Fluorescent, -5,	{ 1.916129, 1, 2.686452, 0 } },
+  { "Canon", "PowerShot G7 X", Fluorescent, -4,	{ 1.948718, 1, 2.611538, 0 } },
+  { "Canon", "PowerShot G7 X", Fluorescent, -3,	{ 1.984713, 1, 2.536306, 0 } },
+  { "Canon", "PowerShot G7 X", Fluorescent, -2,	{ 2.017766, 1, 2.475888, 0 } },
+  { "Canon", "PowerShot G7 X", Fluorescent, -1,	{ 2.049242, 1, 2.411616, 0 } },
+  { "Canon", "PowerShot G7 X", Fluorescent, 0,	{ 2.083019, 1, 2.355975, 0 } },
+  { "Canon", "PowerShot G7 X", Fluorescent, 1,	{ 2.116688, 1, 2.303639, 0 } },
+  { "Canon", "PowerShot G7 X", Fluorescent, 2,	{ 2.158750, 1, 2.241250, 0 } },
+  { "Canon", "PowerShot G7 X", Fluorescent, 3,	{ 2.212235, 1, 2.179775, 0 } },
+  { "Canon", "PowerShot G7 X", Fluorescent, 4,	{ 2.265918, 1, 2.122347, 0 } },
+  { "Canon", "PowerShot G7 X", Fluorescent, 5,	{ 2.324594, 1, 2.063670, 0 } },
+  { "Canon", "PowerShot G7 X", Fluorescent, 6,	{ 2.384040, 1, 1.997506, 0 } },
+  { "Canon", "PowerShot G7 X", Fluorescent, 7,	{ 2.434457, 1, 1.957553, 0 } },
+  { "Canon", "PowerShot G7 X", Fluorescent, 8,	{ 2.488722, 1, 1.921053, 0 } },
+  { "Canon", "PowerShot G7 X", Fluorescent, 9,	{ 2.547051, 1, 1.870765, 0 } },
+  { "Canon", "PowerShot G7 X", FluorescentHigh, -9, { 2.137845, 1, 2.271930, 0 } },
+  { "Canon", "PowerShot G7 X", FluorescentHigh, -8, { 2.186017, 1, 2.203496, 0 } },
+  { "Canon", "PowerShot G7 X", FluorescentHigh, -7, { 2.238155, 1, 2.142145, 0 } },
+  { "Canon", "PowerShot G7 X", FluorescentHigh, -6, { 2.288917, 1, 2.080946, 0 } },
+  { "Canon", "PowerShot G7 X", FluorescentHigh, -5, { 2.348039, 1, 2.015931, 0 } },
+  { "Canon", "PowerShot G7 X", FluorescentHigh, -4, { 2.413965, 1, 1.967581, 0 } },
+  { "Canon", "PowerShot G7 X", FluorescentHigh, -3, { 2.460674, 1, 1.930087, 0 } },
+  { "Canon", "PowerShot G7 X", FluorescentHigh, -2, { 2.513750, 1, 1.885000, 0 } },
+  { "Canon", "PowerShot G7 X", FluorescentHigh, -1, { 2.576441, 1, 1.835840, 0 } },
+  { "Canon", "PowerShot G7 X", FluorescentHigh, 0, { 2.637390, 1, 1.784191, 0 } },
+  { "Canon", "PowerShot G7 X", FluorescentHigh, 1, { 2.700629, 1, 1.738365, 0 } },
+  { "Canon", "PowerShot G7 X", FluorescentHigh, 2, { 2.790139, 1, 1.677623, 0 } },
+  { "Canon", "PowerShot G7 X", FluorescentHigh, 3, { 2.891858, 1, 1.618321, 0 } },
+  { "Canon", "PowerShot G7 X", FluorescentHigh, 4, { 3.001282, 1, 1.561538, 0 } },
+  { "Canon", "PowerShot G7 X", FluorescentHigh, 5, { 3.157143, 1, 1.494805, 0 } },
+  { "Canon", "PowerShot G7 X", FluorescentHigh, 6, { 3.352318, 1, 1.426490, 0 } },
+  { "Canon", "PowerShot G7 X", FluorescentHigh, 7, { 3.576662, 1, 1.366350, 0 } },
+  { "Canon", "PowerShot G7 X", FluorescentHigh, 8, { 3.911392, 1, 1.288326, 0 } },
+  { "Canon", "PowerShot G7 X", FluorescentHigh, 9, { 4.358519, 1, 1.223704, 0 } },
+  { "Canon", "PowerShot G7 X", Flash, -9,	{ 2.063564, 1, 1.745743, 0 } },
+  { "Canon", "PowerShot G7 X", Flash, -8,	{ 2.097616, 1, 1.711691, 0 } },
+  { "Canon", "PowerShot G7 X", Flash, -7,	{ 2.137500, 1, 1.678409, 0 } },
+  { "Canon", "PowerShot G7 X", Flash, -6,	{ 2.181818, 1, 1.637500, 0 } },
+  { "Canon", "PowerShot G7 X", Flash, -5,	{ 2.233485, 1, 1.596811, 0 } },
+  { "Canon", "PowerShot G7 X", Flash, -4,	{ 2.281642, 1, 1.557583, 0 } },
+  { "Canon", "PowerShot G7 X", Flash, -3,	{ 2.337143, 1, 1.514286, 0 } },
+  { "Canon", "PowerShot G7 X", Flash, -2,	{ 2.405963, 1, 1.462156, 0 } },
+  { "Canon", "PowerShot G7 X", Flash, -1,	{ 2.489043, 1, 1.414072, 0 } },
+  { "Canon", "PowerShot G7 X", Flash, 0,	{ 2.585366, 1, 1.361208, 0 } },
+  { "Canon", "PowerShot G7 X", Flash, 1,	{ 2.710928, 1, 1.301998, 0 } },
+  { "Canon", "PowerShot G7 X", Flash, 2,	{ 2.869773, 1, 1.244922, 0 } },
+  { "Canon", "PowerShot G7 X", Flash, 3,	{ 3.054878, 1, 1.185366, 0 } },
+  { "Canon", "PowerShot G7 X", Flash, 4,	{ 3.318239, 1, 1.122013, 0 } },
+  { "Canon", "PowerShot G7 X", Flash, 5,	{ 3.649606, 1, 1.066929, 0 } },
+  { "Canon", "PowerShot G7 X", Flash, 6,	{ 4.066390, 1, 1.013831, 0 } },
+  { "Canon", "PowerShot G7 X", Flash, 7,	{ 4.593796, 1, 0.964549, 0 } },
+  { "Canon", "PowerShot G7 X", Flash, 8,	{ 5.258786, 1, 0.918530, 0 } },
+  { "Canon", "PowerShot G7 X", Flash, 9,	{ 6.229537, 1, 0.875445, 0 } },
+  { "Canon", "PowerShot G7 X", Underwater, -9,	{ 1.826772, 1, 2.085489, 0 } },
+  { "Canon", "PowerShot G7 X", Underwater, -8,	{ 1.858889, 1, 2.036667, 0 } },
+  { "Canon", "PowerShot G7 X", Underwater, -7,	{ 1.890258, 1, 1.995521, 0 } },
+  { "Canon", "PowerShot G7 X", Underwater, -6,	{ 1.937984, 1, 1.937984, 0 } },
+  { "Canon", "PowerShot G7 X", Underwater, -5,	{ 1.979911, 1, 1.888393, 0 } },
+  { "Canon", "PowerShot G7 X", Underwater, -4,	{ 2.030963, 1, 1.837156, 0 } },
+  { "Canon", "PowerShot G7 X", Underwater, -3,	{ 2.079365, 1, 1.783447, 0 } },
+  { "Canon", "PowerShot G7 X", Underwater, -2,	{ 2.114317, 1, 1.744728, 0 } },
+  { "Canon", "PowerShot G7 X", Underwater, -1,	{ 2.151025, 1, 1.714132, 0 } },
+  { "Canon", "PowerShot G7 X", Underwater, 0,	{ 2.202198, 1, 1.675824, 0 } },
+  { "Canon", "PowerShot G7 X", Underwater, 1,	{ 2.261521, 1, 1.632488, 0 } },
+  { "Canon", "PowerShot G7 X", Underwater, 2,	{ 2.308370, 1, 1.591410, 0 } },
+  { "Canon", "PowerShot G7 X", Underwater, 3,	{ 2.361392, 1, 1.551066, 0 } },
+  { "Canon", "PowerShot G7 X", Underwater, 4,	{ 2.437355, 1, 1.497680, 0 } },
+  { "Canon", "PowerShot G7 X", Underwater, 5,	{ 2.508869, 1, 1.444568, 0 } },
+  { "Canon", "PowerShot G7 X", Underwater, 6,	{ 2.603859, 1, 1.398411, 0 } },
+  { "Canon", "PowerShot G7 X", Underwater, 7,	{ 2.734624, 1, 1.337130, 0 } },
+  { "Canon", "PowerShot G7 X", Underwater, 8,	{ 2.882016, 1, 1.278351, 0 } },
+  { "Canon", "PowerShot G7 X", Underwater, 9,	{ 3.025362, 1, 1.225845, 0 } },
+
+  { "Canon", "PowerShot G7 X Mark II", Daylight, 0, { 2.111328, 1, 1.791992, 0 } },
+  { "Canon", "PowerShot G7 X Mark II", Shade, 0, { 2.419922, 1, 1.485351, 0 } },
+  { "Canon", "PowerShot G7 X Mark II", Cloudy, 0, { 2.274414, 1, 1.631836, 0 } },
+  { "Canon", "PowerShot G7 X Mark II", Tungsten, 0, { 1.440430, 1, 2.782227, 0 } },
+  { "Canon", "PowerShot G7 X Mark II", Fluorescent, 0, { 2.149414, 1, 2.474609, 0 } },
+  { "Canon", "PowerShot G7 X Mark II", FluorescentHigh, 0, { 2.419922, 1, 1.485352, 0 } },
+  { "Canon", "PowerShot G7 X Mark II", Underwater, 0, { 2.327148, 1, 1.642578, 0 } },
+  { "Canon", "PowerShot G7 X Mark II", Flash, 0, { 2.576172, 1, 1.362305, 0 } },
+
   { "Canon", "PowerShot G9", Daylight, 0,	{ 2.089552, 1, 1.786452, 0 } },
   { "Canon", "PowerShot G9", Cloudy, 0,		{ 2.208716, 1, 1.660550, 0 } },
   { "Canon", "PowerShot G9", Tungsten, 0,	{ 1.533493, 1, 2.586124, 0 } },
@@ -152,6 +342,18 @@ const wb_data wb_preset[] = {
   { "Canon", "PowerShot G12", Flash, 0,		{ 2.102157, 1, 1.706016, 0 } },
   { "Canon", "PowerShot G12", Underwater, 0,	{ 1.807650, 1, 2.112568, 0 } },
 
+  { "Canon", "PowerShot G15", Daylight, 0,	{ 2.321149, 1, 2.357702, 0 } },
+  { "Canon", "PowerShot G15", Cloudy, 0,	{ 2.733601, 1, 2.116466, 0 } },
+  { "Canon", "PowerShot G15", Tungsten, 0,	{ 1.599064, 1, 4.386895, 0 } },
+  { "Canon", "PowerShot G15", Fluorescent, 0,	{ 2.233933, 1, 2.728792, 0 } },
+  { "Canon", "PowerShot G15", Flash, 0,		{ 2.919028, 1, 1.987854, 0 } },
+
+  { "Canon", "PowerShot G16", Daylight, 0,	{ 2.042745, 1, 1.786277, 0 } },
+  { "Canon", "PowerShot G16", Cloudy, 0,	{ 2.212571, 1, 1.657143, 0 } },
+  { "Canon", "PowerShot G16", Tungsten, 0,	{ 1.678571, 1, 2.625616, 0 } },
+  { "Canon", "PowerShot G16", Fluorescent, 0,	{ 2.075472, 1, 1.957547, 0 } },
+  { "Canon", "PowerShot G16", Flash, 0,		{ 2.634884, 1, 1.317442, 0 } },
+
   /* Canon PowerShot S3 IS does not support native WB presets. These are made
      as custom WB presets. */
   { "Canon", "PowerShot S3 IS", Daylight, 0,	{ 1.627271, 1, 1.823491, 0 } },
@@ -220,6 +422,18 @@ const wb_data wb_preset[] = {
   { "Canon", "PowerShot S100", Flash, 0,	{ 2.615783, 1, 2.001294, 0 } },
   { "Canon", "PowerShot S100", Underwater, 0,	{ 2.248391, 1, 2.338481, 0 } },
 
+  { "Canon", "PowerShot S110", Daylight, 0,	{ 2.111842, 1, 2.622368, 0 } },
+  { "Canon", "PowerShot S110", Cloudy, 0,	{ 2.317460, 1, 2.449735, 0 } },
+  { "Canon", "PowerShot S110", Tungsten, 0,	{ 1.520661, 1, 4.009642, 0 } },
+  { "Canon", "PowerShot S110", Fluorescent, 0,	{ 1.879781, 1, 3.114754, 0 } },
+  { "Canon", "PowerShot S110", Flash, 0,	{ 2.627968, 1, 2.121372, 0 } },
+
+  { "Canon", "PowerShot S120", Daylight, 0,	{ 2.333333, 1, 1.469388, 0 } },
+  { "Canon", "PowerShot S120", Cloudy, 0,	{ 2.500000, 1, 1.370413, 0 } },
+  { "Canon", "PowerShot S120", Tungsten, 0,	{ 1.754505, 1, 2.006757, 0 } },
+  { "Canon", "PowerShot S120", Fluorescent, 0,	{ 2.523645, 1, 1.378316, 0 } },
+  { "Canon", "PowerShot S120", Flash, 0,	{ 2.635198, 1, 1.329837, 0 } },
+
   { "Canon", "PowerShot Pro1", Daylight, 0,	{ 1.829238, 1, 1.571253, 0 } },
   { "Canon", "PowerShot Pro1", Cloudy, 0,	{ 1.194139, 1, 2.755800, 0 } },
   { "Canon", "PowerShot Pro1", Tungsten, 0,	{ 1.701416, 1, 2.218790, 0 } },
@@ -254,6 +468,20 @@ const wb_data wb_preset[] = {
   { "Canon", "PowerShot SX50 HS", Flash, 0,	{ 1.876289, 1, 1.398969, 0 } },
   { "Canon", "PowerShot SX50 HS", Flash, 9,	{ 4.536036, 1.073574, 1, 0 } },
 
+  { "Canon", "PowerShot SX60 HS", Daylight, 0,	{ 1.605208, 1, 1.726042, 0 } },
+  { "Canon", "PowerShot SX60 HS", Shade, 0,	{ 1.993697, 1, 1.379202, 0 } },
+  { "Canon", "PowerShot SX60 HS", Cloudy, 0,	{ 1.876042, 1, 1.456250, 0 } },
+  { "Canon", "PowerShot SX60 HS", Tungsten, 0,	{ 1.158014, 1, 2.616253, 0 } },
+  { "Canon", "PowerShot SX60 HS", Fluorescent, 0, { 1.675497, 1, 2.254967, 0 } },
+  { "Canon", "PowerShot SX60 HS", FluorescentHigh, 0, { 2.098851, 1, 1.785057, 0 } },
+  { "Canon", "PowerShot SX60 HS", Flash, 0,	{ 1.966387, 1, 1.408613, 0 } },
+
+  { "Canon", "PowerShot SX160 IS", Daylight, 0,	{ 1.725252, 1, 1.444444, 0 } },
+  { "Canon", "PowerShot SX160 IS", Cloudy, 0,	{ 1.843781, 1, 1.359204, 0 } },
+  { "Canon", "PowerShot SX160 IS", Tungsten, 0,	{ 1.103726, 1, 2.322256, 0 } },
+  { "Canon", "PowerShot SX160 IS", Fluorescent, 0, { 1.704705, 1, 1.463463, 0 } },
+  { "Canon", "PowerShot SX160 IS", FluorescentHigh, 0, { 1.848423, 1, 1.355036, 0 } },
+
   { "Canon", "EOS D60", Daylight, 0,		{ 2.472594, 1, 1.225335, 0 } },
   { "Canon", "EOS D60", Cloudy, 0,		{ 2.723926, 1, 1.137423, 0 } },
   { "Canon", "EOS D60", Tungsten, 0,		{ 1.543054, 1, 1.907003, 0 } },
@@ -261,7 +489,7 @@ const wb_data wb_preset[] = {
   { "Canon", "EOS D60", Flash, 0,		{ 2.829840, 1, 1.108508, 0 } },
 
   { "Canon", "EOS 5D", Flash, 0,		{ 2.211914, 1, 1.260742, 0 } }, /*6550K*/
-  { "Canon", "EOS 5D", Fluorescent, 0,		{ 1.726054, 1, 2.088123, 0 } }, /*3850K*/
+  { "Canon", "EOS 5D", WhiteFluorescent, 0,	{ 1.726054, 1, 2.088123, 0 } }, /*3850K*/
   { "Canon", "EOS 5D", Tungsten, 0,		{ 1.373285, 1, 2.301006, 0 } }, /*3250K*/
   { "Canon", "EOS 5D", Cloudy, 0,		{ 2.151367, 1, 1.321289, 0 } }, /*6100K*/
   { "Canon", "EOS 5D", Shade, 0,		{ 2.300781, 1, 1.208008, 0 } }, /*7200K*/
@@ -344,25 +572,25 @@ const wb_data wb_preset[] = {
   { "Canon", "EOS 5D Mark II", Tungsten, 7,	{ 1.736595, 1, 2.305738, 0 } },
   { "Canon", "EOS 5D Mark II", Tungsten, 8,	{ 1.760417, 1, 2.266098, 0 } },
   { "Canon", "EOS 5D Mark II", Tungsten, 9,	{ 1.787417, 1, 2.222116, 0 } },
-  { "Canon", "EOS 5D Mark II", Fluorescent, -9,	{ 1.669691, 1, 2.900181, 0 } },
-  { "Canon", "EOS 5D Mark II", Fluorescent, -8,	{ 1.695533, 1, 2.849590, 0 } },
-  { "Canon", "EOS 5D Mark II", Fluorescent, -7,	{ 1.717033, 1, 2.806777, 0 } },
-  { "Canon", "EOS 5D Mark II", Fluorescent, -6,	{ 1.740809, 1, 2.761029, 0 } },
-  { "Canon", "EOS 5D Mark II", Fluorescent, -5,	{ 1.765683, 1, 2.716790, 0 } },
-  { "Canon", "EOS 5D Mark II", Fluorescent, -4,	{ 1.794063, 1, 2.667904, 0 } },
-  { "Canon", "EOS 5D Mark II", Fluorescent, -3,	{ 1.820298, 1, 2.619181, 0 } },
-  { "Canon", "EOS 5D Mark II", Fluorescent, -2,	{ 1.841760, 1, 2.567416, 0 } },
-  { "Canon", "EOS 5D Mark II", Fluorescent, -1,	{ 1.870056, 1, 2.516949, 0 } },
-  { "Canon", "EOS 5D Mark II", Fluorescent, 0,	{ 1.895833, 1, 2.461174, 0 } },
-  { "Canon", "EOS 5D Mark II", Fluorescent, 1,	{ 1.928503, 1, 2.416587, 0 } },
-  { "Canon", "EOS 5D Mark II", Fluorescent, 2,	{ 1.956772, 1, 2.365994, 0 } },
-  { "Canon", "EOS 5D Mark II", Fluorescent, 3,	{ 1.978744, 1, 2.320773, 0 } },
-  { "Canon", "EOS 5D Mark II", Fluorescent, 4,	{ 2.009718, 1, 2.281827, 0 } },
-  { "Canon", "EOS 5D Mark II", Fluorescent, 5,	{ 2.036133, 1, 2.240234, 0 } },
-  { "Canon", "EOS 5D Mark II", Fluorescent, 6,	{ 2.068359, 1, 2.197266, 0 } },
-  { "Canon", "EOS 5D Mark II", Fluorescent, 7,	{ 2.098633, 1, 2.160156, 0 } },
-  { "Canon", "EOS 5D Mark II", Fluorescent, 8,	{ 2.128906, 1, 2.120117, 0 } },
-  { "Canon", "EOS 5D Mark II", Fluorescent, 9,	{ 2.156250, 1, 2.081055, 0 } },
+  { "Canon", "EOS 5D Mark II", WhiteFluorescent, -9, { 1.669691, 1, 2.900181, 0 } },
+  { "Canon", "EOS 5D Mark II", WhiteFluorescent, -8, { 1.695533, 1, 2.849590, 0 } },
+  { "Canon", "EOS 5D Mark II", WhiteFluorescent, -7, { 1.717033, 1, 2.806777, 0 } },
+  { "Canon", "EOS 5D Mark II", WhiteFluorescent, -6, { 1.740809, 1, 2.761029, 0 } },
+  { "Canon", "EOS 5D Mark II", WhiteFluorescent, -5, { 1.765683, 1, 2.716790, 0 } },
+  { "Canon", "EOS 5D Mark II", WhiteFluorescent, -4, { 1.794063, 1, 2.667904, 0 } },
+  { "Canon", "EOS 5D Mark II", WhiteFluorescent, -3, { 1.820298, 1, 2.619181, 0 } },
+  { "Canon", "EOS 5D Mark II", WhiteFluorescent, -2, { 1.841760, 1, 2.567416, 0 } },
+  { "Canon", "EOS 5D Mark II", WhiteFluorescent, -1, { 1.870056, 1, 2.516949, 0 } },
+  { "Canon", "EOS 5D Mark II", WhiteFluorescent, 0, { 1.895833, 1, 2.461174, 0 } },
+  { "Canon", "EOS 5D Mark II", WhiteFluorescent, 1, { 1.928503, 1, 2.416587, 0 } },
+  { "Canon", "EOS 5D Mark II", WhiteFluorescent, 2, { 1.956772, 1, 2.365994, 0 } },
+  { "Canon", "EOS 5D Mark II", WhiteFluorescent, 3, { 1.978744, 1, 2.320773, 0 } },
+  { "Canon", "EOS 5D Mark II", WhiteFluorescent, 4, { 2.009718, 1, 2.281827, 0 } },
+  { "Canon", "EOS 5D Mark II", WhiteFluorescent, 5, { 2.036133, 1, 2.240234, 0 } },
+  { "Canon", "EOS 5D Mark II", WhiteFluorescent, 6, { 2.068359, 1, 2.197266, 0 } },
+  { "Canon", "EOS 5D Mark II", WhiteFluorescent, 7, { 2.098633, 1, 2.160156, 0 } },
+  { "Canon", "EOS 5D Mark II", WhiteFluorescent, 8, { 2.128906, 1, 2.120117, 0 } },
+  { "Canon", "EOS 5D Mark II", WhiteFluorescent, 9, { 2.156250, 1, 2.081055, 0 } },
   { "Canon", "EOS 5D Mark II", Flash, -9,	{ 2.111328, 1, 1.792969, 0 } },
   { "Canon", "EOS 5D Mark II", Flash, -8,	{ 2.142578, 1, 1.762695, 0 } },
   { "Canon", "EOS 5D Mark II", Flash, -7,	{ 2.173828, 1, 1.732422, 0 } },
@@ -500,12 +728,33 @@ const wb_data wb_preset[] = {
   { "Canon", "EOS 5D Mark III", Flash, 8,	{ 2.509766, 1, 1.297852, 0 } },
   { "Canon", "EOS 5D Mark III", Flash, 9,	{ 2.541016, 1, 1.278320, 0 } },
 
+  { "Canon", "EOS 5D Mark IV", Daylight, 0,	{ 1.976563, 1, 1.434570, 0 } },
+  { "Canon", "EOS 5D Mark IV", Shade, 0,	{ 2.260742, 1, 1.243164, 0 } },
+  { "Canon", "EOS 5D Mark IV", Cloudy, 0,	{ 2.115234, 1, 1.333008, 0 } },
+  { "Canon", "EOS 5D Mark IV", Tungsten, 0,	{ 1.416016, 1, 2.019531, 0 } },
+  { "Canon", "EOS 5D Mark IV", WhiteFluorescent, 0, { 1.672852, 1, 1.946289, 0 } },
+  { "Canon", "EOS 5D Mark IV", Flash, 0,	{ 2.165039, 1, 1.330078, 0 } },
+
+  { "Canon", "EOS 5DS", Daylight, 0,		{ 2.255859, 1, 1.717773, 0 } },
+  { "Canon", "EOS 5DS", Shade, 0,		{ 2.605469, 1, 1.484375, 0 } },
+  { "Canon", "EOS 5DS", Cloudy, 0,		{ 2.438477, 1, 1.589844, 0 } },
+  { "Canon", "EOS 5DS", Tungsten, 0,		{ 1.605469, 1, 2.467773, 0 } },
+  { "Canon", "EOS 5DS", WhiteFluorescent, 0,	{ 1.931641, 1, 2.354492, 0 } },
+  { "Canon", "EOS 5DS", Flash, 0,		{ 2.528320, 1, 1.583008, 0 } },
+
+  { "Canon", "EOS 5DS R", Daylight, 0,		{ 2.192383, 1, 1.738281, 0 } },
+  { "Canon", "EOS 5DS R", Shade, 0,		{ 2.541016, 1, 1.497070, 0 } },
+  { "Canon", "EOS 5DS R", Cloudy, 0,		{ 2.370117, 1, 1.607422, 0 } },
+  { "Canon", "EOS 5DS R", Tungsten, 0,		{ 1.546875, 1, 2.503906, 0 } },
+  { "Canon", "EOS 5DS R", WhiteFluorescent, 0,	{ 1.865234, 1, 2.386719, 0 } },
+  { "Canon", "EOS 5DS R", Flash, 0,		{ 2.461914, 1, 1.599609, 0 } },
+
   /* Canon EOS 6D Firmware Version 1.0.9 */
   { "Canon", "EOS 6D", Daylight, 0,		{ 1.976562, 1, 1.635742, 0 } },
   { "Canon", "EOS 6D", Shade, 0,		{ 2.265625, 1, 1.371094, 0 } },
   { "Canon", "EOS 6D", Cloudy, 0,		{ 2.128906, 1, 1.497070, 0 } },
   { "Canon", "EOS 6D", Tungsten, 0,		{ 1.412109, 1, 2.473633, 0 } },
-  { "Canon", "EOS 6D", Fluorescent, 0,		{ 1.726562, 1, 2.337891, 0 } },
+  { "Canon", "EOS 6D", WhiteFluorescent, 0,	{ 1.726562, 1, 2.337891, 0 } },
   { "Canon", "EOS 6D", Flash, 0,		{ 2.192383, 1, 1.458984, 0 } },
 
   /* Canon EOS 7D Firmware Version 2.0.3 */
@@ -629,35 +878,35 @@ const wb_data wb_preset[] = {
   { "Canon", "EOS 7D Mark II", Shade, 0,	{ 2.240234, 1, 1.410156, 0 } },
   { "Canon", "EOS 7D Mark II", Cloudy, 0,	{ 2.093750, 1, 1.519531, 0 } },
   { "Canon", "EOS 7D Mark II", Tungsten, 0,	{ 1.373047, 1, 2.342773, 0 } },
-  { "Canon", "EOS 7D Mark II", Fluorescent, 0,	{ 1.717773, 1, 2.250977, 0 } },
+  { "Canon", "EOS 7D Mark II", WhiteFluorescent, 0, { 1.717773, 1, 2.250977, 0 } },
   { "Canon", "EOS 7D Mark II", Flash, 0,	{ 2.160156, 1, 1.488281, 0 } },
 
   { "Canon", "EOS 10D", Daylight, 0,		{ 2.159856, 1, 1.218750, 0 } },
   { "Canon", "EOS 10D", Shade, 0,		{ 2.533654, 1, 1.036058, 0 } },
   { "Canon", "EOS 10D", Cloudy, 0,		{ 2.348558, 1, 1.116587, 0 } },
   { "Canon", "EOS 10D", Tungsten, 0,		{ 1.431544, 1, 1.851040, 0 } },
-  { "Canon", "EOS 10D", Fluorescent, 0,		{ 1.891509, 1, 1.647406, 0 } },
+  { "Canon", "EOS 10D", WhiteFluorescent, 0,	{ 1.891509, 1, 1.647406, 0 } },
   { "Canon", "EOS 10D", Flash, 0,		{ 2.385817, 1, 1.115385, 0 } },
 
   { "Canon", "EOS 20D", Daylight, 0,		{ 1.954680, 1, 1.478818, 0 } },
   { "Canon", "EOS 20D", Shade, 0,		{ 2.248276, 1, 1.227586, 0 } },
   { "Canon", "EOS 20D", Cloudy, 0,		{ 2.115271, 1, 1.336946, 0 } },
   { "Canon", "EOS 20D", Tungsten, 0,		{ 1.368087, 1, 2.417044, 0 } },
-  { "Canon", "EOS 20D", Fluorescent, 0,		{ 1.752709, 1, 2.060098, 0 } },
+  { "Canon", "EOS 20D", WhiteFluorescent, 0,	{ 1.752709, 1, 2.060098, 0 } },
   { "Canon", "EOS 20D", Flash, 0,		{ 2.145813, 1, 1.293596, 0 } },
 
   { "Canon", "EOS 30D", Daylight, 0,		{ 2.032227, 1, 1.537109, 0 } },
   { "Canon", "EOS 30D", Shade, 0,		{ 2.354492, 1, 1.264648, 0 } },
   { "Canon", "EOS 30D", Cloudy, 0,		{ 2.197266, 1, 1.389648, 0 } },
   { "Canon", "EOS 30D", Tungsten, 0,		{ 1.411084, 1, 2.447477, 0 } },
-  { "Canon", "EOS 30D", Fluorescent, 0,		{ 1.761601, 1, 2.303913, 0 } },
+  { "Canon", "EOS 30D", WhiteFluorescent, 0,	{ 1.761601, 1, 2.303913, 0 } },
   { "Canon", "EOS 30D", Flash, 0,		{ 2.226562, 1, 1.347656, 0 } },
 
   { "Canon", "EOS 40D", Daylight, 0,		{ 2.197266, 1, 1.438477, 0 } },
   { "Canon", "EOS 40D", Shade, 0,		{ 2.546875, 1, 1.185547, 0 } },
   { "Canon", "EOS 40D", Cloudy, 0,		{ 2.370117, 1, 1.290039, 0 } },
   { "Canon", "EOS 40D", Tungsten, 0,		{ 1.510563, 1, 2.235915, 0 } },
-  { "Canon", "EOS 40D", Fluorescent, 0,		{ 2.019084, 1, 2.129771, 0 } },
+  { "Canon", "EOS 40D", WhiteFluorescent, 0,	{ 2.019084, 1, 2.129771, 0 } },
   { "Canon", "EOS 40D", Flash, 0,		{ 2.409180, 1, 1.260742, 0 } },
 
   // Canon EOS 50D (firmware 1.0.3)
@@ -778,21 +1027,247 @@ const wb_data wb_preset[] = {
   { "Canon", "EOS 50D", "5000K", 0,		{ 2.056641, 1, 1.438477, 0 } },
   { "Canon", "EOS 50D", "6500K", 0,		{ 2.311523, 1, 1.239258, 0 } },
 
-  { "Canon", "EOS 60D", Daylight, 0,		{ 2.1514, 1, 1.5420, 0 } },
-  { "Canon", "EOS 60D", Shade, 0,		{ 2.5039, 1, 1.3057, 0 } },
-  { "Canon", "EOS 60D", Cloudy, 0,		{ 2.3223, 1, 1.4160, 0 } },
-  { "Canon", "EOS 60D", Tungsten, 0,		{ 1.5215, 1, 2.3486, 0 } },
-  { "Canon", "EOS 60D", Fluorescent, 0,		{ 1.9248, 1, 2.1836, 0 } },
-  { "Canon", "EOS 60D", Flash, 0,		{ 2.1514, 1, 1.5420, 0 } },
+  /* Canon EOS 60D Firmware Version 1.1.1 */
+  { "Canon", "EOS 60D", Daylight, -9,		{ 1.765625, 1, 1.792969, 0 } },
+  { "Canon", "EOS 60D", Daylight, -8,		{ 1.787109, 1, 1.765625, 0 } },
+  { "Canon", "EOS 60D", Daylight, -7,		{ 1.812500, 1, 1.735352, 0 } },
+  { "Canon", "EOS 60D", Daylight, -6,		{ 1.838867, 1, 1.707031, 0 } },
+  { "Canon", "EOS 60D", Daylight, -5,		{ 1.865234, 1, 1.678711, 0 } },
+  { "Canon", "EOS 60D", Daylight, -4,		{ 1.896484, 1, 1.649414, 0 } },
+  { "Canon", "EOS 60D", Daylight, -3,		{ 1.917969, 1, 1.618164, 0 } },
+  { "Canon", "EOS 60D", Daylight, -2,		{ 1.943359, 1, 1.587891, 0 } },
+  { "Canon", "EOS 60D", Daylight, -1,		{ 1.965820, 1, 1.558594, 0 } },
+  { "Canon", "EOS 60D", Daylight, 0,		{ 1.992188, 1, 1.526367, 0 } },
+  { "Canon", "EOS 60D", Daylight, 1,		{ 2.019531, 1, 1.503906, 0 } },
+  { "Canon", "EOS 60D", Daylight, 2,		{ 2.051758, 1, 1.477539, 0 } },
+  { "Canon", "EOS 60D", Daylight, 3,		{ 2.081055, 1, 1.454102, 0 } },
+  { "Canon", "EOS 60D", Daylight, 4,		{ 2.111328, 1, 1.429688, 0 } },
+  { "Canon", "EOS 60D", Daylight, 5,		{ 2.146484, 1, 1.406250, 0 } },
+  { "Canon", "EOS 60D", Daylight, 6,		{ 2.173828, 1, 1.385742, 0 } },
+  { "Canon", "EOS 60D", Daylight, 7,		{ 2.207031, 1, 1.363281, 0 } },
+  { "Canon", "EOS 60D", Daylight, 8,		{ 2.240234, 1, 1.341797, 0 } },
+  { "Canon", "EOS 60D", Daylight, 9,		{ 2.275391, 1, 1.318359, 0 } },
+  { "Canon", "EOS 60D", Shade, -9,		{ 2.019531, 1, 1.505859, 0 } },
+  { "Canon", "EOS 60D", Shade, -8,		{ 2.047852, 1, 1.481445, 0 } },
+  { "Canon", "EOS 60D", Shade, -7,		{ 2.077148, 1, 1.457031, 0 } },
+  { "Canon", "EOS 60D", Shade, -6,		{ 2.107422, 1, 1.434570, 0 } },
+  { "Canon", "EOS 60D", Shade, -5,		{ 2.142578, 1, 1.410156, 0 } },
+  { "Canon", "EOS 60D", Shade, -4,		{ 2.169922, 1, 1.387695, 0 } },
+  { "Canon", "EOS 60D", Shade, -3,		{ 2.202148, 1, 1.365234, 0 } },
+  { "Canon", "EOS 60D", Shade, -2,		{ 2.235352, 1, 1.343750, 0 } },
+  { "Canon", "EOS 60D", Shade, -1,		{ 2.270508, 1, 1.321289, 0 } },
+  { "Canon", "EOS 60D", Shade, 0,		{ 2.311523, 1, 1.295898, 0 } },
+  { "Canon", "EOS 60D", Shade, 1,		{ 2.337891, 1, 1.281250, 0 } },
+  { "Canon", "EOS 60D", Shade, 2,		{ 2.365234, 1, 1.264648, 0 } },
+  { "Canon", "EOS 60D", Shade, 3,		{ 2.398438, 1, 1.247070, 0 } },
+  { "Canon", "EOS 60D", Shade, 4,		{ 2.432617, 1, 1.229492, 0 } },
+  { "Canon", "EOS 60D", Shade, 5,		{ 2.461914, 1, 1.209961, 0 } },
+  { "Canon", "EOS 60D", Shade, 6,		{ 2.485352, 1, 1.193359, 0 } },
+  { "Canon", "EOS 60D", Shade, 7,		{ 2.515625, 1, 1.173828, 0 } },
+  { "Canon", "EOS 60D", Shade, 8,		{ 2.546875, 1, 1.154297, 0 } },
+  { "Canon", "EOS 60D", Shade, 9,		{ 2.585938, 1, 1.132813, 0 } },
+  { "Canon", "EOS 60D", Cloudy, -9,		{ 1.899414, 1, 1.643555, 0 } },
+  { "Canon", "EOS 60D", Cloudy, -8,		{ 1.920898, 1, 1.615234, 0 } },
+  { "Canon", "EOS 60D", Cloudy, -7,		{ 1.943359, 1, 1.584961, 0 } },
+  { "Canon", "EOS 60D", Cloudy, -6,		{ 1.968750, 1, 1.553711, 0 } },
+  { "Canon", "EOS 60D", Cloudy, -5,		{ 1.996094, 1, 1.523438, 0 } },
+  { "Canon", "EOS 60D", Cloudy, -4,		{ 2.023438, 1, 1.499023, 0 } },
+  { "Canon", "EOS 60D", Cloudy, -3,		{ 2.056641, 1, 1.475586, 0 } },
+  { "Canon", "EOS 60D", Cloudy, -2,		{ 2.085938, 1, 1.450195, 0 } },
+  { "Canon", "EOS 60D", Cloudy, -1,		{ 2.115234, 1, 1.427734, 0 } },
+  { "Canon", "EOS 60D", Cloudy, 0,		{ 2.146484, 1, 1.402344, 0 } },
+  { "Canon", "EOS 60D", Cloudy, 1,		{ 2.178711, 1, 1.381836, 0 } },
+  { "Canon", "EOS 60D", Cloudy, 2,		{ 2.211914, 1, 1.361328, 0 } },
+  { "Canon", "EOS 60D", Cloudy, 3,		{ 2.246094, 1, 1.338867, 0 } },
+  { "Canon", "EOS 60D", Cloudy, 4,		{ 2.280273, 1, 1.314453, 0 } },
+  { "Canon", "EOS 60D", Cloudy, 5,		{ 2.322266, 1, 1.292969, 0 } },
+  { "Canon", "EOS 60D", Cloudy, 6,		{ 2.342773, 1, 1.276367, 0 } },
+  { "Canon", "EOS 60D", Cloudy, 7,		{ 2.370117, 1, 1.260742, 0 } },
+  { "Canon", "EOS 60D", Cloudy, 8,		{ 2.403320, 1, 1.243164, 0 } },
+  { "Canon", "EOS 60D", Cloudy, 9,		{ 2.438477, 1, 1.224609, 0 } },
+  { "Canon", "EOS 60D", Tungsten, -9,		{ 1.249023, 1, 2.645508, 0 } },
+  { "Canon", "EOS 60D", Tungsten, -8,		{ 1.265625, 1, 2.619141, 0 } },
+  { "Canon", "EOS 60D", Tungsten, -7,		{ 1.283203, 1, 2.592773, 0 } },
+  { "Canon", "EOS 60D", Tungsten, -6,		{ 1.300781, 1, 2.566406, 0 } },
+  { "Canon", "EOS 60D", Tungsten, -5,		{ 1.319336, 1, 2.534180, 0 } },
+  { "Canon", "EOS 60D", Tungsten, -4,		{ 1.339844, 1, 2.503906, 0 } },
+  { "Canon", "EOS 60D", Tungsten, -3,		{ 1.358398, 1, 2.456055, 0 } },
+  { "Canon", "EOS 60D", Tungsten, -2,		{ 1.375977, 1, 2.403320, 0 } },
+  { "Canon", "EOS 60D", Tungsten, -1,		{ 1.397461, 1, 2.359375, 0 } },
+  { "Canon", "EOS 60D", Tungsten, 0,		{ 1.417969, 1, 2.306641, 0 } },
+  { "Canon", "EOS 60D", Tungsten, 1,		{ 1.438477, 1, 2.270508, 0 } },
+  { "Canon", "EOS 60D", Tungsten, 2,		{ 1.458984, 1, 2.235352, 0 } },
+  { "Canon", "EOS 60D", Tungsten, 3,		{ 1.479492, 1, 2.197266, 0 } },
+  { "Canon", "EOS 60D", Tungsten, 4,		{ 1.501953, 1, 2.160156, 0 } },
+  { "Canon", "EOS 60D", Tungsten, 5,		{ 1.526367, 1, 2.124023, 0 } },
+  { "Canon", "EOS 60D", Tungsten, 6,		{ 1.548828, 1, 2.085938, 0 } },
+  { "Canon", "EOS 60D", Tungsten, 7,		{ 1.570313, 1, 2.051758, 0 } },
+  { "Canon", "EOS 60D", Tungsten, 8,		{ 1.592773, 1, 2.019531, 0 } },
+  { "Canon", "EOS 60D", Tungsten, 9,		{ 1.618164, 1, 1.984375, 0 } },
+  { "Canon", "EOS 60D", WhiteFluorescent, -9,	{ 1.573242, 1, 2.534180, 0 } },
+  { "Canon", "EOS 60D", WhiteFluorescent, -8,	{ 1.594727, 1, 2.498047, 0 } },
+  { "Canon", "EOS 60D", WhiteFluorescent, -7,	{ 1.620117, 1, 2.450195, 0 } },
+  { "Canon", "EOS 60D", WhiteFluorescent, -6,	{ 1.643555, 1, 2.398438, 0 } },
+  { "Canon", "EOS 60D", WhiteFluorescent, -5,	{ 1.665039, 1, 2.348633, 0 } },
+  { "Canon", "EOS 60D", WhiteFluorescent, -4,	{ 1.686523, 1, 2.300781, 0 } },
+  { "Canon", "EOS 60D", WhiteFluorescent, -3,	{ 1.711914, 1, 2.265625, 0 } },
+  { "Canon", "EOS 60D", WhiteFluorescent, -2,	{ 1.738281, 1, 2.230469, 0 } },
+  { "Canon", "EOS 60D", WhiteFluorescent, -1,	{ 1.765625, 1, 2.192383, 0 } },
+  { "Canon", "EOS 60D", WhiteFluorescent, 0,	{ 1.787109, 1, 2.151367, 0 } },
+  { "Canon", "EOS 60D", WhiteFluorescent, 1,	{ 1.812500, 1, 2.115234, 0 } },
+  { "Canon", "EOS 60D", WhiteFluorescent, 2,	{ 1.838867, 1, 2.081055, 0 } },
+  { "Canon", "EOS 60D", WhiteFluorescent, 3,	{ 1.868164, 1, 2.047852, 0 } },
+  { "Canon", "EOS 60D", WhiteFluorescent, 4,	{ 1.896484, 1, 2.011719, 0 } },
+  { "Canon", "EOS 60D", WhiteFluorescent, 5,	{ 1.917969, 1, 1.976563, 0 } },
+  { "Canon", "EOS 60D", WhiteFluorescent, 6,	{ 1.943359, 1, 1.943359, 0 } },
+  { "Canon", "EOS 60D", WhiteFluorescent, 7,	{ 1.968750, 1, 1.914063, 0 } },
+  { "Canon", "EOS 60D", WhiteFluorescent, 8,	{ 1.996094, 1, 1.882813, 0 } },
+  { "Canon", "EOS 60D", WhiteFluorescent, 9,	{ 2.023438, 1, 1.851563, 0 } },
+  { "Canon", "EOS 60D", Flash, -9,		{ 1.950195, 1, 1.627930, 0 } },
+  { "Canon", "EOS 60D", Flash, -8,		{ 1.976563, 1, 1.597656, 0 } },
+  { "Canon", "EOS 60D", Flash, -7,		{ 2.003906, 1, 1.568359, 0 } },
+  { "Canon", "EOS 60D", Flash, -6,		{ 2.032227, 1, 1.537109, 0 } },
+  { "Canon", "EOS 60D", Flash, -5,		{ 2.064453, 1, 1.510742, 0 } },
+  { "Canon", "EOS 60D", Flash, -4,		{ 2.093750, 1, 1.486328, 0 } },
+  { "Canon", "EOS 60D", Flash, -3,		{ 2.124023, 1, 1.462891, 0 } },
+  { "Canon", "EOS 60D", Flash, -2,		{ 2.156250, 1, 1.438477, 0 } },
+  { "Canon", "EOS 60D", Flash, -1,		{ 2.188477, 1, 1.414063, 0 } },
+  { "Canon", "EOS 60D", Flash, 0,		{ 2.216797, 1, 1.391602, 0 } },
+  { "Canon", "EOS 60D", Flash, 1,		{ 2.255859, 1, 1.371094, 0 } },
+  { "Canon", "EOS 60D", Flash, 2,		{ 2.295898, 1, 1.349609, 0 } },
+  { "Canon", "EOS 60D", Flash, 3,		{ 2.327148, 1, 1.326172, 0 } },
+  { "Canon", "EOS 60D", Flash, 4,		{ 2.354492, 1, 1.302734, 0 } },
+  { "Canon", "EOS 60D", Flash, 5,		{ 2.381836, 1, 1.285156, 0 } },
+  { "Canon", "EOS 60D", Flash, 6,		{ 2.415039, 1, 1.268555, 0 } },
+  { "Canon", "EOS 60D", Flash, 7,		{ 2.450195, 1, 1.251953, 0 } },
+  { "Canon", "EOS 60D", Flash, 8,		{ 2.473633, 1, 1.232422, 0 } },
+  { "Canon", "EOS 60D", Flash, 9,		{ 2.503906, 1, 1.214844, 0 } },
 
   /* Canon EOS 70D Firmware Version 1.1.1 */
   { "Canon", "EOS 70D", Daylight, 0,		{ 2.068359, 1, 1.672852, 0 } },
   { "Canon", "EOS 70D", Shade, 0,		{ 2.403320, 1, 1.446289, 0 } },
   { "Canon", "EOS 70D", Cloudy, 0,		{ 2.226563, 1, 1.551758, 0 } },
   { "Canon", "EOS 70D", Tungsten, 0,		{ 1.448242, 1, 2.409180, 0 } },
-  { "Canon", "EOS 70D", Fluorescent, 0,		{ 1.790039, 1, 2.280273, 0 } },
+  { "Canon", "EOS 70D", WhiteFluorescent, 0,	{ 1.790039, 1, 2.280273, 0 } },
   { "Canon", "EOS 70D", Flash, 0,		{ 2.286133, 1, 1.548828, 0 } },
 
+  /* Canon EOS 80D Firmware Version Ver.1.0.1 */
+  /* Fine-tuning is the camera's Amber-Blue bracketing. */
+  { "Canon", "EOS 80D", Daylight, -9,		{ 1.551758, 1, 1.892578, 0 } },
+  { "Canon", "EOS 80D", Daylight, -8,		{ 1.570313, 1, 1.865234, 0 } },
+  { "Canon", "EOS 80D", Daylight, -7,		{ 1.594727, 1, 1.838867, 0 } },
+  { "Canon", "EOS 80D", Daylight, -6,		{ 1.618164, 1, 1.809570, 0 } },
+  { "Canon", "EOS 80D", Daylight, -5,		{ 1.643555, 1, 1.781250, 0 } },
+  { "Canon", "EOS 80D", Daylight, -4,		{ 1.670898, 1, 1.753906, 0 } },
+  { "Canon", "EOS 80D", Daylight, -3,		{ 1.692383, 1, 1.723633, 0 } },
+  { "Canon", "EOS 80D", Daylight, -2,		{ 1.717773, 1, 1.695313, 0 } },
+  { "Canon", "EOS 80D", Daylight, -1,		{ 1.741211, 1, 1.665039, 0 } },
+  { "Canon", "EOS 80D", Daylight, 0,		{ 1.768555, 1, 1.632813, 0 } },
+  { "Canon", "EOS 80D", Daylight, 1,		{ 1.790039, 1, 1.612305, 0 } },
+  { "Canon", "EOS 80D", Daylight, 2,		{ 1.815430, 1, 1.589844, 0 } },
+  { "Canon", "EOS 80D", Daylight, 3,		{ 1.838867, 1, 1.565430, 0 } },
+  { "Canon", "EOS 80D", Daylight, 4,		{ 1.862305, 1, 1.544922, 0 } },
+  { "Canon", "EOS 80D", Daylight, 5,		{ 1.889648, 1, 1.523438, 0 } },
+  { "Canon", "EOS 80D", Daylight, 6,		{ 1.914063, 1, 1.501953, 0 } },
+  { "Canon", "EOS 80D", Daylight, 7,		{ 1.939453, 1, 1.479492, 0 } },
+  { "Canon", "EOS 80D", Daylight, 8,		{ 1.972656, 1, 1.458984, 0 } },
+  { "Canon", "EOS 80D", Daylight, 9,		{ 2.003906, 1, 1.434570, 0 } },
+  { "Canon", "EOS 80D", Shade, -9,		{ 1.790039, 1, 1.615234, 0 } },
+  { "Canon", "EOS 80D", Shade, -8,		{ 1.812500, 1, 1.592773, 0 } },
+  { "Canon", "EOS 80D", Shade, -7,		{ 1.834961, 1, 1.568359, 0 } },
+  { "Canon", "EOS 80D", Shade, -6,		{ 1.858398, 1, 1.546875, 0 } },
+  { "Canon", "EOS 80D", Shade, -5,		{ 1.885742, 1, 1.526367, 0 } },
+  { "Canon", "EOS 80D", Shade, -4,		{ 1.910156, 1, 1.503906, 0 } },
+  { "Canon", "EOS 80D", Shade, -3,		{ 1.939453, 1, 1.481445, 0 } },
+  { "Canon", "EOS 80D", Shade, -2,		{ 1.968750, 1, 1.460938, 0 } },
+  { "Canon", "EOS 80D", Shade, -1,		{ 2.000000, 1, 1.438477, 0 } },
+  { "Canon", "EOS 80D", Shade, 0,		{ 2.036133, 1, 1.412109, 0 } },
+  { "Canon", "EOS 80D", Shade, 1,		{ 2.060547, 1, 1.395508, 0 } },
+  { "Canon", "EOS 80D", Shade, 2,		{ 2.085938, 1, 1.375977, 0 } },
+  { "Canon", "EOS 80D", Shade, 3,		{ 2.111328, 1, 1.356445, 0 } },
+  { "Canon", "EOS 80D", Shade, 4,		{ 2.142578, 1, 1.334961, 0 } },
+  { "Canon", "EOS 80D", Shade, 5,		{ 2.169922, 1, 1.316406, 0 } },
+  { "Canon", "EOS 80D", Shade, 6,		{ 2.197266, 1, 1.297852, 0 } },
+  { "Canon", "EOS 80D", Shade, 7,		{ 2.226563, 1, 1.278320, 0 } },
+  { "Canon", "EOS 80D", Shade, 8,		{ 2.260742, 1, 1.259766, 0 } },
+  { "Canon", "EOS 80D", Shade, 9,		{ 2.295898, 1, 1.238281, 0 } },
+  { "Canon", "EOS 80D", Cloudy, -9,		{ 1.672852, 1, 1.747070, 0 } },
+  { "Canon", "EOS 80D", Cloudy, -8,		{ 1.695313, 1, 1.720703, 0 } },
+  { "Canon", "EOS 80D", Cloudy, -7,		{ 1.720703, 1, 1.689453, 0 } },
+  { "Canon", "EOS 80D", Cloudy, -6,		{ 1.744141, 1, 1.659180, 0 } },
+  { "Canon", "EOS 80D", Cloudy, -5,		{ 1.771484, 1, 1.630859, 0 } },
+  { "Canon", "EOS 80D", Cloudy, -4,		{ 1.792969, 1, 1.610352, 0 } },
+  { "Canon", "EOS 80D", Cloudy, -3,		{ 1.818359, 1, 1.587891, 0 } },
+  { "Canon", "EOS 80D", Cloudy, -2,		{ 1.841797, 1, 1.563477, 0 } },
+  { "Canon", "EOS 80D", Cloudy, -1,		{ 1.865234, 1, 1.541992, 0 } },
+  { "Canon", "EOS 80D", Cloudy, 0,		{ 1.889648, 1, 1.519531, 0 } },
+  { "Canon", "EOS 80D", Cloudy, 1,		{ 1.917969, 1, 1.499023, 0 } },
+  { "Canon", "EOS 80D", Cloudy, 2,		{ 1.943359, 1, 1.477539, 0 } },
+  { "Canon", "EOS 80D", Cloudy, 3,		{ 1.976563, 1, 1.454102, 0 } },
+  { "Canon", "EOS 80D", Cloudy, 4,		{ 2.007813, 1, 1.432617, 0 } },
+  { "Canon", "EOS 80D", Cloudy, 5,		{ 2.043945, 1, 1.408203, 0 } },
+  { "Canon", "EOS 80D", Cloudy, 6,		{ 2.064453, 1, 1.391602, 0 } },
+  { "Canon", "EOS 80D", Cloudy, 7,		{ 2.089844, 1, 1.373047, 0 } },
+  { "Canon", "EOS 80D", Cloudy, 8,		{ 2.120117, 1, 1.350586, 0 } },
+  { "Canon", "EOS 80D", Cloudy, 9,		{ 2.151367, 1, 1.330078, 0 } },
+  { "Canon", "EOS 80D", Tungsten, -9,		{ 1.097656, 1, 2.702148, 0 } },
+  { "Canon", "EOS 80D", Tungsten, -8,		{ 1.112305, 1, 2.673828, 0 } },
+  { "Canon", "EOS 80D", Tungsten, -7,		{ 1.127930, 1, 2.639648, 0 } },
+  { "Canon", "EOS 80D", Tungsten, -6,		{ 1.142578, 1, 2.605469, 0 } },
+  { "Canon", "EOS 80D", Tungsten, -5,		{ 1.160156, 1, 2.579102, 0 } },
+  { "Canon", "EOS 80D", Tungsten, -4,		{ 1.176758, 1, 2.541016, 0 } },
+  { "Canon", "EOS 80D", Tungsten, -3,		{ 1.193359, 1, 2.503906, 0 } },
+  { "Canon", "EOS 80D", Tungsten, -2,		{ 1.209961, 1, 2.461914, 0 } },
+  { "Canon", "EOS 80D", Tungsten, -1,		{ 1.227539, 1, 2.420898, 0 } },
+  { "Canon", "EOS 80D", Tungsten, 0,		{ 1.247070, 1, 2.375977, 0 } },
+  { "Canon", "EOS 80D", Tungsten, 1,		{ 1.264648, 1, 2.342773, 0 } },
+  { "Canon", "EOS 80D", Tungsten, 2,		{ 1.283203, 1, 2.311523, 0 } },
+  { "Canon", "EOS 80D", Tungsten, 3,		{ 1.300781, 1, 2.275391, 0 } },
+  { "Canon", "EOS 80D", Tungsten, 4,		{ 1.321289, 1, 2.240234, 0 } },
+  { "Canon", "EOS 80D", Tungsten, 5,		{ 1.343750, 1, 2.202148, 0 } },
+  { "Canon", "EOS 80D", Tungsten, 6,		{ 1.363281, 1, 2.169922, 0 } },
+  { "Canon", "EOS 80D", Tungsten, 7,		{ 1.383789, 1, 2.137695, 0 } },
+  { "Canon", "EOS 80D", Tungsten, 8,		{ 1.404297, 1, 2.102539, 0 } },
+  { "Canon", "EOS 80D", Tungsten, 9,		{ 1.425781, 1, 2.073242, 0 } },
+  { "Canon", "EOS 80D", WhiteFluorescent, -9,	{ 1.291016, 1, 2.559570, 0 } },
+  { "Canon", "EOS 80D", WhiteFluorescent, -8,	{ 1.311523, 1, 2.522461, 0 } },
+  { "Canon", "EOS 80D", WhiteFluorescent, -7,	{ 1.332031, 1, 2.479492, 0 } },
+  { "Canon", "EOS 80D", WhiteFluorescent, -6,	{ 1.354492, 1, 2.438477, 0 } },
+  { "Canon", "EOS 80D", WhiteFluorescent, -5,	{ 1.373047, 1, 2.398438, 0 } },
+  { "Canon", "EOS 80D", WhiteFluorescent, -4,	{ 1.393555, 1, 2.359375, 0 } },
+  { "Canon", "EOS 80D", WhiteFluorescent, -3,	{ 1.414063, 1, 2.327148, 0 } },
+  { "Canon", "EOS 80D", WhiteFluorescent, -2,	{ 1.438477, 1, 2.291016, 0 } },
+  { "Canon", "EOS 80D", WhiteFluorescent, -1,	{ 1.458984, 1, 2.255859, 0 } },
+  { "Canon", "EOS 80D", WhiteFluorescent, 0,	{ 1.475586, 1, 2.216797, 0 } },
+  { "Canon", "EOS 80D", WhiteFluorescent, 1,	{ 1.495117, 1, 2.183594, 0 } },
+  { "Canon", "EOS 80D", WhiteFluorescent, 2,	{ 1.516602, 1, 2.151367, 0 } },
+  { "Canon", "EOS 80D", WhiteFluorescent, 3,	{ 1.540039, 1, 2.120117, 0 } },
+  { "Canon", "EOS 80D", WhiteFluorescent, 4,	{ 1.560547, 1, 2.085938, 0 } },
+  { "Canon", "EOS 80D", WhiteFluorescent, 5,	{ 1.583008, 1, 2.051758, 0 } },
+  { "Canon", "EOS 80D", WhiteFluorescent, 6,	{ 1.605469, 1, 2.023438, 0 } },
+  { "Canon", "EOS 80D", WhiteFluorescent, 7,	{ 1.630859, 1, 1.996094, 0 } },
+  { "Canon", "EOS 80D", WhiteFluorescent, 8,	{ 1.657227, 1, 1.965820, 0 } },
+  { "Canon", "EOS 80D", WhiteFluorescent, 9,	{ 1.681641, 1, 1.935547, 0 } },
+  { "Canon", "EOS 80D", Flash, -9,		{ 1.720703, 1, 1.720703, 0 } },
+  { "Canon", "EOS 80D", Flash, -8,		{ 1.744141, 1, 1.692383, 0 } },
+  { "Canon", "EOS 80D", Flash, -7,		{ 1.771484, 1, 1.662109, 0 } },
+  { "Canon", "EOS 80D", Flash, -6,		{ 1.792969, 1, 1.632813, 0 } },
+  { "Canon", "EOS 80D", Flash, -5,		{ 1.818359, 1, 1.610352, 0 } },
+  { "Canon", "EOS 80D", Flash, -4,		{ 1.841797, 1, 1.587891, 0 } },
+  { "Canon", "EOS 80D", Flash, -3,		{ 1.865234, 1, 1.565430, 0 } },
+  { "Canon", "EOS 80D", Flash, -2,		{ 1.889648, 1, 1.544922, 0 } },
+  { "Canon", "EOS 80D", Flash, -1,		{ 1.917969, 1, 1.521484, 0 } },
+  { "Canon", "EOS 80D", Flash, 0,		{ 1.943359, 1, 1.499023, 0 } },
+  { "Canon", "EOS 80D", Flash, 1,		{ 1.976563, 1, 1.477539, 0 } },
+  { "Canon", "EOS 80D", Flash, 2,		{ 2.007813, 1, 1.457031, 0 } },
+  { "Canon", "EOS 80D", Flash, 3,		{ 2.043945, 1, 1.432617, 0 } },
+  { "Canon", "EOS 80D", Flash, 4,		{ 2.064453, 1, 1.410156, 0 } },
+  { "Canon", "EOS 80D", Flash, 5,		{ 2.089844, 1, 1.391602, 0 } },
+  { "Canon", "EOS 80D", Flash, 6,		{ 2.120117, 1, 1.373047, 0 } },
+  { "Canon", "EOS 80D", Flash, 7,		{ 2.151367, 1, 1.352539, 0 } },
+  { "Canon", "EOS 80D", Flash, 8,		{ 2.178711, 1, 1.332031, 0 } },
+  { "Canon", "EOS 80D", Flash, 9,		{ 2.207031, 1, 1.312500, 0 } },
+
   // Copied from Canon EOS 650D
   { "Canon", "EOS 100D", Daylight, -3,		{ 1.9502, 1, 1.7539, 0 } },
   { "Canon", "EOS 100D", Daylight, 0,		{ 2.0322, 1, 1.6572, 0 } },
@@ -806,9 +1281,9 @@ const wb_data wb_preset[] = {
   { "Canon", "EOS 100D", Tungsten, -3,		{ 1.3975, 1, 2.5928, 0 } },
   { "Canon", "EOS 100D", Tungsten, 0,		{ 1.4541, 1, 2.4561, 0 } },
   { "Canon", "EOS 100D", Tungsten, 3,		{ 1.5127, 1, 2.3428, 0 } },
-  { "Canon", "EOS 100D", Fluorescent, -3,	{ 1.6982, 1, 2.4268, 0 } },
-  { "Canon", "EOS 100D", Fluorescent, 0,	{ 1.7715, 1, 2.3066, 0 } },
-  { "Canon", "EOS 100D", Fluorescent, 3,	{ 1.8486, 1, 2.1973, 0 } },
+  { "Canon", "EOS 100D", WhiteFluorescent, -3,	{ 1.6982, 1, 2.4268, 0 } },
+  { "Canon", "EOS 100D", WhiteFluorescent, 0,	{ 1.7715, 1, 2.3066, 0 } },
+  { "Canon", "EOS 100D", WhiteFluorescent, 3,	{ 1.8486, 1, 2.1973, 0 } },
   { "Canon", "EOS 100D", Flash, -3,		{ 2.1699, 1, 1.5879, 0 } },
   { "Canon", "EOS 100D", Flash, 0,		{ 2.2607, 1, 1.5166, 0 } },
   { "Canon", "EOS 100D", Flash, 3,		{ 2.3701, 1, 1.4502, 0 } },
@@ -825,9 +1300,9 @@ const wb_data wb_preset[] = {
   { "Canon", "EOS REBEL SL1", Tungsten, -3,	{ 1.3975, 1, 2.5928, 0 } },
   { "Canon", "EOS REBEL SL1", Tungsten, 0,	{ 1.4541, 1, 2.4561, 0 } },
   { "Canon", "EOS REBEL SL1", Tungsten, 3,	{ 1.5127, 1, 2.3428, 0 } },
-  { "Canon", "EOS REBEL SL1", Fluorescent, -3,	{ 1.6982, 1, 2.4268, 0 } },
-  { "Canon", "EOS REBEL SL1", Fluorescent, 0,	{ 1.7715, 1, 2.3066, 0 } },
-  { "Canon", "EOS REBEL SL1", Fluorescent, 3,	{ 1.8486, 1, 2.1973, 0 } },
+  { "Canon", "EOS REBEL SL1", WhiteFluorescent, -3, { 1.6982, 1, 2.4268, 0 } },
+  { "Canon", "EOS REBEL SL1", WhiteFluorescent, 0, { 1.7715, 1, 2.3066, 0 } },
+  { "Canon", "EOS REBEL SL1", WhiteFluorescent, 3, { 1.8486, 1, 2.1973, 0 } },
   { "Canon", "EOS REBEL SL1", Flash, -3,	{ 2.1699, 1, 1.5879, 0 } },
   { "Canon", "EOS REBEL SL1", Flash, 0,		{ 2.2607, 1, 1.5166, 0 } },
   { "Canon", "EOS REBEL SL1", Flash, 3,		{ 2.3701, 1, 1.4502, 0 } },
@@ -844,9 +1319,9 @@ const wb_data wb_preset[] = {
   { "Canon", "EOS Kiss X7", Tungsten, -3,	{ 1.3975, 1, 2.5928, 0 } },
   { "Canon", "EOS Kiss X7", Tungsten, 0,	{ 1.4541, 1, 2.4561, 0 } },
   { "Canon", "EOS Kiss X7", Tungsten, 3,	{ 1.5127, 1, 2.3428, 0 } },
-  { "Canon", "EOS Kiss X7", Fluorescent, -3,	{ 1.6982, 1, 2.4268, 0 } },
-  { "Canon", "EOS Kiss X7", Fluorescent, 0,	{ 1.7715, 1, 2.3066, 0 } },
-  { "Canon", "EOS Kiss X7", Fluorescent, 3,	{ 1.8486, 1, 2.1973, 0 } },
+  { "Canon", "EOS Kiss X7", WhiteFluorescent, -3, { 1.6982, 1, 2.4268, 0 } },
+  { "Canon", "EOS Kiss X7", WhiteFluorescent, 0, { 1.7715, 1, 2.3066, 0 } },
+  { "Canon", "EOS Kiss X7", WhiteFluorescent, 3, { 1.8486, 1, 2.1973, 0 } },
   { "Canon", "EOS Kiss X7", Flash, -3,		{ 2.1699, 1, 1.5879, 0 } },
   { "Canon", "EOS Kiss X7", Flash, 0,		{ 2.2607, 1, 1.5166, 0 } },
   { "Canon", "EOS Kiss X7", Flash, 3,		{ 2.3701, 1, 1.4502, 0 } },
@@ -855,21 +1330,21 @@ const wb_data wb_preset[] = {
   { "Canon", "EOS 300D DIGITAL", Shade, 0,	{ 2.455529, 1, 1.026442, 0 } },
   { "Canon", "EOS 300D DIGITAL", Cloudy, 0,	{ 2.254808, 1, 1.108173, 0 } },
   { "Canon", "EOS 300D DIGITAL", Tungsten, 0,	{ 1.349057, 1, 1.896226, 0 } },
-  { "Canon", "EOS 300D DIGITAL", Fluorescent, 0, { 1.794664, 1, 1.711137, 0 } },
+  { "Canon", "EOS 300D DIGITAL", WhiteFluorescent, 0, { 1.794664, 1, 1.711137, 0 } },
   { "Canon", "EOS 300D DIGITAL", Flash, 0,	{ 2.326923, 1, 1.098558, 0 } },
 
   { "Canon", "EOS DIGITAL REBEL", Daylight, 0,	{ 2.072115, 1, 1.217548, 0 } },
   { "Canon", "EOS DIGITAL REBEL", Shade, 0,	{ 2.455529, 1, 1.026442, 0 } },
   { "Canon", "EOS DIGITAL REBEL", Cloudy, 0,	{ 2.254808, 1, 1.108173, 0 } },
   { "Canon", "EOS DIGITAL REBEL", Tungsten, 0,	{ 1.349057, 1, 1.896226, 0 } },
-  { "Canon", "EOS DIGITAL REBEL", Fluorescent, 0, { 1.794664, 1, 1.711137, 0 } },
+  { "Canon", "EOS DIGITAL REBEL", WhiteFluorescent, 0, { 1.794664, 1, 1.711137, 0 } },
   { "Canon", "EOS DIGITAL REBEL", Flash, 0,	{ 2.326923, 1, 1.098558, 0 } },
 
   { "Canon", "EOS Kiss Digital", Daylight, 0,	{ 2.072115, 1, 1.217548, 0 } },
   { "Canon", "EOS Kiss Digital", Shade, 0,	{ 2.455529, 1, 1.026442, 0 } },
   { "Canon", "EOS Kiss Digital", Cloudy, 0,	{ 2.254808, 1, 1.108173, 0 } },
   { "Canon", "EOS Kiss Digital", Tungsten, 0,	{ 1.349057, 1, 1.896226, 0 } },
-  { "Canon", "EOS Kiss Digital", Fluorescent, 0, { 1.794664, 1, 1.711137, 0 } },
+  { "Canon", "EOS Kiss Digital", WhiteFluorescent, 0, { 1.794664, 1, 1.711137, 0 } },
   { "Canon", "EOS Kiss Digital", Flash, 0,	{ 2.326923, 1, 1.098558, 0 } },
 
   // Firmware version 1.0.3. Fine tuning is from A9 to B9 on amber-blue.
@@ -885,9 +1360,9 @@ const wb_data wb_preset[] = {
   { "Canon", "EOS 350D DIGITAL", Tungsten, -9,	{ 1.5589, 1, 1.9205, 0 } },
   { "Canon", "EOS 350D DIGITAL", Tungsten, 0,	{ 1.5343, 1, 2.2880, 0 } },
   { "Canon", "EOS 350D DIGITAL", Tungsten, 9,	{ 1.3145, 1, 2.6873, 0 } },
-  { "Canon", "EOS 350D DIGITAL", Fluorescent, -9, { 2.3124, 1, 1.6356, 0 } },
-  { "Canon", "EOS 350D DIGITAL", Fluorescent, 0, { 1.9754, 1, 1.9303, 0 } },
-  { "Canon", "EOS 350D DIGITAL", Fluorescent, 9, { 1.6657, 1, 2.3034, 0 } },
+  { "Canon", "EOS 350D DIGITAL", WhiteFluorescent, -9, { 2.3124, 1, 1.6356, 0 } },
+  { "Canon", "EOS 350D DIGITAL", WhiteFluorescent, 0, { 1.9754, 1, 1.9303, 0 } },
+  { "Canon", "EOS 350D DIGITAL", WhiteFluorescent, 9, { 1.6657, 1, 2.3034, 0 } },
   { "Canon", "EOS 350D DIGITAL", Flash, -9,	{ 3.0904, 1, 1.0756, 0 } },
   { "Canon", "EOS 350D DIGITAL", Flash, 0,	{ 2.6729, 1, 1.2613, 0 } },
   { "Canon", "EOS 350D DIGITAL", Flash, 9,	{ 2.3026, 1, 1.4961, 0 } },
@@ -905,9 +1380,9 @@ const wb_data wb_preset[] = {
   { "Canon", "EOS DIGITAL REBEL XT", Tungsten, -9, { 1.5589, 1, 1.9205, 0 } },
   { "Canon", "EOS DIGITAL REBEL XT", Tungsten, 0, { 1.5343, 1, 2.2880, 0 } },
   { "Canon", "EOS DIGITAL REBEL XT", Tungsten, 9, { 1.3145, 1, 2.6873, 0 } },
-  { "Canon", "EOS DIGITAL REBEL XT", Fluorescent, -9, { 2.3124, 1, 1.6356, 0 } },
-  { "Canon", "EOS DIGITAL REBEL XT", Fluorescent, 0, { 1.9754, 1, 1.9303, 0 } },
-  { "Canon", "EOS DIGITAL REBEL XT", Fluorescent, 9, { 1.6657, 1, 2.3034, 0 } },
+  { "Canon", "EOS DIGITAL REBEL XT", WhiteFluorescent, -9, { 2.3124, 1, 1.6356, 0 } },
+  { "Canon", "EOS DIGITAL REBEL XT", WhiteFluorescent, 0, { 1.9754, 1, 1.9303, 0 } },
+  { "Canon", "EOS DIGITAL REBEL XT", WhiteFluorescent, 9, { 1.6657, 1, 2.3034, 0 } },
   { "Canon", "EOS DIGITAL REBEL XT", Flash, -9,	{ 3.0904, 1, 1.0756, 0 } },
   { "Canon", "EOS DIGITAL REBEL XT", Flash, 0,	{ 2.6729, 1, 1.2613, 0 } },
   { "Canon", "EOS DIGITAL REBEL XT", Flash, 9,	{ 2.3026, 1, 1.4961, 0 } },
@@ -925,9 +1400,9 @@ const wb_data wb_preset[] = {
   { "Canon", "EOS Kiss Digital N", Tungsten, -9, { 1.5589, 1, 1.9205, 0 } },
   { "Canon", "EOS Kiss Digital N", Tungsten, 0,	{ 1.5343, 1, 2.2880, 0 } },
   { "Canon", "EOS Kiss Digital N", Tungsten, 9,	{ 1.3145, 1, 2.6873, 0 } },
-  { "Canon", "EOS Kiss Digital N", Fluorescent, -9, { 2.3124, 1, 1.6356, 0 } },
-  { "Canon", "EOS Kiss Digital N", Fluorescent, 0, { 1.9754, 1, 1.9303, 0 } },
-  { "Canon", "EOS Kiss Digital N", Fluorescent, 9, { 1.6657, 1, 2.3034, 0 } },
+  { "Canon", "EOS Kiss Digital N", WhiteFluorescent, -9, { 2.3124, 1, 1.6356, 0 } },
+  { "Canon", "EOS Kiss Digital N", WhiteFluorescent, 0, { 1.9754, 1, 1.9303, 0 } },
+  { "Canon", "EOS Kiss Digital N", WhiteFluorescent, 9, { 1.6657, 1, 2.3034, 0 } },
   { "Canon", "EOS Kiss Digital N", Flash, -9,	{ 3.0904, 1, 1.0756, 0 } },
   { "Canon", "EOS Kiss Digital N", Flash, 0,	{ 2.6729, 1, 1.2613, 0 } },
   { "Canon", "EOS Kiss Digital N", Flash, 9,	{ 2.3026, 1, 1.4961, 0 } },
@@ -1282,42 +1757,42 @@ const wb_data wb_preset[] = {
   { "Canon", "EOS 450D", Shade, 0,		{ 2.566406, 1, 1.241211, 0 } },
   { "Canon", "EOS 450D", Cloudy, 0,		{ 2.386719, 1, 1.345703, 0 } },
   { "Canon", "EOS 450D", Tungsten, 0,		{ 1.559034, 1, 2.170841, 0 } },
-  { "Canon", "EOS 450D", Fluorescent, 0,	{ 1.922857, 1, 1.996190, 0 } },
+  { "Canon", "EOS 450D", WhiteFluorescent, 0,	{ 1.922857, 1, 1.996190, 0 } },
   { "Canon", "EOS 450D", Flash, 0,		{ 2.456055, 1, 1.318359, 0 } },
 
   { "Canon", "EOS DIGITAL REBEL XSi", Daylight, 0, { 2.216797, 1, 1.471680, 0 } },
   { "Canon", "EOS DIGITAL REBEL XSi", Shade, 0, { 2.566406, 1, 1.241211, 0 } },
   { "Canon", "EOS DIGITAL REBEL XSi", Cloudy, 0, { 2.386719, 1, 1.345703, 0 } },
   { "Canon", "EOS DIGITAL REBEL XSi", Tungsten, 0, { 1.559034, 1, 2.170841, 0 } },
-  { "Canon", "EOS DIGITAL REBEL XSi", Fluorescent, 0, { 1.922857, 1, 1.996190, 0 } },
+  { "Canon", "EOS DIGITAL REBEL XSi", WhiteFluorescent, 0, { 1.922857, 1, 1.996190, 0 } },
   { "Canon", "EOS DIGITAL REBEL XSi", Flash, 0, { 2.456055, 1, 1.318359, 0 } },
 
   { "Canon", "EOS Kiss X2", Daylight, 0,	{ 2.216797, 1, 1.471680, 0 } },
   { "Canon", "EOS Kiss X2", Shade, 0,		{ 2.566406, 1, 1.241211, 0 } },
   { "Canon", "EOS Kiss X2", Cloudy, 0,		{ 2.386719, 1, 1.345703, 0 } },
   { "Canon", "EOS Kiss X2", Tungsten, 0,	{ 1.559034, 1, 2.170841, 0 } },
-  { "Canon", "EOS Kiss X2", Fluorescent, 0,	{ 1.922857, 1, 1.996190, 0 } },
+  { "Canon", "EOS Kiss X2", WhiteFluorescent, 0, { 1.922857, 1, 1.996190, 0 } },
   { "Canon", "EOS Kiss X2", Flash, 0,		{ 2.456055, 1, 1.318359, 0 } },
 
   { "Canon", "EOS 500D", Daylight, 0,		{ 2.023438, 1, 1.417969, 0 } },
   { "Canon", "EOS 500D", Shade, 0,		{ 2.291016, 1, 1.217773, 0 } },
   { "Canon", "EOS 500D", Cloudy, 0,		{ 2.156250, 1, 1.304687, 0 } },
   { "Canon", "EOS 500D", Tungsten, 0,		{ 1.481347, 1, 1.976342, 0 } },
-  { "Canon", "EOS 500D", Fluorescent, 0,	{ 1.799224, 1, 1.824442, 0 } },
+  { "Canon", "EOS 500D", WhiteFluorescent, 0,	{ 1.799224, 1, 1.824442, 0 } },
   { "Canon", "EOS 500D", Flash, 0,		{ 2.207031, 1, 1.295898, 0 } },
 
   { "Canon", "EOS REBEL T1i", Daylight, 0,	{ 2.023438, 1, 1.417969, 0 } },
   { "Canon", "EOS REBEL T1i", Shade, 0,		{ 2.291016, 1, 1.217773, 0 } },
   { "Canon", "EOS REBEL T1i", Cloudy, 0,	{ 2.156250, 1, 1.304687, 0 } },
   { "Canon", "EOS REBEL T1i", Tungsten, 0,	{ 1.481347, 1, 1.976342, 0 } },
-  { "Canon", "EOS REBEL T1i", Fluorescent, 0,	{ 1.799224, 1, 1.824442, 0 } },
+  { "Canon", "EOS REBEL T1i", WhiteFluorescent, 0, { 1.799224, 1, 1.824442, 0 } },
   { "Canon", "EOS REBEL T1i", Flash, 0,		{ 2.207031, 1, 1.295898, 0 } },
 
   { "Canon", "EOS Kiss X3", Daylight, 0,	{ 2.023438, 1, 1.417969, 0 } },
   { "Canon", "EOS Kiss X3", Shade, 0,		{ 2.291016, 1, 1.217773, 0 } },
   { "Canon", "EOS Kiss X3", Cloudy, 0,		{ 2.156250, 1, 1.304687, 0 } },
   { "Canon", "EOS Kiss X3", Tungsten, 0,	{ 1.481347, 1, 1.976342, 0 } },
-  { "Canon", "EOS Kiss X3", Fluorescent, 0,	{ 1.799224, 1, 1.824442, 0 } },
+  { "Canon", "EOS Kiss X3", WhiteFluorescent, 0, { 1.799224, 1, 1.824442, 0 } },
   { "Canon", "EOS Kiss X3", Flash, 0,		{ 2.207031, 1, 1.295898, 0 } },
 
   /* Canon EOS 550D Firmware Version 1.0.9 */
@@ -1672,21 +2147,21 @@ const wb_data wb_preset[] = {
   { "Canon", "EOS 600D", Shade, 0,		{ 2.592773, 1, 1.377930, 0 } },
   { "Canon", "EOS 600D", Cloudy, 0,		{ 2.409180, 1, 1.486328, 0 } },
   { "Canon", "EOS 600D", Tungsten, 0,		{ 1.597656, 1, 2.409180, 0 } },
-  { "Canon", "EOS 600D", Fluorescent, 0,	{ 1.958008, 1, 2.260742, 0 } },
+  { "Canon", "EOS 600D", WhiteFluorescent, 0,	{ 1.958008, 1, 2.260742, 0 } },
   { "Canon", "EOS 600D", Flash, 0,		{ 2.509766, 1, 1.464844, 0 } },
 
   { "Canon", "EOS REBEL T3i", Daylight, 0,	{ 2.235352, 1, 1.612305, 0 } },
   { "Canon", "EOS REBEL T3i", Shade, 0,		{ 2.592773, 1, 1.377930, 0 } },
   { "Canon", "EOS REBEL T3i", Cloudy, 0,	{ 2.409180, 1, 1.486328, 0 } },
   { "Canon", "EOS REBEL T3i", Tungsten, 0,	{ 1.597656, 1, 2.409180, 0 } },
-  { "Canon", "EOS REBEL T3i", Fluorescent, 0,	{ 1.958008, 1, 2.260742, 0 } },
+  { "Canon", "EOS REBEL T3i", WhiteFluorescent, 0, { 1.958008, 1, 2.260742, 0 } },
   { "Canon", "EOS REBEL T3i", Flash, 0,		{ 2.509766, 1, 1.464844, 0 } },
 
   { "Canon", "EOS Kiss X5", Daylight, 0,	{ 2.235352, 1, 1.612305, 0 } },
   { "Canon", "EOS Kiss X5", Shade, 0,		{ 2.592773, 1, 1.377930, 0 } },
   { "Canon", "EOS Kiss X5", Cloudy, 0,		{ 2.409180, 1, 1.486328, 0 } },
   { "Canon", "EOS Kiss X5", Tungsten, 0,	{ 1.597656, 1, 2.409180, 0 } },
-  { "Canon", "EOS Kiss X5", Fluorescent, 0,	{ 1.958008, 1, 2.260742, 0 } },
+  { "Canon", "EOS Kiss X5", WhiteFluorescent, 0, { 1.958008, 1, 2.260742, 0 } },
   { "Canon", "EOS Kiss X5", Flash, 0,		{ 2.509766, 1, 1.464844, 0 } },
 
   /* Fine-tuning is the camera's Amber-Blue bracketing. */
@@ -1702,9 +2177,9 @@ const wb_data wb_preset[] = {
   { "Canon", "EOS 650D", Tungsten, -3,		{ 1.3975, 1, 2.5928, 0 } },
   { "Canon", "EOS 650D", Tungsten, 0,		{ 1.4541, 1, 2.4561, 0 } },
   { "Canon", "EOS 650D", Tungsten, 3,		{ 1.5127, 1, 2.3428, 0 } },
-  { "Canon", "EOS 650D", Fluorescent, -3,	{ 1.6982, 1, 2.4268, 0 } },
-  { "Canon", "EOS 650D", Fluorescent, 0,	{ 1.7715, 1, 2.3066, 0 } },
-  { "Canon", "EOS 650D", Fluorescent, 3,	{ 1.8486, 1, 2.1973, 0 } },
+  { "Canon", "EOS 650D", WhiteFluorescent, -3,	{ 1.6982, 1, 2.4268, 0 } },
+  { "Canon", "EOS 650D", WhiteFluorescent, 0,	{ 1.7715, 1, 2.3066, 0 } },
+  { "Canon", "EOS 650D", WhiteFluorescent, 3,	{ 1.8486, 1, 2.1973, 0 } },
   { "Canon", "EOS 650D", Flash, -3,		{ 2.1699, 1, 1.5879, 0 } },
   { "Canon", "EOS 650D", Flash, 0,		{ 2.2607, 1, 1.5166, 0 } },
   { "Canon", "EOS 650D", Flash, 3,		{ 2.3701, 1, 1.4502, 0 } },
@@ -1721,9 +2196,9 @@ const wb_data wb_preset[] = {
   { "Canon", "EOS REBEL T4i", Tungsten, -3,	{ 1.3975, 1, 2.5928, 0 } },
   { "Canon", "EOS REBEL T4i", Tungsten, 0,	{ 1.4541, 1, 2.4561, 0 } },
   { "Canon", "EOS REBEL T4i", Tungsten, 3,	{ 1.5127, 1, 2.3428, 0 } },
-  { "Canon", "EOS REBEL T4i", Fluorescent, -3,	{ 1.6982, 1, 2.4268, 0 } },
-  { "Canon", "EOS REBEL T4i", Fluorescent, 0,	{ 1.7715, 1, 2.3066, 0 } },
-  { "Canon", "EOS REBEL T4i", Fluorescent, 3,	{ 1.8486, 1, 2.1973, 0 } },
+  { "Canon", "EOS REBEL T4i", WhiteFluorescent, -3, { 1.6982, 1, 2.4268, 0 } },
+  { "Canon", "EOS REBEL T4i", WhiteFluorescent, 0, { 1.7715, 1, 2.3066, 0 } },
+  { "Canon", "EOS REBEL T4i", WhiteFluorescent, 3, { 1.8486, 1, 2.1973, 0 } },
   { "Canon", "EOS REBEL T4i", Flash, -3,	{ 2.1699, 1, 1.5879, 0 } },
   { "Canon", "EOS REBEL T4i", Flash, 0,		{ 2.2607, 1, 1.5166, 0 } },
   { "Canon", "EOS REBEL T4i", Flash, 3,		{ 2.3701, 1, 1.4502, 0 } },
@@ -1740,90 +2215,99 @@ const wb_data wb_preset[] = {
   { "Canon", "EOS Kiss X6i", Tungsten, -3,	{ 1.3975, 1, 2.5928, 0 } },
   { "Canon", "EOS Kiss X6i", Tungsten, 0,	{ 1.4541, 1, 2.4561, 0 } },
   { "Canon", "EOS Kiss X6i", Tungsten, 3,	{ 1.5127, 1, 2.3428, 0 } },
-  { "Canon", "EOS Kiss X6i", Fluorescent, -3,	{ 1.6982, 1, 2.4268, 0 } },
-  { "Canon", "EOS Kiss X6i", Fluorescent, 0,	{ 1.7715, 1, 2.3066, 0 } },
-  { "Canon", "EOS Kiss X6i", Fluorescent, 3,	{ 1.8486, 1, 2.1973, 0 } },
+  { "Canon", "EOS Kiss X6i", WhiteFluorescent, -3, { 1.6982, 1, 2.4268, 0 } },
+  { "Canon", "EOS Kiss X6i", WhiteFluorescent, 0, { 1.7715, 1, 2.3066, 0 } },
+  { "Canon", "EOS Kiss X6i", WhiteFluorescent, 3, { 1.8486, 1, 2.1973, 0 } },
   { "Canon", "EOS Kiss X6i", Flash, -3,		{ 2.1699, 1, 1.5879, 0 } },
   { "Canon", "EOS Kiss X6i", Flash, 0,		{ 2.2607, 1, 1.5166, 0 } },
   { "Canon", "EOS Kiss X6i", Flash, 3,		{ 2.3701, 1, 1.4502, 0 } },
 
-  // Copied from Canon EOS 650D
-  { "Canon", "EOS 700D", Daylight, -3,		{ 1.9502, 1, 1.7539, 0 } },
-  { "Canon", "EOS 700D", Daylight, 0,		{ 2.0322, 1, 1.6572, 0 } },
-  { "Canon", "EOS 700D", Daylight, 3,		{ 2.1152, 1, 1.5850, 0 } },
-  { "Canon", "EOS 700D", Shade, -3,		{ 2.2305, 1, 1.4951, 0 } },
-  { "Canon", "EOS 700D", Shade, 0,		{ 2.3379, 1, 1.4238, 0 } },
-  { "Canon", "EOS 700D", Shade, 3,		{ 2.4443, 1, 1.3604, 0 } },
-  { "Canon", "EOS 700D", Cloudy, -3,		{ 2.0898, 1, 1.6074, 0 } },
-  { "Canon", "EOS 700D", Cloudy, 0,		{ 2.1787, 1, 1.5332, 0 } },
-  { "Canon", "EOS 700D", Cloudy, 3,		{ 2.2705, 1, 1.4668, 0 } },
-  { "Canon", "EOS 700D", Tungsten, -3,		{ 1.3975, 1, 2.5928, 0 } },
-  { "Canon", "EOS 700D", Tungsten, 0,		{ 1.4541, 1, 2.4561, 0 } },
-  { "Canon", "EOS 700D", Tungsten, 3,		{ 1.5127, 1, 2.3428, 0 } },
-  { "Canon", "EOS 700D", Fluorescent, -3,	{ 1.6982, 1, 2.4268, 0 } },
-  { "Canon", "EOS 700D", Fluorescent, 0,	{ 1.7715, 1, 2.3066, 0 } },
-  { "Canon", "EOS 700D", Fluorescent, 3,	{ 1.8486, 1, 2.1973, 0 } },
-  { "Canon", "EOS 700D", Flash, -3,		{ 2.1699, 1, 1.5879, 0 } },
-  { "Canon", "EOS 700D", Flash, 0,		{ 2.2607, 1, 1.5166, 0 } },
-  { "Canon", "EOS 700D", Flash, 3,		{ 2.3701, 1, 1.4502, 0 } },
-
-  { "Canon", "EOS REBEL T5i", Daylight, -3,	{ 1.9502, 1, 1.7539, 0 } },
-  { "Canon", "EOS REBEL T5i", Daylight, 0,	{ 2.0322, 1, 1.6572, 0 } },
-  { "Canon", "EOS REBEL T5i", Daylight, 3,	{ 2.1152, 1, 1.5850, 0 } },
-  { "Canon", "EOS REBEL T5i", Shade, -3,	{ 2.2305, 1, 1.4951, 0 } },
-  { "Canon", "EOS REBEL T5i", Shade, 0,		{ 2.3379, 1, 1.4238, 0 } },
-  { "Canon", "EOS REBEL T5i", Shade, 3,		{ 2.4443, 1, 1.3604, 0 } },
-  { "Canon", "EOS REBEL T5i", Cloudy, -3,	{ 2.0898, 1, 1.6074, 0 } },
-  { "Canon", "EOS REBEL T5i", Cloudy, 0,	{ 2.1787, 1, 1.5332, 0 } },
-  { "Canon", "EOS REBEL T5i", Cloudy, 3,	{ 2.2705, 1, 1.4668, 0 } },
-  { "Canon", "EOS REBEL T5i", Tungsten, -3,	{ 1.3975, 1, 2.5928, 0 } },
-  { "Canon", "EOS REBEL T5i", Tungsten, 0,	{ 1.4541, 1, 2.4561, 0 } },
-  { "Canon", "EOS REBEL T5i", Tungsten, 3,	{ 1.5127, 1, 2.3428, 0 } },
-  { "Canon", "EOS REBEL T5i", Fluorescent, -3,	{ 1.6982, 1, 2.4268, 0 } },
-  { "Canon", "EOS REBEL T5i", Fluorescent, 0,	{ 1.7715, 1, 2.3066, 0 } },
-  { "Canon", "EOS REBEL T5i", Fluorescent, 3,	{ 1.8486, 1, 2.1973, 0 } },
-  { "Canon", "EOS REBEL T5i", Flash, -3,	{ 2.1699, 1, 1.5879, 0 } },
-  { "Canon", "EOS REBEL T5i", Flash, 0,		{ 2.2607, 1, 1.5166, 0 } },
-  { "Canon", "EOS REBEL T5i", Flash, 3,		{ 2.3701, 1, 1.4502, 0 } },
-
-  { "Canon", "EOS Kiss X7i", Daylight, -3,	{ 1.9502, 1, 1.7539, 0 } },
-  { "Canon", "EOS Kiss X7i", Daylight, 0,	{ 2.0322, 1, 1.6572, 0 } },
-  { "Canon", "EOS Kiss X7i", Daylight, 3,	{ 2.1152, 1, 1.5850, 0 } },
-  { "Canon", "EOS Kiss X7i", Shade, -3,		{ 2.2305, 1, 1.4951, 0 } },
-  { "Canon", "EOS Kiss X7i", Shade, 0,		{ 2.3379, 1, 1.4238, 0 } },
-  { "Canon", "EOS Kiss X7i", Shade, 3,		{ 2.4443, 1, 1.3604, 0 } },
-  { "Canon", "EOS Kiss X7i", Cloudy, -3,	{ 2.0898, 1, 1.6074, 0 } },
-  { "Canon", "EOS Kiss X7i", Cloudy, 0,		{ 2.1787, 1, 1.5332, 0 } },
-  { "Canon", "EOS Kiss X7i", Cloudy, 3,		{ 2.2705, 1, 1.4668, 0 } },
-  { "Canon", "EOS Kiss X7i", Tungsten, -3,	{ 1.3975, 1, 2.5928, 0 } },
-  { "Canon", "EOS Kiss X7i", Tungsten, 0,	{ 1.4541, 1, 2.4561, 0 } },
-  { "Canon", "EOS Kiss X7i", Tungsten, 3,	{ 1.5127, 1, 2.3428, 0 } },
-  { "Canon", "EOS Kiss X7i", Fluorescent, -3,	{ 1.6982, 1, 2.4268, 0 } },
-  { "Canon", "EOS Kiss X7i", Fluorescent, 0,	{ 1.7715, 1, 2.3066, 0 } },
-  { "Canon", "EOS Kiss X7i", Fluorescent, 3,	{ 1.8486, 1, 2.1973, 0 } },
-  { "Canon", "EOS Kiss X7i", Flash, -3,		{ 2.1699, 1, 1.5879, 0 } },
-  { "Canon", "EOS Kiss X7i", Flash, 0,		{ 2.2607, 1, 1.5166, 0 } },
-  { "Canon", "EOS Kiss X7i", Flash, 3,		{ 2.3701, 1, 1.4502, 0 } },
+  // Canon EOS 700D firmware Version 1.1.4
+  { "Canon", "EOS 700D", Daylight, 0,		{ 2.089844, 1, 1.540039, 0 } },
+  { "Canon", "EOS 700D", Shade, 0,		{ 2.403320, 1, 1.302734, 0 } },
+  { "Canon", "EOS 700D", Cloudy, 0,		{ 2.240234, 1, 1.412109, 0 } },
+  { "Canon", "EOS 700D", Tungsten, 0,		{ 1.501953, 1, 2.365234, 0 } },
+  { "Canon", "EOS 700D", WhiteFluorescent, 0,	{ 1.832031, 1, 2.250977, 0 } },
+  { "Canon", "EOS 700D", Flash, 0,		{ 2.327148, 1, 1.398438, 0 } },
+
+  { "Canon", "EOS REBEL T5i", Daylight, 0,	{ 2.089844, 1, 1.540039, 0 } },
+  { "Canon", "EOS REBEL T5i", Shade, 0,		{ 2.403320, 1, 1.302734, 0 } },
+  { "Canon", "EOS REBEL T5i", Cloudy, 0,	{ 2.240234, 1, 1.412109, 0 } },
+  { "Canon", "EOS REBEL T5i", Tungsten, 0,	{ 1.501953, 1, 2.365234, 0 } },
+  { "Canon", "EOS REBEL T5i", WhiteFluorescent, 0, { 1.832031, 1, 2.250977, 0 } },
+  { "Canon", "EOS REBEL T5i", Flash, 0,		{ 2.327148, 1, 1.398438, 0 } },
+
+  { "Canon", "EOS Kiss X7i", Daylight, 0,	{ 2.089844, 1, 1.540039, 0 } },
+  { "Canon", "EOS Kiss X7i", Shade, 0,		{ 2.403320, 1, 1.302734, 0 } },
+  { "Canon", "EOS Kiss X7i", Cloudy, 0,		{ 2.240234, 1, 1.412109, 0 } },
+  { "Canon", "EOS Kiss X7i", Tungsten, 0,	{ 1.501953, 1, 2.365234, 0 } },
+  { "Canon", "EOS Kiss X7i", WhiteFluorescent, 0, { 1.832031, 1, 2.250977, 0 } },
+  { "Canon", "EOS Kiss X7i", Flash, 0,		{ 2.327148, 1, 1.398438, 0 } },
+
+  { "Canon", "EOS 750D", Daylight, 0,		{ 2.115234, 1, 1.701172, 0 } },
+  { "Canon", "EOS 750D", Shade, 0,		{ 2.461914, 1, 1.458984, 0 } },
+  { "Canon", "EOS 750D", Cloudy, 0,		{ 2.286133, 1, 1.570312, 0 } },
+  { "Canon", "EOS 750D", Tungsten, 0,		{ 1.473633, 1, 2.467773, 0 } },
+  { "Canon", "EOS 750D", WhiteFluorescent, 0,	{ 1.784180, 1, 2.300781, 0 } },
+  { "Canon", "EOS 750D", Flash, 0,		{ 2.359375, 1, 1.548828, 0 } },
+
+  { "Canon", "EOS REBEL T6i", Daylight, 0,	{ 2.115234, 1, 1.701172, 0 } },
+  { "Canon", "EOS REBEL T6i", Shade, 0,		{ 2.461914, 1, 1.458984, 0 } },
+  { "Canon", "EOS REBEL T6i", Cloudy, 0,	{ 2.286133, 1, 1.570312, 0 } },
+  { "Canon", "EOS REBEL T6i", Tungsten, 0,	{ 1.473633, 1, 2.467773, 0 } },
+  { "Canon", "EOS REBEL T6i", WhiteFluorescent, 0, { 1.784180, 1, 2.300781, 0 } },
+  { "Canon", "EOS REBEL T6i", Flash, 0,	{ 2.359375, 1, 1.548828, 0 } },
+
+  { "Canon", "EOS Kiss X8i", Daylight, 0,	{ 2.115234, 1, 1.701172, 0 } },
+  { "Canon", "EOS Kiss X8i", Shade, 0,		{ 2.461914, 1, 1.458984, 0 } },
+  { "Canon", "EOS Kiss X8i", Cloudy, 0,		{ 2.286133, 1, 1.570312, 0 } },
+  { "Canon", "EOS Kiss X8i", Tungsten, 0,	{ 1.473633, 1, 2.467773, 0 } },
+  { "Canon", "EOS Kiss X8i", WhiteFluorescent, 0, { 1.784180, 1, 2.300781, 0 } },
+  { "Canon", "EOS Kiss X8i", Flash, 0,		{ 2.359375, 1, 1.548828, 0 } },
+
+  // Firmware version 1.0.0
+  { "Canon", "EOS 760D", Daylight, 0,		{ 2.169922, 1, 1.709961, 0 } },
+  { "Canon", "EOS 760D", Shade, 0,		{ 2.528320, 1, 1.466797, 0 } },
+  { "Canon", "EOS 760D", Cloudy, 0,		{ 2.342773, 1, 1.578125, 0 } },
+  { "Canon", "EOS 760D", Tungsten, 0,		{ 1.510742, 1, 2.479492, 0 } },
+  { "Canon", "EOS 760D", WhiteFluorescent, 0,	{ 1.825195, 1, 2.311523, 0 } },
+  { "Canon", "EOS 760D", Flash, 0,		{ 2.420898, 1, 1.556641, 0 } },
+
+  // Firmware version 1.0.0
+  { "Canon", "EOS REBEL T6s", Daylight, 0,	{ 2.169922, 1, 1.709961, 0 } },
+  { "Canon", "EOS REBEL T6s", Shade, 0,		{ 2.528320, 1, 1.466797, 0 } },
+  { "Canon", "EOS REBEL T6s", Cloudy, 0,	{ 2.342773, 1, 1.578125, 0 } },
+  { "Canon", "EOS REBEL T6s", Tungsten, 0,	{ 1.510742, 1, 2.479492, 0 } },
+  { "Canon", "EOS REBEL T6s", WhiteFluorescent, 0, { 1.825195, 1, 2.311523, 0 } },
+  { "Canon", "EOS REBEL T6s", Flash, 0,		{ 2.420898, 1, 1.556641, 0 } },
+
+  // Firmware version 1.0.0
+  { "Canon", "EOS 8000D", Daylight, 0,		{ 2.169922, 1, 1.709961, 0 } },
+  { "Canon", "EOS 8000D", Shade, 0,		{ 2.528320, 1, 1.466797, 0 } },
+  { "Canon", "EOS 8000D", Cloudy, 0,		{ 2.342773, 1, 1.578125, 0 } },
+  { "Canon", "EOS 8000D", Tungsten, 0,		{ 1.510742, 1, 2.479492, 0 } },
+  { "Canon", "EOS 8000D", WhiteFluorescent, 0,	{ 1.825195, 1, 2.311523, 0 } },
+  { "Canon", "EOS 8000D", Flash, 0,		{ 2.420898, 1, 1.556641, 0 } },
 
   { "Canon", "EOS 1000D", Daylight, 0,		{ 2.183594, 1, 1.526367, 0 } },
   { "Canon", "EOS 1000D", Shade, 0,		{ 2.553711, 1, 1.262695, 0 } },
   { "Canon", "EOS 1000D", Cloudy, 0,		{ 2.365234, 1, 1.375977, 0 } },
   { "Canon", "EOS 1000D", Tungsten, 0,		{ 1.470328, 1, 2.402126, 0 } },
-  { "Canon", "EOS 1000D", Fluorescent, 0,	{ 1.889648, 1, 2.133789, 0 } },
+  { "Canon", "EOS 1000D", WhiteFluorescent, 0,	{ 1.889648, 1, 2.133789, 0 } },
   { "Canon", "EOS 1000D", Flash, 0,		{ 2.541830, 1, 1.769099, 0 } },
 
   { "Canon", "EOS DIGITAL REBEL XS", Daylight, 0, { 2.183594, 1, 1.526367, 0 } },
   { "Canon", "EOS DIGITAL REBEL XS", Shade, 0,	{ 2.553711, 1, 1.262695, 0 } },
   { "Canon", "EOS DIGITAL REBEL XS", Cloudy, 0,	{ 2.365234, 1, 1.375977, 0 } },
   { "Canon", "EOS DIGITAL REBEL XS", Tungsten, 0, { 1.470328, 1, 2.402126, 0 } },
-  { "Canon", "EOS DIGITAL REBEL XS", Fluorescent, 0, { 1.889648, 1, 2.133789, 0 } },
+  { "Canon", "EOS DIGITAL REBEL XS", WhiteFluorescent, 0, { 1.889648, 1, 2.133789, 0 } },
   { "Canon", "EOS DIGITAL REBEL XS", Flash, 0,	{ 2.541830, 1, 1.769099, 0 } },
 
   { "Canon", "EOS Kiss Digital F", Daylight, 0,	{ 2.183594, 1, 1.526367, 0 } },
   { "Canon", "EOS Kiss Digital F", Shade, 0,	{ 2.553711, 1, 1.262695, 0 } },
   { "Canon", "EOS Kiss Digital F", Cloudy, 0,	{ 2.365234, 1, 1.375977, 0 } },
   { "Canon", "EOS Kiss Digital F", Tungsten, 0,	{ 1.470328, 1, 2.402126, 0 } },
-  { "Canon", "EOS Kiss Digital F", Fluorescent, 0, { 1.889648, 1, 2.133789, 0 } },
+  { "Canon", "EOS Kiss Digital F", WhiteFluorescent, 0, { 1.889648, 1, 2.133789, 0 } },
   { "Canon", "EOS Kiss Digital F", Flash, 0,	{ 2.541830, 1, 1.769099, 0 } },
 
   { "Canon", "EOS 1100D", Daylight, 0,		{ 2.2559, 1, 1.4844, 0 } },
@@ -1847,11 +2331,53 @@ const wb_data wb_preset[] = {
   { "Canon", "EOS Kiss Digital X50", WhiteFluorescent, 0, { 1.9541, 1, 2.0732, 0 } },
   { "Canon", "EOS Kiss Digital X50", Flash, 0,	{ 2.5283, 1, 1.3584, 0 } },
 
+  { "Canon", "EOS 1200D", Daylight, 0,		{ 2.007812, 1, 1.599609, 0 } },
+  { "Canon", "EOS 1200D", Shade, 0,		{ 2.322266, 1, 1.361328, 0 } },
+  { "Canon", "EOS 1200D", Cloudy, 0,		{ 2.160156, 1, 1.471680, 0 } },
+  { "Canon", "EOS 1200D", Tungsten, 0,		{ 1.444336, 1, 2.392578, 0 } },
+  { "Canon", "EOS 1200D", WhiteFluorescent, 0,	{ 1.759766, 1, 2.275391, 0 } },
+  { "Canon", "EOS 1200D", Flash, 0,		{ 2.246094, 1, 1.452148, 0 } },
+
+  { "Canon", "EOS REBEL T5", Daylight, 0,	{ 2.007812, 1, 1.599609, 0 } },
+  { "Canon", "EOS REBEL T5", Shade, 0,		{ 2.322266, 1, 1.361328, 0 } },
+  { "Canon", "EOS REBEL T5", Cloudy, 0,		{ 2.160156, 1, 1.471680, 0 } },
+  { "Canon", "EOS REBEL T5", Tungsten, 0,	{ 1.444336, 1, 2.392578, 0 } },
+  { "Canon", "EOS REBEL T5", WhiteFluorescent, 0, { 1.759766, 1, 2.275391, 0 } },
+  { "Canon", "EOS REBEL T5", Flash, 0,		{ 2.246094, 1, 1.452148, 0 } },
+
+  { "Canon", "EOS Kiss Digital X70", Daylight, 0, { 2.007812, 1, 1.599609, 0 } },
+  { "Canon", "EOS Kiss Digital X70", Shade, 0,	{ 2.322266, 1, 1.361328, 0 } },
+  { "Canon", "EOS Kiss Digital X70", Cloudy, 0,	{ 2.160156, 1, 1.471680, 0 } },
+  { "Canon", "EOS Kiss Digital X70", Tungsten, 0, { 1.444336, 1, 2.392578, 0 } },
+  { "Canon", "EOS Kiss Digital X70", WhiteFluorescent, 0, { 1.759766, 1, 2.275391, 0 } },
+  { "Canon", "EOS Kiss Digital X70", Flash, 0,	{ 2.246094, 1, 1.452148, 0 } },
+
+  { "Canon", "EOS 1300D", Daylight, 0,		{ 1.988281, 1, 1.530273, 0 } },
+  { "Canon", "EOS 1300D", Shade, 0,		{ 2.295898, 1, 1.300781, 0 } },
+  { "Canon", "EOS 1300D", Cloudy, 0,		{ 2.137695, 1, 1.406250, 0 } },
+  { "Canon", "EOS 1300D", Tungsten, 0,		{ 1.432617, 1, 2.300781, 0 } },
+  { "Canon", "EOS 1300D", WhiteFluorescent, 0,	{ 1.747070, 1, 2.188477, 0 } },
+  { "Canon", "EOS 1300D", Flash, 0,		{ 2.221680, 1, 1.387695, 0 } },
+
+  { "Canon", "EOS REBEL T6", Daylight, 0,	{ 1.988281, 1, 1.530273, 0 } },
+  { "Canon", "EOS REBEL T6", Shade, 0,		{ 2.295898, 1, 1.300781, 0 } },
+  { "Canon", "EOS REBEL T6", Cloudy, 0,		{ 2.137695, 1, 1.406250, 0 } },
+  { "Canon", "EOS REBEL T6", Tungsten, 0,	{ 1.432617, 1, 2.300781, 0 } },
+  { "Canon", "EOS REBEL T6", WhiteFluorescent, 0, { 1.747070, 1, 2.188477, 0 } },
+  { "Canon", "EOS REBEL T6", Flash, 0,		{ 2.221680, 1, 1.387695, 0 } },
+
+  { "Canon", "EOS Kiss Digital X80", Daylight, 0, { 1.988281, 1, 1.530273, 0 } },
+  { "Canon", "EOS Kiss Digital X80", Shade, 0,	{ 2.295898, 1, 1.300781, 0 } },
+  { "Canon", "EOS Kiss Digital X80", Cloudy, 0,	{ 2.137695, 1, 1.406250, 0 } },
+  { "Canon", "EOS Kiss Digital X80", Tungsten, 0, { 1.432617, 1, 2.300781, 0 } },
+  { "Canon", "EOS Kiss Digital X80", WhiteFluorescent, 0, { 1.747070, 1, 2.188477, 0 } },
+  { "Canon", "EOS Kiss Digital X80", Flash, 0,	{ 2.221680, 1, 1.387695, 0 } },
+
   { "Canon", "EOS-1DS", Daylight, 0,		{ 1.6133, 1, 1.2500, 0 } }, /* 5302K */
   { "Canon", "EOS-1DS", Shade, 0,		{ 1.8477, 1, 1.0684, 0 } }, /* 6685K */
   { "Canon", "EOS-1DS", Cloudy, 0,		{ 1.7285, 1, 1.1504, 0 } }, /* 5940K */
   { "Canon", "EOS-1DS", Tungsten, 0,		{ 1.1270, 1, 1.9199, 0 } }, /* 3334K */
-  { "Canon", "EOS-1DS", Fluorescent, 0,		{ 1.2012, 1, 1.7168, 0 } }, /* 3643K */
+  { "Canon", "EOS-1DS", WhiteFluorescent, 0,	{ 1.2012, 1, 1.7168, 0 } }, /* 3643K */
   { "Canon", "EOS-1DS", Flash, 0,		{ 1.7793, 1, 1.1445, 0 } }, /* 6184K */
 
   // Firmware Version 1.1.6
@@ -1859,29 +2385,43 @@ const wb_data wb_preset[] = {
   { "Canon", "EOS-1Ds Mark II", Shade, 0,	{ 2.300781, 1, 1.243164, 0 } },
   { "Canon", "EOS-1Ds Mark II", Cloudy, 0,	{ 2.146484, 1, 1.363281, 0 } },
   { "Canon", "EOS-1Ds Mark II", Tungsten, 0,	{ 1.395018, 1, 2.370107, 0 } },
-  { "Canon", "EOS-1Ds Mark II", Fluorescent, 0,	{ 1.854792, 1, 2.067764, 0 } },
+  { "Canon", "EOS-1Ds Mark II", WhiteFluorescent, 0, { 1.854792, 1, 2.067764, 0 } },
   { "Canon", "EOS-1Ds Mark II", Flash, 0,	{ 2.235352, 1, 1.297852, 0 } },
 
   { "Canon", "EOS-1D Mark II", Cloudy, 0,	{ 2.093750, 1, 1.166016, 0 } },
   { "Canon", "EOS-1D Mark II", Daylight, 0,	{ 1.957031, 1, 1.295898, 0 } },
   { "Canon", "EOS-1D Mark II", Flash, 0,	{ 2.225586, 1, 1.172852, 0 } },
-  { "Canon", "EOS-1D Mark II", Fluorescent, 0,	{ 1.785853, 1, 1.785853, 0 } },
+  { "Canon", "EOS-1D Mark II", WhiteFluorescent, 0, { 1.785853, 1, 1.785853, 0 } },
   { "Canon", "EOS-1D Mark II", Shade, 0,	{ 2.220703, 1, 1.069336, 0 } },
   { "Canon", "EOS-1D Mark II", Tungsten, 0,	{ 1.415480, 1, 2.160142, 0 } },
 
   { "Canon", "EOS-1D Mark II N", Cloudy, 0,	{ 2.183594, 1, 1.220703, 0 } },
   { "Canon", "EOS-1D Mark II N", Daylight, 0,	{ 2.019531, 1, 1.349609, 0 } },
   { "Canon", "EOS-1D Mark II N", Flash, 0,	{ 2.291016, 1, 1.149414, 0 } },
-  { "Canon", "EOS-1D Mark II N", Fluorescent, 0, { 1.802899, 1, 1.990338, 0 } },
+  { "Canon", "EOS-1D Mark II N", WhiteFluorescent, 0, { 1.802899, 1, 1.990338, 0 } },
   { "Canon", "EOS-1D Mark II N", Shade, 0,	{ 2.337891, 1, 1.112305, 0 } },
   { "Canon", "EOS-1D Mark II N", Tungsten, 0,	{ 1.408514, 1, 2.147645, 0 } },
 
+  { "Canon", "EOS-1D Mark III", Daylight, 0,	{ 1.980469, 1, 1.471680, 0 } },
+  { "Canon", "EOS-1D Mark III", Shade, 0,	{ 2.291016, 1, 1.205078, 0 } },
+  { "Canon", "EOS-1D Mark III", Cloudy, 0,	{ 2.142578, 1, 1.325195, 0 } },
+  { "Canon", "EOS-1D Mark III", Tungsten, 0,	{ 1.363470, 1, 2.380822, 0 } },
+  { "Canon", "EOS-1D Mark III", WhiteFluorescent, 0, { 1.742612, 1, 2.222116, 0 } },
+  { "Canon", "EOS-1D Mark III", Flash, 0,	{ 2.173828, 1, 1.288086, 0 } },
+
+  { "Canon", "EOS-1Ds Mark III", Daylight, 0,	{ 2.093750, 1, 1.521484, 0 } },
+  { "Canon", "EOS-1Ds Mark III", Shade, 0,	{ 2.420898, 1, 1.238281, 0 } },
+  { "Canon", "EOS-1Ds Mark III", Cloudy, 0,	{ 2.250977, 1, 1.361328, 0 } },
+  { "Canon", "EOS-1Ds Mark III", Tungsten, 0,	{ 1.455382, 1, 2.404784, 0 } },
+  { "Canon", "EOS-1Ds Mark III", WhiteFluorescent, 0, { 1.842718, 1, 2.330097, 0 } },
+  { "Canon", "EOS-1Ds Mark III", Flash, 0,	{ 2.311523, 1, 1.316406, 0 } },
+
   // Firmware Version 1.0.6 (Temporary)
   { "Canon", "EOS-1D Mark IV", Daylight, 0,	{ 2.040039, 1, 1.558594, 0 } },
   { "Canon", "EOS-1D Mark IV", Shade, 0,	{ 2.342773, 1, 1.333008, 0 } },
   { "Canon", "EOS-1D Mark IV", Cloudy, 0,	{ 2.188477, 1, 1.440430, 0 } },
   { "Canon", "EOS-1D Mark IV", Tungsten, 0,	{ 1.458333, 1, 2.305254, 0 } },
-  { "Canon", "EOS-1D Mark IV", Fluorescent, 0,	{ 1.767892, 1, 2.205029, 0 } },
+  { "Canon", "EOS-1D Mark IV", WhiteFluorescent, 0, { 1.767892, 1, 2.205029, 0 } },
   { "Canon", "EOS-1D Mark IV", Flash, 0,	{ 2.230469, 1, 1.423828, 0 } },
 
   /* Canon EOS-1D X Firmware Version 1.0.6 */
@@ -1889,16 +2429,44 @@ const wb_data wb_preset[] = {
   { "Canon", "EOS-1D X", Shade, 0,		{ 2.230469, 1, 1.175781, 0 } },
   { "Canon", "EOS-1D X", Cloudy, 0,		{ 2.085938, 1, 1.268555, 0 } },
   { "Canon", "EOS-1D X", Tungsten, 0,		{ 1.385742, 1, 2.068359, 0 } },
-  { "Canon", "EOS-1D X", Fluorescent, 0,	{ 1.726563, 1, 1.950195, 0 } },
+  { "Canon", "EOS-1D X", WhiteFluorescent, 0,	{ 1.726563, 1, 1.950195, 0 } },
   { "Canon", "EOS-1D X", Flash, 0,		{ 2.173828, 1, 1.239258, 0 } },
 
+  { "Canon", "EOS-1D X Mark II", Daylight, 0,	{ 1.822266, 1, 1.584961, 0 } },
+  { "Canon", "EOS-1D X Mark II", Shade, 0,	{ 2.081055, 1, 1.381836, 0 } },
+  { "Canon", "EOS-1D X Mark II", Cloudy, 0,	{ 1.954102, 1, 1.481445, 0 } },
+  { "Canon", "EOS-1D X Mark II", Tungsten, 0,	{ 1.300781, 1, 2.275391, 0 } },
+  { "Canon", "EOS-1D X Mark II", WhiteFluorescent, 0, { 1.540039, 1, 2.169922, 0 } },
+  { "Canon", "EOS-1D X Mark II", Flash, 0,	{ 2.011719, 1, 1.454102, 0 } },
+
   // Canon EOS M Firmware 1.0.6
   { "Canon", "EOS M", Cloudy, 0,		{ 2.156250, 1, 1.448242, 0 } },
   { "Canon", "EOS M", Daylight, 0,		{ 2.007813, 1, 1.575195, 0 } },
   { "Canon", "EOS M", Flash, 0,			{ 2.230469, 1, 1.429688, 0 } },
   { "Canon", "EOS M", Tungsten, 0,		{ 1.448242, 1, 2.386719, 0 } },
   { "Canon", "EOS M", Shade, 0,			{ 2.300781, 1, 1.334961, 0 } },
-  { "Canon", "EOS M", Fluorescent, 0,		{ 1.784180, 1, 2.275391, 0 } },
+  { "Canon", "EOS M", WhiteFluorescent, 0,	{ 1.784180, 1, 2.275391, 0 } },
+
+  { "Canon", "EOS M2", Cloudy, 0,		{ 2.085938, 1, 1.493164, 0 } },
+  { "Canon", "EOS M2", Daylight, 0,		{ 1.943359, 1, 1.615234, 0 } },
+  { "Canon", "EOS M2", Flash, 0,		{ 2.165039, 1, 1.475586, 0 } },
+  { "Canon", "EOS M2", Tungsten, 0,		{ 1.391602, 1, 2.392578, 0 } },
+  { "Canon", "EOS M2", Shade, 0,		{ 2.226563, 1, 1.381836, 0 } },
+  { "Canon", "EOS M2", WhiteFluorescent, 0,	{ 1.735352, 1, 2.280273, 0 } },
+
+  { "Canon", "EOS M3", Cloudy, 0,		{ 2.316032, 1, 1.585928, 0 } },
+  { "Canon", "EOS M3", Daylight, 0,		{ 2.140411, 1, 1.702055, 0 } },
+  { "Canon", "EOS M3", Flash, 0,		{ 2.787515, 1, 1.357743, 0 } },
+  { "Canon", "EOS M3", Tungsten, 0,		{ 1.488650, 1, 2.624851, 0 } },
+  { "Canon", "EOS M3", Shade, 0,		{ 2.477855, 1, 1.488345, 0 } },
+  { "Canon", "EOS M3", WhiteFluorescent, 0,	{ 1.870460, 1, 2.325666, 0 } },
+
+  { "Canon", "EOS M10", Cloudy, 0,		{ 2.171053, 1, 1.438596, 0 } },
+  { "Canon", "EOS M10", Daylight, 0,		{ 1.992408, 1, 1.556399, 0 } },
+  { "Canon", "EOS M10", Flash, 0,		{ 2.557562, 1, 1.220090, 0 } },
+  { "Canon", "EOS M10", Tungsten, 0,		{ 1.399530, 1, 2.615746, 0 } },
+  { "Canon", "EOS M10", Shade, 0,		{ 2.334441, 1, 1.330011, 0 } },
+  { "Canon", "EOS M10", WhiteFluorescent, 0,	{ 1.809693, 1, 2.239953, 0 } },
 
   { "FUJIFILM", "E900", Daylight, 0,		{ 1.571875, 1, 1.128125, 0 } },
   { "FUJIFILM", "E900", Shade, 0,		{ 1.668750, 1, 1.006250, 0 } },
@@ -2000,14 +2568,14 @@ const wb_data wb_preset[] = {
 
   /* The S9000 and S9500 are the same camera */
   { "FUJIFILM", "S9000", Daylight, 0,		{ 1.618750, 1, 1.231250, 0 } },
-  { "FUJIFILM", "S9000", Cloudy, 0,		{ 1.700000, 1, 1.046875, 0 } },
+  { "FUJIFILM", "S9000", Shade, 0,		{ 1.700000, 1, 1.046875, 0 } },
   { "FUJIFILM", "S9000", DaylightFluorescent, 0, { 1.902174, 1, 1.057065, 0 } },
   { "FUJIFILM", "S9000", WarmWhiteFluorescent, 0, { 1.633152, 1, 1.293478, 0 } },
   { "FUJIFILM", "S9000", CoolWhiteFluorescent, 0, { 1.546196, 1, 1.622283, 0 } },
   { "FUJIFILM", "S9000", Incandescent, 0,	{ 1.064159, 1, 1.960177, 0 } },
 
   { "FUJIFILM", "S9100", Daylight, 0,		{ 1.506250, 1, 1.318750, 0 } },
-  { "FUJIFILM", "S9100", Cloudy, 0,		{ 1.587500, 1, 1.128125, 0 } },
+  { "FUJIFILM", "S9100", Shade, 0,		{ 1.587500, 1, 1.128125, 0 } },
   { "FUJIFILM", "S9100", DaylightFluorescent, 0, { 1.777174, 1, 1.138587, 0 } },
   { "FUJIFILM", "S9100", WarmWhiteFluorescent, 0, { 1.521739, 1, 1.380435, 0 } },
   { "FUJIFILM", "S9100", CoolWhiteFluorescent, 0, { 1.437500, 1, 1.720109, 0 } },
@@ -2015,7 +2583,7 @@ const wb_data wb_preset[] = {
 
   /* The S9000 and S9500 are the same camera */
   { "FUJIFILM", "S9500", Daylight, 0,		{ 1.618750, 1, 1.231250, 0 } },
-  { "FUJIFILM", "S9500", Cloudy, 0,		{ 1.700000, 1, 1.046875, 0 } },
+  { "FUJIFILM", "S9500", Shade, 0,		{ 1.700000, 1, 1.046875, 0 } },
   { "FUJIFILM", "S9500", DaylightFluorescent, 0, { 1.902174, 1, 1.057065, 0 } },
   { "FUJIFILM", "S9500", WarmWhiteFluorescent, 0, { 1.633152, 1, 1.293478, 0 } },
   { "FUJIFILM", "S9500", CoolWhiteFluorescent, 0, { 1.546196, 1, 1.622283, 0 } },
@@ -2028,6 +2596,22 @@ const wb_data wb_preset[] = {
   { "FUJIFILM", "S9600", CoolWhiteFluorescent, 0, { 1.467391, 1, 1.692935, 0 } },
   { "FUJIFILM", "S9600", Incandescent, 0,	{ 1, 1.004444, 2.040000, 0 } },
 
+  { "FUJIFILM", "X20", Daylight, 0,		{ 1.688742, 1, 1.850993, 0 } },
+  { "FUJIFILM", "X20", Shade, 0,		{ 1.827815, 1, 1.622517, 0 } },
+  { "FUJIFILM", "X20", DayWhiteFluorescent, 0,	{ 1.754967, 1, 1.864238, 0 } },
+  { "FUJIFILM", "X20", DaylightFluorescent, 0,	{ 2.052980, 1, 1.625828, 0 } },
+  { "FUJIFILM", "X20", WhiteFluorescent, 0,	{ 1.754967, 1, 2.341060, 0 } },
+  { "FUJIFILM", "X20", Incandescent, 0,		{ 1.066225, 1, 2.605960, 0 } },
+  { "FUJIFILM", "X20", Underwater, 0,		{ 1.688742, 1, 1.850993, 0 } },
+
+  { "FUJIFILM", "X70", Daylight, 0,		{ 2.009934, 1, 1.513245, 0 } },
+  { "FUJIFILM", "X70", Shade, 0,		{ 2.211921, 1, 1.311258, 0 } },
+  { "FUJIFILM", "X70", DayWhiteFluorescent, 0,	{ 2.188742, 1, 1.566225, 0 } },
+  { "FUJIFILM", "X70", DaylightFluorescent, 0,	{ 2.619205, 1, 1.311258, 0 } },
+  { "FUJIFILM", "X70", WhiteFluorescent, 0,	{ 2.056291, 1, 2.013245, 0 } },
+  { "FUJIFILM", "X70", Incandescent, 0,		{ 1.314570, 1, 2.251656, 0 } },
+  { "FUJIFILM", "X70", Underwater, 0,		{ 2.006623, 1, 1.533113, 0 } },
+
   { "FUJIFILM", "X100", Daylight, 0,		{ 1.4503, 1, 1.5033, 0 } },
   { "FUJIFILM", "X100", Shade, 0,		{ 1.5861, 1, 1.2947, 0 } },
   { "FUJIFILM", "X100", DaylightFluorescent, 0,	{ 1.8841, 1, 1.3179, 0 } },
@@ -2067,7 +2651,7 @@ const wb_data wb_preset[] = {
   { "FUJIFILM", "X100", "9100K", 0,		{ 1.8940, 1, 1.0464, 0 } },
   { "FUJIFILM", "X100", "10000K", 0,		{ 1.9503, 1, 1.0298, 0 } },
 
-  /* Fujifilm X100S firmware 1.20 */
+  /* FUJIFILM X100S firmware 1.20 */
   { "FUJIFILM", "X100S", Daylight, 0,		{ 1.874172, 1, 1.490066, 0 } },
   { "FUJIFILM", "X100S", Shade, 0,		{ 2.049669, 1, 1.271523, 0 } },
   { "FUJIFILM", "X100S", DaylightFluorescent, 0, { 2.344371, 1, 1.264901, 0 } },
@@ -2107,6 +2691,21 @@ const wb_data wb_preset[] = {
   { "FUJIFILM", "X100S", "9100K", 0,		{ 2.304636, 1, 1.122517, 0 } },
   { "FUJIFILM", "X100S", "10000K", 0,		{ 2.360927, 1, 1.079470, 0 } },
 
+  { "FUJIFILM", "X100T", Daylight, 0,		{ 1.930464, 1, 1.539735, 0 } },
+  { "FUJIFILM", "X100T", Shade, 0,		{ 2.109272, 1, 1.324503, 0 } },
+  { "FUJIFILM", "X100T", DaylightFluorescent, 0, { 2.456954, 1, 1.334437, 0 } },
+  { "FUJIFILM", "X100T", WarmWhiteFluorescent, 0, { 2.102649, 1, 1.589404, 0 } },
+  { "FUJIFILM", "X100T", CoolWhiteFluorescent, 0, { 2.013245, 1, 1.970199, 0 } },
+  { "FUJIFILM", "X100T", Incandescent, 0,	{ 1.238411, 1, 2.307947, 0 } },
+  { "FUJIFILM", "X100T", Underwater, 0,		{ 1.927152, 1, 1.549669, 0 } },
+
+  { "FUJIFILM", "X-A2", Daylight, 0,		{ 1.824503, 1, 1.758278, 0 } },
+  { "FUJIFILM", "X-A2", Shade, 0,		{ 2.033113, 1, 1.496689, 0 } },
+  { "FUJIFILM", "X-A2", DaylightFluorescent, 0,	{ 2.327815, 1, 1.500000, 0 } },
+  { "FUJIFILM", "X-A2", WarmWhiteFluorescent, 0, { 1.986755, 1, 1.804636, 0 } },
+  { "FUJIFILM", "X-A2", CoolWhiteFluorescent, 0, { 1.900662, 1, 2.284768, 0 } },
+  { "FUJIFILM", "X-A2", Incandescent, 0,	{ 1.162252, 1, 2.864238, 0 } },
+
   /* FUJIFILM X-E1 Firmware Version 1.01 */
   // The manual calls it "Direct sunlight".
   { "FUJIFILM", "X-E1", Daylight, 0,		{ 1.821192, 1, 1.804636, 0 } },
@@ -2157,6 +2756,13 @@ const wb_data wb_preset[] = {
   { "FUJIFILM", "X-E2", Incandescent, 0,	{ 1.215232, 1, 2.400662, 0 } },
   { "FUJIFILM", "X-E2", Underwater, 0,		{ 1.864238, 1, 1.559603, 0 } },
 
+  { "FUJIFILM", "X-M1", Daylight, 0,		{ 1.943709, 1, 1.824503, 0 } },
+  { "FUJIFILM", "X-M1", Shade, 0,		{ 2.139073, 1, 1.599338, 0 } },
+  { "FUJIFILM", "X-M1", DaylightFluorescent, 0,	{ 2.440397, 1, 1.592715, 0 } },
+  { "FUJIFILM", "X-M1", WarmWhiteFluorescent, 0, { 2.066225, 1, 1.870861, 0 } },
+  { "FUJIFILM", "X-M1", CoolWhiteFluorescent, 0, { 1.937086, 1, 2.360927, 0 } },
+  { "FUJIFILM", "X-M1", Incandescent, 0,	{ 1.225166, 1, 2.976821, 0 } },
+
   /* FUJIFILM X-T1 Firmware Version 1.10 */
   { "FUJIFILM", "X-T1", Daylight, 0,		{ 1.894040, 1, 1.569536, 0 } },
   // The manual calls it "Shade", but exiftool shows it as "Cloudy".
@@ -2168,6 +2774,24 @@ const wb_data wb_preset[] = {
   { "FUJIFILM", "X-T1", Underwater, 0,		{ 1.894040, 1, 1.569536, 0 } },
   { "FUJIFILM", "X-T1", "5000K", 0,		{ 1.847682, 1, 1.546358, 0 } },
 
+  { "FUJIFILM", "X-T2", Daylight, 0,		{ 1.877483, 1, 1.940397, 0 } },
+  { "FUJIFILM", "X-T2", Shade, 0,		{ 2.086093, 1, 1.672185, 0 } },
+  { "FUJIFILM", "X-T2", DaylightFluorescent, 0,	{ 2.360927, 1, 1.668874, 0 } },
+  { "FUJIFILM", "X-T2", DayWhiteFluorescent, 0,	{ 1.976821, 1, 2.052980, 0 } },
+  { "FUJIFILM", "X-T2", WhiteFluorescent, 0,	{ 1.867550, 1, 2.639073, 0 } },
+  { "FUJIFILM", "X-T2", Incandescent, 0,	{ 1.248344, 1, 2.907285, 0 } },
+  { "FUJIFILM", "X-T2", Underwater, 0,		{ 1.877483, 1, 1.940397, 0 } },
+
+  /* FUJIFILM X-T10 Firmware Version 1.21 */
+  { "FUJIFILM", "X-T10", Daylight, 0,		{ 1.884106, 1, 1.526490, 0 } },
+  // The manual calls it "Shade", but exiftool shows it as "Cloudy".
+  { "FUJIFILM", "X-T10", Shade, 0,		{ 2.072848, 1, 1.324503, 0 } },
+  { "FUJIFILM", "X-T10", DaylightFluorescent, 0, { 2.423841, 1, 1.334437, 0 } },
+  { "FUJIFILM", "X-T10", WarmWhiteFluorescent, 0, { 2.026490, 1, 1.599338, 0 } },
+  { "FUJIFILM", "X-T10", CoolWhiteFluorescent, 0, { 1.890728, 1, 2.046358, 0 } },
+  { "FUJIFILM", "X-T10", Incandescent, 0,	{ 1.211921, 1, 2.321192, 0 } },
+  { "FUJIFILM", "X-T10", Underwater, 0,		{ 1.990066, 1, 1.440397, 0 } },
+
   /* FUJIFILM X-Pro1 Firmware Version v3.30 */
   // The manual calls it "Fine".
   { "FUJIFILM", "X-Pro1", Daylight, 0,		{ 1.860927, 1, 1.708609, 0 } },
@@ -2210,6 +2834,14 @@ const wb_data wb_preset[] = {
   { "FUJIFILM", "X-Pro1", "9100K", 0,		{ 2.721854, 1, 1.096026, 0 } },
   { "FUJIFILM", "X-Pro1", "10000K", 0,		{ 2.847682, 1, 1.023179, 0 } },
 
+  { "FUJIFILM", "X-Pro2", Daylight, 0,		{ 1.947020, 1, 1.831126, 0 } },
+  { "FUJIFILM", "X-Pro2", Cloudy, 0,		{ 2.145695, 1, 1.582781, 0 } },
+  { "FUJIFILM", "X-Pro2", Incandescent, 0,	{ 1.264901, 1, 2.754967, 0 } },
+  { "FUJIFILM", "X-Pro2", DayWhiteFluorescent, 0, { 2.069536, 1, 1.950331, 0 } },
+  { "FUJIFILM", "X-Pro2", DaylightFluorescent, 0, { 2.463576, 1, 1.602649, 0 } },
+  { "FUJIFILM", "X-Pro2", WhiteFluorescent, 0,	{ 1.973510, 1, 2.513245, 0 } },
+  { "FUJIFILM", "X-Pro2", Underwater, 0,	{ 1.943709, 1, 1.827815, 0 } },
+
   { "KODAK", "DCS Pro 14N", Daylight, 0,	{ 1, 1.055126, 1.353602, 0 } },
   { "KODAK", "DCS Pro 14N", Tungsten, 0,	{ 1, 1.337688, 2.218852, 0 } },
   { "KODAK", "DCS Pro 14N", Fluorescent, 0,	{ 1, 1.102854, 1.513673, 0 } },
@@ -2227,8 +2859,8 @@ const wb_data wb_preset[] = {
   { "KODAK", "DCS560C", Flash, 0,		{ 1.238956, 1.057305, 2.133333, 0 } },
 
   { "KODAK", "ProBack645", Daylight, 0,		{ 1.122807, 1.001467, 1.368984, 0 } },
-  { "KODAK", "ProBack645", Tungsten, 0,		{ 1, 1.204706, 2.409412, 0 } },
-  { "KODAK", "ProBack645", Fluorescent, 0,	{ 1.099893, 1, 1.699585, 0 } },
+  { "KODAK", "ProBack645", Tungsten, 0,		{ 1.000000, 1.204706, 2.409412, 0 } },
+  { "KODAK", "ProBack645", Fluorescent, 0,	{ 1.099893, 1.000000, 1.699585, 0 } },
   { "KODAK", "ProBack645", Flash, 0,		{ 1.134626, 1.011858, 1.382849, 0 } },
 
   { "KODAK", "P850 ZOOM", Daylight, 0,		{ 1.859375, 1, 1.566406, 0 } },
@@ -2416,65 +3048,65 @@ const wb_data wb_preset[] = {
   { "LEICA", "D-LUX 6", Flash, 0,		{ 2.219697, 1, 1.659091, 0 } },
   { "LEICA", "D-LUX 6", Incandescent, 0,	{ 1.335849, 1, 2.762264, 0 } },
 
-  { "Minolta", "DiMAGE 5", Daylight, 0,		{ 2.023438, 1, 1.371094, 0 } },
-  { "Minolta", "DiMAGE 5", Incandescent, 0,	{ 1.113281, 1, 2.480469, 0 } },
-  { "Minolta", "DiMAGE 5", Fluorescent, 0,	{ 1.957031, 1, 2.058594, 0 } },
-  { "Minolta", "DiMAGE 5", Cloudy, 0,		{ 2.199219, 1, 1.300781, 0 } },
-
-  { "Minolta", "DiMAGE 7", Cloudy, 0,		{ 2.082031, 1, 1.226562, 0 } },
-  { "Minolta", "DiMAGE 7", Daylight, 0,		{ 1.914062, 1, 1.527344, 0 } },
-  { "Minolta", "DiMAGE 7", Fluorescent, 0,	{ 1.917969, 1, 2.007812, 0 } },
-  { "Minolta", "DiMAGE 7", Tungsten, 0,		{ 1.050781, 1, 2.437500, 0 } },
-
-  { "Minolta", "DiMAGE 7i", Daylight, 0,	{ 1.441406, 1, 1.457031, 0 } },
-  { "Minolta", "DiMAGE 7i", Tungsten, 0,	{ 1, 1.333333, 3.572917, 0 } },
-  { "Minolta", "DiMAGE 7i", Fluorescent, 0,	{ 1.554688, 1, 2.230469, 0 } },
-  { "Minolta", "DiMAGE 7i", Cloudy, 0,		{ 1.550781, 1, 1.402344, 0 } },
-
-  { "Minolta", "DiMAGE 7Hi", Daylight, 0,	{ 1.609375, 1, 1.328125, 0 } }, /*5500K*/
-  { "Minolta", "DiMAGE 7Hi", Tungsten, 0,	{ 1, 1.137778, 2.768889, 0 } }, /*2800K*/
-  { "Minolta", "DiMAGE 7Hi", WhiteFluorescent, 0, { 1.664062, 1, 2.105469, 0 } }, /*4060K*/
-  { "Minolta", "DiMAGE 7Hi", CoolWhiteFluorescent, 0, { 1.796875, 1, 1.734375, 0 } }, /*4938K*/
-  { "Minolta", "DiMAGE 7Hi", Cloudy, 0,		{ 1.730469, 1, 1.269531, 0 } }, /*5823K*/
-
-  { "Minolta", "DiMAGE A1", Daylight, 0,	{ 1.808594, 1, 1.304688, 0 } },
-  { "Minolta", "DiMAGE A1", Tungsten, 0,	{ 1.062500, 1, 2.675781, 0 } },
-  { "Minolta", "DiMAGE A1", Fluorescent, 0,	{ 1.707031, 1, 2.039063, 0 } },
-  { "Minolta", "DiMAGE A1", Cloudy, 0,		{ 1.960938, 1, 1.339844, 0 } },
-  { "Minolta", "DiMAGE A1", Shade, 0,		{ 2.253906, 1, 1.199219, 0 } },
-  { "Minolta", "DiMAGE A1", Shade, 2,		{ 2.000000, 1, 1.183594, 0 } },
-  { "Minolta", "DiMAGE A1", Flash, 0,		{ 1.972656, 1, 1.265625, 0 } },
-
-  { "Minolta", "DiMAGE A2", Cloudy, -3,		{ 2.109375, 1, 1.578125, 0 } },
-  { "Minolta", "DiMAGE A2", Cloudy, 0,		{ 2.203125, 1, 1.296875, 0 } },
-  { "Minolta", "DiMAGE A2", Cloudy, 3,		{ 2.296875, 1, 1.015625, 0 } },
-  { "Minolta", "DiMAGE A2", Daylight, -3,	{ 1.867188, 1, 1.683594, 0 } },
-  { "Minolta", "DiMAGE A2", Daylight, 0,	{ 1.960938, 1, 1.402344, 0 } },
-  { "Minolta", "DiMAGE A2", Daylight, 3,	{ 2.054688, 1, 1.121094, 0 } },
-  { "Minolta", "DiMAGE A2", Flash, -3,		{ 1.945312, 1, 1.613281, 0 } },
-  { "Minolta", "DiMAGE A2", Flash, 0,		{ 2.039062, 1, 1.332031, 0 } },
-  { "Minolta", "DiMAGE A2", Flash, 3,		{ 2.132812, 1, 1.050781, 0 } },
-  { "Minolta", "DiMAGE A2", Fluorescent, -2,	{ 1.136719, 1, 2.746094, 0 } },
-  { "Minolta", "DiMAGE A2", Fluorescent, 0,	{ 1.722656, 1, 2.132812, 0 } },
-  { "Minolta", "DiMAGE A2", Fluorescent, 4,	{ 2.347656, 1, 1.535156, 0 } },
-  { "Minolta", "DiMAGE A2", Shade, -3,		{ 2.273438, 1, 1.546875, 0 } },
-  { "Minolta", "DiMAGE A2", Shade, 0,		{ 2.367188, 1, 1.265625, 0 } },
-  { "Minolta", "DiMAGE A2", Shade, 3,		{ 2.500000, 1.015873, 1, 0 } },
-  { "Minolta", "DiMAGE A2", Tungsten, -3,	{ 1.003906, 1, 3.164062, 0 } },
-  { "Minolta", "DiMAGE A2", Tungsten, 0,	{ 1.097656, 1, 2.882812, 0 } },
-  { "Minolta", "DiMAGE A2", Tungsten, 3,	{ 1.191406, 1, 2.601562, 0 } },
-
-  { "Minolta", "DiMAGE Z2", Daylight, 0,	{ 1.843749, 1, 1.664062, 0 } },
-  { "Minolta", "DiMAGE Z2", Cloudy, 0,		{ 2.195312, 1, 1.449218, 0 } },
-  { "Minolta", "DiMAGE Z2", Tungsten, 0,	{ 1.097656, 1, 3.050780, 0 } },
-  { "Minolta", "DiMAGE Z2", Fluorescent, 0,	{ 1.796874, 1, 2.257810, 0 } },
-  { "Minolta", "DiMAGE Z2", Flash, 0,		{ 2.117186, 1, 1.472656, 0 } },
-
-  { "Minolta", "DiMAGE G500", Daylight, 0,	{ 1.496094, 1, 1.121094, 0 } },
-  { "Minolta", "DiMAGE G500", Cloudy, 0,	{ 1.527344, 1, 1.105469, 0 } },
-  { "Minolta", "DiMAGE G500", Fluorescent, 0,	{ 1.382813, 1, 1.347656, 0 } },
-  { "Minolta", "DiMAGE G500", Tungsten, 0,	{ 1.042969, 1, 1.859375, 0 } },
-  { "Minolta", "DiMAGE G500", Flash, 0,		{ 1.647078, 1, 1.218159, 0 } },
+  { "MINOLTA", "DiMAGE 5", Daylight, 0,		{ 2.023438, 1, 1.371094, 0 } },
+  { "MINOLTA", "DiMAGE 5", Incandescent, 0,	{ 1.113281, 1, 2.480469, 0 } },
+  { "MINOLTA", "DiMAGE 5", Fluorescent, 0,	{ 1.957031, 1, 2.058594, 0 } },
+  { "MINOLTA", "DiMAGE 5", Cloudy, 0,		{ 2.199219, 1, 1.300781, 0 } },
+
+  { "MINOLTA", "DiMAGE 7", Cloudy, 0,		{ 2.082031, 1, 1.226562, 0 } },
+  { "MINOLTA", "DiMAGE 7", Daylight, 0,		{ 1.914062, 1, 1.527344, 0 } },
+  { "MINOLTA", "DiMAGE 7", Fluorescent, 0,	{ 1.917969, 1, 2.007812, 0 } },
+  { "MINOLTA", "DiMAGE 7", Tungsten, 0,		{ 1.050781, 1, 2.437500, 0 } },
+
+  { "MINOLTA", "DiMAGE 7i", Daylight, 0,	{ 1.441406, 1, 1.457031, 0 } },
+  { "MINOLTA", "DiMAGE 7i", Tungsten, 0,	{ 1, 1.333333, 3.572917, 0 } },
+  { "MINOLTA", "DiMAGE 7i", Fluorescent, 0,	{ 1.554688, 1, 2.230469, 0 } },
+  { "MINOLTA", "DiMAGE 7i", Cloudy, 0,		{ 1.550781, 1, 1.402344, 0 } },
+
+  { "MINOLTA", "DiMAGE 7Hi", Daylight, 0,	{ 1.609375, 1, 1.328125, 0 } }, /*5500K*/
+  { "MINOLTA", "DiMAGE 7Hi", Tungsten, 0,	{ 1, 1.137778, 2.768889, 0 } }, /*2800K*/
+  { "MINOLTA", "DiMAGE 7Hi", WhiteFluorescent, 0, { 1.664062, 1, 2.105469, 0 } }, /*4060K*/
+  { "MINOLTA", "DiMAGE 7Hi", CoolWhiteFluorescent, 0, { 1.796875, 1, 1.734375, 0 } }, /*4938K*/
+  { "MINOLTA", "DiMAGE 7Hi", Cloudy, 0,		{ 1.730469, 1, 1.269531, 0 } }, /*5823K*/
+
+  { "MINOLTA", "DiMAGE A1", Daylight, 0,	{ 1.808594, 1, 1.304688, 0 } },
+  { "MINOLTA", "DiMAGE A1", Tungsten, 0,	{ 1.062500, 1, 2.675781, 0 } },
+  { "MINOLTA", "DiMAGE A1", Fluorescent, 0,	{ 1.707031, 1, 2.039063, 0 } },
+  { "MINOLTA", "DiMAGE A1", Cloudy, 0,		{ 1.960938, 1, 1.339844, 0 } },
+  { "MINOLTA", "DiMAGE A1", Shade, 0,		{ 2.253906, 1, 1.199219, 0 } },
+  { "MINOLTA", "DiMAGE A1", Shade, 2,		{ 2.000000, 1, 1.183594, 0 } },
+  { "MINOLTA", "DiMAGE A1", Flash, 0,		{ 1.972656, 1, 1.265625, 0 } },
+
+  { "MINOLTA", "DiMAGE A2", Cloudy, -3,		{ 2.109375, 1, 1.578125, 0 } },
+  { "MINOLTA", "DiMAGE A2", Cloudy, 0,		{ 2.203125, 1, 1.296875, 0 } },
+  { "MINOLTA", "DiMAGE A2", Cloudy, 3,		{ 2.296875, 1, 1.015625, 0 } },
+  { "MINOLTA", "DiMAGE A2", Daylight, -3,	{ 1.867188, 1, 1.683594, 0 } },
+  { "MINOLTA", "DiMAGE A2", Daylight, 0,	{ 1.960938, 1, 1.402344, 0 } },
+  { "MINOLTA", "DiMAGE A2", Daylight, 3,	{ 2.054688, 1, 1.121094, 0 } },
+  { "MINOLTA", "DiMAGE A2", Flash, -3,		{ 1.945312, 1, 1.613281, 0 } },
+  { "MINOLTA", "DiMAGE A2", Flash, 0,		{ 2.039062, 1, 1.332031, 0 } },
+  { "MINOLTA", "DiMAGE A2", Flash, 3,		{ 2.132812, 1, 1.050781, 0 } },
+  { "MINOLTA", "DiMAGE A2", Fluorescent, -2,	{ 1.136719, 1, 2.746094, 0 } },
+  { "MINOLTA", "DiMAGE A2", Fluorescent, 0,	{ 1.722656, 1, 2.132812, 0 } },
+  { "MINOLTA", "DiMAGE A2", Fluorescent, 4,	{ 2.347656, 1, 1.535156, 0 } },
+  { "MINOLTA", "DiMAGE A2", Shade, -3,		{ 2.273438, 1, 1.546875, 0 } },
+  { "MINOLTA", "DiMAGE A2", Shade, 0,		{ 2.367188, 1, 1.265625, 0 } },
+  { "MINOLTA", "DiMAGE A2", Shade, 3,		{ 2.500000, 1.015873, 1, 0 } },
+  { "MINOLTA", "DiMAGE A2", Tungsten, -3,	{ 1.003906, 1, 3.164062, 0 } },
+  { "MINOLTA", "DiMAGE A2", Tungsten, 0,	{ 1.097656, 1, 2.882812, 0 } },
+  { "MINOLTA", "DiMAGE A2", Tungsten, 3,	{ 1.191406, 1, 2.601562, 0 } },
+
+  { "MINOLTA", "DiMAGE Z2", Daylight, 0,	{ 1.843749, 1, 1.664062, 0 } },
+  { "MINOLTA", "DiMAGE Z2", Cloudy, 0,		{ 2.195312, 1, 1.449218, 0 } },
+  { "MINOLTA", "DiMAGE Z2", Tungsten, 0,	{ 1.097656, 1, 3.050780, 0 } },
+  { "MINOLTA", "DiMAGE Z2", Fluorescent, 0,	{ 1.796874, 1, 2.257810, 0 } },
+  { "MINOLTA", "DiMAGE Z2", Flash, 0,		{ 2.117186, 1, 1.472656, 0 } },
+
+  { "MINOLTA", "DiMAGE G500", Daylight, 0,	{ 1.496094, 1, 1.121094, 0 } },
+  { "MINOLTA", "DiMAGE G500", Cloudy, 0,	{ 1.527344, 1, 1.105469, 0 } },
+  { "MINOLTA", "DiMAGE G500", Fluorescent, 0,	{ 1.382813, 1, 1.347656, 0 } },
+  { "MINOLTA", "DiMAGE G500", Tungsten, 0,	{ 1.042969, 1, 1.859375, 0 } },
+  { "MINOLTA", "DiMAGE G500", Flash, 0,		{ 1.647078, 1, 1.218159, 0 } },
 
   { "MINOLTA", "DYNAX 5D", Daylight, -3,	{ 1.593750, 1, 1.875000, 0 } },
   { "MINOLTA", "DYNAX 5D", Daylight, -2,	{ 1.644531, 1, 1.792969, 0 } },
@@ -2630,6 +3262,13 @@ const wb_data wb_preset[] = {
   { "NIKON", "1 J3", Shade, 0,			{ 2.718750, 1, 1.382813, 0 } },
   { "NIKON", "1 J3", Underwater, 0,		{ 2.144531, 1, 1.660156, 0 } },
 
+  { "NIKON", "1 J5", Incandescent, 0,		{ 1.546875, 1, 2.171875, 0 } },
+  { "NIKON", "1 J5", CoolWhiteFluorescent, 0,	{ 2.156250, 1, 1.949219, 0 } },
+  { "NIKON", "1 J5", DirectSunlight, 0,		{ 2.316406, 1, 1.378906, 0 } },
+  { "NIKON", "1 J5", Flash, 0,			{ 2.621094, 1, 1.167969, 0 } },
+  { "NIKON", "1 J5", Cloudy, 0,			{ 2.460938, 1, 1.257813, 0 } },
+  { "NIKON", "1 J5", Shade, 0,			{ 2.785156, 1, 1.125000, 0 } },
+
   { "NIKON", "1 V1", Incandescent, 0,		{ 1.210938, 1, 2.308594, 0 } },
   { "NIKON", "1 V1", CoolWhiteFluorescent, 0,	{ 1.687500, 1, 2.199219, 0 } },
   { "NIKON", "1 V1", DirectSunlight, 0,		{ 1.828125, 1, 1.550781, 0 } },
@@ -2637,7 +3276,14 @@ const wb_data wb_preset[] = {
   { "NIKON", "1 V1", Cloudy, 0,			{ 1.960938, 1, 1.406250, 0 } },
   { "NIKON", "1 V1", Shade, 0,			{ 2.257813, 1, 1.277344, 0 } },
 
-  // Nikon CoolPix P330 firmware 1.0
+  { "NIKON", "1 V3", Incandescent, 0,		{ 1.738281, 1, 2.679688, 0 } },
+  { "NIKON", "1 V3", CoolWhiteFluorescent, 0,	{ 2.429688, 1, 2.406250, 0 } },
+  { "NIKON", "1 V3", DirectSunlight, 0,		{ 2.722656, 1, 1.796875, 0 } },
+  { "NIKON", "1 V3", Flash, 0,			{ 3.152344, 1, 1.562500, 0 } },
+  { "NIKON", "1 V3", Cloudy, 0,			{ 2.910156, 1, 1.644531, 0 } },
+  { "NIKON", "1 V3", Shade, 0,			{ 3.359375, 1, 1.507812, 0 } },
+
+  // NIKON COOLPIX P330 firmware 1.0
   { "NIKON", "COOLPIX P330", DirectSunlight, 0,	{ 1.792969, 1, 1.656250, 0 } },
   { "NIKON", "COOLPIX P330", Incandescent, 0,	{ 1.171875, 1, 2.730469, 0 } },
   { "NIKON", "COOLPIX P330", CoolWhiteFluorescent, 0, { 1.867188, 1, 2.421875, 0 } },
@@ -3100,24 +3746,24 @@ const wb_data wb_preset[] = {
   { "NIKON", "D100", Shade, 2,			{ 2.750000, 1, 1.519531, 0 } }, /*7100K*/
   { "NIKON", "D100", Shade, 3,			{ 2.667969, 1, 1.546875, 0 } }, /*6700K*/
 
-  /* D200 basic + fine tune WB presets */
+  { "NIKON", "D200", Incandescent, -3,		{ 1.234375, 1, 2.136719, 0 } },
   { "NIKON", "D200", Incandescent, -2,		{ 1.199219, 1, 2.238281, 0 } },
   { "NIKON", "D200", Incandescent, -1,		{ 1.183594, 1, 2.289063, 0 } },
-  { "NIKON", "D200", Incandescent, 0,		{ 1.148437, 1, 2.398438, 0 } },
+  { "NIKON", "D200", Incandescent, 0,		{ 1.148434, 1, 2.398438, 0 } },
   { "NIKON", "D200", Incandescent, 1,		{ 1.113281, 1, 2.519531, 0 } },
   { "NIKON", "D200", Incandescent, 2,		{ 1.074219, 1, 2.648438, 0 } },
   { "NIKON", "D200", Incandescent, 3,		{ 1.031250, 1, 2.804688, 0 } },
   { "NIKON", "D200", Fluorescent, -3,		{ 2.273438, 1, 1.410156, 0 } },
   { "NIKON", "D200", Fluorescent, -2,		{ 1.933594, 1, 1.152344, 0 } },
   { "NIKON", "D200", Fluorescent, -1,		{ 1.675781, 1, 1.453125, 0 } },
-  { "NIKON", "D200", Fluorescent, 0,		{ 1.664062, 1, 2.148437, 0 } },
-  { "NIKON", "D200", Fluorescent, 1,		{ 1.335937, 1, 2.453125, 0 } },
+  { "NIKON", "D200", Fluorescent, 0,		{ 1.664063, 1, 2.148438, 0 } },
+  { "NIKON", "D200", Fluorescent, 1,		{ 1.335938, 1, 2.453125, 0 } },
   { "NIKON", "D200", Fluorescent, 2,		{ 1.140625, 1, 2.214844, 0 } },
   { "NIKON", "D200", Fluorescent, 3,		{ 1.035156, 1, 2.410156, 0 } },
-  { "NIKON", "D200", DirectSunlight, -3,	{ 1.863281, 1, 1.320312, 0 } },
+  { "NIKON", "D200", DirectSunlight, -3,	{ 1.863281, 1, 1.320313, 0 } },
   { "NIKON", "D200", DirectSunlight, -2,	{ 1.835938, 1, 1.355469, 0 } },
   { "NIKON", "D200", DirectSunlight, -1,	{ 1.820313, 1, 1.375000, 0 } },
-  { "NIKON", "D200", DirectSunlight, 0,		{ 1.804688, 1, 1.398437, 0 } },
+  { "NIKON", "D200", DirectSunlight, 0,		{ 1.804688, 1, 1.398438, 0 } },
   { "NIKON", "D200", DirectSunlight, 1,		{ 1.746094, 1, 1.425781, 0 } },
   { "NIKON", "D200", DirectSunlight, 2,		{ 1.714844, 1, 1.437500, 0 } },
   { "NIKON", "D200", DirectSunlight, 3,		{ 1.687500, 1, 1.449219, 0 } },
@@ -3127,13 +3773,13 @@ const wb_data wb_preset[] = {
   { "NIKON", "D200", Flash, 0,			{ 2.007813, 1, 1.171875, 0 } },
   { "NIKON", "D200", Flash, 1,			{ 1.984375, 1, 1.207031, 0 } },
   { "NIKON", "D200", Flash, 2,			{ 1.964844, 1, 1.214844, 0 } },
-  { "NIKON", "D200", Flash, 3,			{ 1.945312, 1, 1.222656, 0 } },
-  { "NIKON", "D200", Cloudy, -3,		{ 2.027344, 1, 1.210937, 0 } },
-  { "NIKON", "D200", Cloudy, -2,		{ 1.992187, 1, 1.226562, 0 } },
-  { "NIKON", "D200", Cloudy, -1,		{ 1.953125, 1, 1.242187, 0 } },
+  { "NIKON", "D200", Flash, 3,			{ 1.945313, 1, 1.222656, 0 } },
+  { "NIKON", "D200", Cloudy, -3,		{ 2.027344, 1, 1.210938, 0 } },
+  { "NIKON", "D200", Cloudy, -2,		{ 1.992188, 1, 1.226563, 0 } },
+  { "NIKON", "D200", Cloudy, -1,		{ 1.953125, 1, 1.242188, 0 } },
   { "NIKON", "D200", Cloudy, 0,			{ 1.917969, 1, 1.261719, 0 } },
   { "NIKON", "D200", Cloudy, 1,			{ 1.890625, 1, 1.285156, 0 } },
-  { "NIKON", "D200", Cloudy, 2,			{ 1.863281, 1, 1.320312, 0 } },
+  { "NIKON", "D200", Cloudy, 2,			{ 1.863281, 1, 1.320313, 0 } },
   { "NIKON", "D200", Cloudy, 3,			{ 1.835938, 1, 1.355469, 0 } },
   { "NIKON", "D200", Shade, -3,			{ 2.378906, 1, 1.066406, 0 } },
   { "NIKON", "D200", Shade, -2,			{ 2.332031, 1, 1.085938, 0 } },
@@ -3142,8 +3788,6 @@ const wb_data wb_preset[] = {
   { "NIKON", "D200", Shade, 1,			{ 2.167969, 1, 1.152344, 0 } },
   { "NIKON", "D200", Shade, 2,			{ 2.105469, 1, 1.175781, 0 } },
   { "NIKON", "D200", Shade, 3,			{ 2.046875, 1, 1.199219, 0 } },
-
-  /* D200 Kelvin presets */
   { "NIKON", "D200", "2500K", 0,		{ 1.000000, 1, 3.121094, 0 } },
   { "NIKON", "D200", "2550K", 0,		{ 1.000000, 1, 3.035156, 0 } },
   { "NIKON", "D200", "2650K", 0,		{ 1.011719, 1, 2.878906, 0 } },
@@ -3173,7 +3817,7 @@ const wb_data wb_preset[] = {
   { "NIKON", "D200", "7100K", 0,		{ 2.105469, 1, 1.175781, 0 } },
   { "NIKON", "D200", "7700K", 0,		{ 2.191406, 1, 1.144531, 0 } },
   { "NIKON", "D200", "8300K", 0,		{ 2.277344, 1, 1.109375, 0 } },
-  { "NIKON", "D200", "9300K", 0,		{ 2.367188, 1, 1.070313, 0 } },
+  { "NIKON", "D200", "9100K", 0,		{ 2.367188, 1, 1.070313, 0 } },
   { "NIKON", "D200", "10000K", 0,		{ 2.453125, 1, 1.035156, 0 } },
 
   { "NIKON", "D300", Incandescent, -6,		{ 1.097656, 1, 1.898438, 0 } },
@@ -3578,13 +4222,19 @@ const wb_data wb_preset[] = {
   { "NIKON", "D800E", "2700K", 0,		{ 1.179688, 1, 2.488281, 0 } },
   { "NIKON", "D800E", "5000K", 0,		{ 1.929688, 1, 1.417969, 0 } },
 
-  /* D810 with firmware C: 1.01 L: 2.005 */
+  /* D810 with firmware C: 1.10 L: 2.009 */
   { "NIKON", "D810", DirectSunlight, 0,		{ 1.953125, 1, 1.335938, 0 } },
   { "NIKON", "D810", Flash, 0,			{ 2.183594, 1, 1.171875, 0 } },
   { "NIKON", "D810", Cloudy, 0,			{ 2.089844, 1, 1.210938, 0 } },
   { "NIKON", "D810", Shade, 0,			{ 2.410156, 1, 1.089844, 0 } },
   { "NIKON", "D810", Incandescent, 0,		{ 1.253906, 1, 2.136719, 0 } },
-  { "NIKON", "D810", CoolWhiteFluorescent, 0,	{ 1.789063, 1, 1.968750, 0 } },
+  { "NIKON", "D810", SodiumVaporFluorescent, 0,	{ 1.164062, 1, 2.320312, 0 } },
+  { "NIKON", "D810", WhiteFluorescent, 0,	{ 1.445312, 1, 2.210938, 0 } },
+  { "NIKON", "D810", WarmWhiteFluorescent, 0,	{ 1.253906, 1, 1.917969, 0 } },
+  { "NIKON", "D810", CoolWhiteFluorescent, 0,	{ 1.789062, 1, 1.968750, 0 } },
+  { "NIKON", "D810", DayWhiteFluorescent, 0,	{ 1.820312, 1, 1.355469, 0 } },
+  { "NIKON", "D810", DaylightFluorescent, 0,	{ 2.074219, 1, 1.093750, 0 } },
+  { "NIKON", "D810", HighTempMercuryVaporFluorescent, 0, { 2.414062, 1, 1.320312, 0 } },
 
   { "NIKON", "D40", Incandescent, -3,		{ 1.492188, 1, 2.164063, 0 } },
   { "NIKON", "D40", Incandescent, -2,		{ 1.437500, 1, 2.367188, 0 } },
@@ -4086,7 +4736,7 @@ const wb_data wb_preset[] = {
   { "NIKON", "D5100", HighTempMercuryVaporFluorescent, 5, { 2.375000, 1, 1.511719, 0 } },
   { "NIKON", "D5100", HighTempMercuryVaporFluorescent, 6, { 2.375000, 1, 1.511719, 0 } },
 
-  /* Nikon D5200 firmware version 1.01 */
+  /* NIKON D5200 firmware version 1.01 */
   { "NIKON", "D5200", DirectSunlight, 0,	{ 2.386719, 1, 1.597656, 0 } },
   { "NIKON", "D5200", Flash, 0,			{ 2.753906, 1, 1.371094, 0 } },
   { "NIKON", "D5200", Cloudy, 0,		{ 2.656250, 1, 1.453125, 0 } },
@@ -4101,6 +4751,19 @@ const wb_data wb_preset[] = {
   { "NIKON", "D5300", Incandescent, 0,		{ 1.312500, 1, 2.214844, 0 } },
   { "NIKON", "D5300", CoolWhiteFluorescent, 0,	{ 1.855469, 1, 2.023438, 0 } },
 
+  { "NIKON", "D5500", DirectSunlight, 0,	{ 2.050781, 1, 1.402344, 0 } },
+  { "NIKON", "D5500", Shade, 0,			{ 2.527344, 1, 1.144531, 0 } },
+  { "NIKON", "D5500", Cloudy, 0,		{ 2.191406, 1, 1.281250, 0 } },
+  { "NIKON", "D5500", Incandescent, 0,		{ 1.308594, 1, 2.214844, 0 } },
+  { "NIKON", "D5500", WarmWhiteFluorescent, 0,	{ 1.289062, 1, 1.984375, 0 } },
+  { "NIKON", "D5500", CoolWhiteFluorescent, 0,	{ 1.863281, 1, 2.046875, 0 } },
+  { "NIKON", "D5500", DayWhiteFluorescent, 0,	{ 1.890625, 1, 1.406250, 0 } },
+  { "NIKON", "D5500", DaylightFluorescent, 0,	{ 2.148438, 1, 1.140625, 0 } },
+  { "NIKON", "D5500", WhiteFluorescent, 0,	{ 1.511719, 1, 2.332031, 0 } },
+  { "NIKON", "D5500", HighTempMercuryVaporFluorescent, 0, { 2.519531, 1, 1.378906, 0 } },
+  { "NIKON", "D5500", SodiumVaporFluorescent, 0, { 1.210938, 1, 2.437500, 0 } },
+  { "NIKON", "D5500", Flash, 0,			{ 2.285156, 1, 1.226562, 0 } },
+
   { "NIKON", "D7000", DirectSunlight, -6,	{ 2.199219, 1, 1.242187, 0 } },
   { "NIKON", "D7000", DirectSunlight, 0,	{ 2.027344, 1, 1.390625, 0 } },
   { "NIKON", "D7000", DirectSunlight, 6,	{ 1.847656, 1, 1.542969, 0 } },
@@ -4138,18 +4801,163 @@ const wb_data wb_preset[] = {
   { "NIKON", "D7000", HighTempMercuryVaporFluorescent, 0, { 2.484375, 1, 1.367188, 0 } },
   { "NIKON", "D7000", HighTempMercuryVaporFluorescent, 6, { 2.351563, 1, 1.539063, 0 } },
 
+  /* NIKON D7100 / Firmware C 1.03 / L 2.008 */
+  { "NIKON", "D7100", DirectSunlight, -6,	{ 2.675781, 1, 1.425781, 0 } },
+  { "NIKON", "D7100", DirectSunlight, -5,	{ 2.628906, 1, 1.449219, 0 } },
+  { "NIKON", "D7100", DirectSunlight, -4,	{ 2.582031, 1, 1.476563, 0 } },
+  { "NIKON", "D7100", DirectSunlight, -3,	{ 2.535156, 1, 1.503906, 0 } },
+  { "NIKON", "D7100", DirectSunlight, -2,	{ 2.492188, 1, 1.535156, 0 } },
+  { "NIKON", "D7100", DirectSunlight, -1,	{ 2.441406, 1, 1.566406, 0 } },
   { "NIKON", "D7100", DirectSunlight, 0,	{ 2.386719, 1, 1.597656, 0 } },
+  { "NIKON", "D7100", DirectSunlight, 1,	{ 2.351563, 1, 1.632813, 0 } },
+  { "NIKON", "D7100", DirectSunlight, 2,	{ 2.312500, 1, 1.671875, 0 } },
+  { "NIKON", "D7100", DirectSunlight, 3,	{ 2.273438, 1, 1.703125, 0 } },
+  { "NIKON", "D7100", DirectSunlight, 4,	{ 2.230469, 1, 1.734375, 0 } },
+  { "NIKON", "D7100", DirectSunlight, 5,	{ 2.187500, 1, 1.761719, 0 } },
+  { "NIKON", "D7100", DirectSunlight, 6,	{ 2.144531, 1, 1.789063, 0 } },
+  { "NIKON", "D7100", Flash, -6,		{ 3.132813, 1, 1.281250, 0 } },
+  { "NIKON", "D7100", Flash, -5,		{ 3.050781, 1, 1.296875, 0 } },
+  { "NIKON", "D7100", Flash, -4,		{ 2.976563, 1, 1.312500, 0 } },
+  { "NIKON", "D7100", Flash, -3,		{ 2.914063, 1, 1.328125, 0 } },
+  { "NIKON", "D7100", Flash, -2,		{ 2.855469, 1, 1.343750, 0 } },
+  { "NIKON", "D7100", Flash, -1,		{ 2.800781, 1, 1.355469, 0 } },
   { "NIKON", "D7100", Flash, 0,			{ 2.753906, 1, 1.371094, 0 } },
+  { "NIKON", "D7100", Flash, 1,			{ 2.710938, 1, 1.386719, 0 } },
+  { "NIKON", "D7100", Flash, 2,			{ 2.671875, 1, 1.406250, 0 } },
+  { "NIKON", "D7100", Flash, 3,			{ 2.628906, 1, 1.425781, 0 } },
+  { "NIKON", "D7100", Flash, 4,			{ 2.585938, 1, 1.449219, 0 } },
+  { "NIKON", "D7100", Flash, 5,			{ 2.539063, 1, 1.472656, 0 } },
+  { "NIKON", "D7100", Flash, 6,			{ 2.488281, 1, 1.500000, 0 } },
+  { "NIKON", "D7100", Cloudy, -6,		{ 2.972656, 1, 1.328125, 0 } },
+  { "NIKON", "D7100", Cloudy, -5,		{ 2.902344, 1, 1.347656, 0 } },
+  { "NIKON", "D7100", Cloudy, -4,		{ 2.839844, 1, 1.363281, 0 } },
+  { "NIKON", "D7100", Cloudy, -3,		{ 2.781250, 1, 1.382813, 0 } },
+  { "NIKON", "D7100", Cloudy, -2,		{ 2.734375, 1, 1.402344, 0 } },
+  { "NIKON", "D7100", Cloudy, -1,		{ 2.695313, 1, 1.425781, 0 } },
   { "NIKON", "D7100", Cloudy, 0,		{ 2.656250, 1, 1.453125, 0 } },
+  { "NIKON", "D7100", Cloudy, 1,		{ 2.597656, 1, 1.476563, 0 } },
+  { "NIKON", "D7100", Cloudy, 2,		{ 2.542969, 1, 1.507813, 0 } },
+  { "NIKON", "D7100", Cloudy, 3,		{ 2.492188, 1, 1.535156, 0 } },
+  { "NIKON", "D7100", Cloudy, 4,		{ 2.445313, 1, 1.566406, 0 } },
+  { "NIKON", "D7100", Cloudy, 5,		{ 2.398438, 1, 1.601563, 0 } },
+  { "NIKON", "D7100", Cloudy, 6,		{ 2.351563, 1, 1.632813, 0 } },
+  { "NIKON", "D7100", Shade, -6,		{ 3.644531, 1, 1.148438, 0 } },
+  { "NIKON", "D7100", Shade, -5,		{ 3.554688, 1, 1.183594, 0 } },
+  { "NIKON", "D7100", Shade, -4,		{ 3.472656, 1, 1.214844, 0 } },
+  { "NIKON", "D7100", Shade, -3,		{ 3.386719, 1, 1.234375, 0 } },
+  { "NIKON", "D7100", Shade, -2,		{ 3.308594, 1, 1.257813, 0 } },
+  { "NIKON", "D7100", Shade, -1,		{ 3.242188, 1, 1.277344, 0 } },
   { "NIKON", "D7100", Shade, 0,			{ 3.183594, 1, 1.292969, 0 } },
+  { "NIKON", "D7100", Shade, 1,			{ 3.085938, 1, 1.308594, 0 } },
+  { "NIKON", "D7100", Shade, 2,			{ 2.992188, 1, 1.324219, 0 } },
+  { "NIKON", "D7100", Shade, 3,			{ 2.925781, 1, 1.339844, 0 } },
+  { "NIKON", "D7100", Shade, 4,			{ 2.859375, 1, 1.355469, 0 } },
+  { "NIKON", "D7100", Shade, 5,			{ 2.796875, 1, 1.371094, 0 } },
+  { "NIKON", "D7100", Shade, 6,			{ 2.746094, 1, 1.394531, 0 } },
+  { "NIKON", "D7100", Incandescent, -6,		{ 1.589844, 1, 2.371094, 0 } },
+  { "NIKON", "D7100", Incandescent, -5,		{ 1.562500, 1, 2.417969, 0 } },
+  { "NIKON", "D7100", Incandescent, -4,		{ 1.542969, 1, 2.468750, 0 } },
+  { "NIKON", "D7100", Incandescent, -3,		{ 1.519531, 1, 2.519531, 0 } },
+  { "NIKON", "D7100", Incandescent, -2,		{ 1.492188, 1, 2.566406, 0 } },
+  { "NIKON", "D7100", Incandescent, -1,		{ 1.468750, 1, 2.617188, 0 } },
   { "NIKON", "D7100", Incandescent, 0,		{ 1.445313, 1, 2.667969, 0 } },
+  { "NIKON", "D7100", Incandescent, 1,		{ 1.425781, 1, 2.718750, 0 } },
+  { "NIKON", "D7100", Incandescent, 2,		{ 1.410156, 1, 2.769531, 0 } },
+  { "NIKON", "D7100", Incandescent, 3,		{ 1.390625, 1, 2.820313, 0 } },
+  { "NIKON", "D7100", Incandescent, 4,		{ 1.371094, 1, 2.875000, 0 } },
+  { "NIKON", "D7100", Incandescent, 5,		{ 1.355469, 1, 2.925781, 0 } },
+  { "NIKON", "D7100", Incandescent, 6,		{ 1.335938, 1, 2.980469, 0 } },
+  { "NIKON", "D7100", SodiumVaporFluorescent, -6, { 1.488281, 1, 2.589844, 0 } },
+  { "NIKON", "D7100", SodiumVaporFluorescent, -5, { 1.457031, 1, 2.644531, 0 } },
+  { "NIKON", "D7100", SodiumVaporFluorescent, -4, { 1.425781, 1, 2.695313, 0 } },
+  { "NIKON", "D7100", SodiumVaporFluorescent, -3, { 1.398438, 1, 2.746094, 0 } },
+  { "NIKON", "D7100", SodiumVaporFluorescent, -2, { 1.375000, 1, 2.792969, 0 } },
+  { "NIKON", "D7100", SodiumVaporFluorescent, -1, { 1.355469, 1, 2.847656, 0 } },
   { "NIKON", "D7100", SodiumVaporFluorescent, 0, { 1.332031, 1, 2.894531, 0 } },
+  { "NIKON", "D7100", SodiumVaporFluorescent, 1, { 1.312500, 1, 2.949219, 0 } },
+  { "NIKON", "D7100", SodiumVaporFluorescent, 2, { 1.296875, 1, 3.000000, 0 } },
+  { "NIKON", "D7100", SodiumVaporFluorescent, 3, { 1.281250, 1, 3.058594, 0 } },
+  { "NIKON", "D7100", SodiumVaporFluorescent, 4, { 1.261719, 1, 3.113281, 0 } },
+  { "NIKON", "D7100", SodiumVaporFluorescent, 5, { 1.250000, 1, 3.179688, 0 } },
+  { "NIKON", "D7100", SodiumVaporFluorescent, 6, { 1.234375, 1, 3.246094, 0 } },
+  { "NIKON", "D7100", WarmWhiteFluorescent, -6,	{ 1.621094, 1, 2.281250, 0 } },
+  { "NIKON", "D7100", WarmWhiteFluorescent, -5,	{ 1.597656, 1, 2.304688, 0 } },
+  { "NIKON", "D7100", WarmWhiteFluorescent, -4,	{ 1.574219, 1, 2.328125, 0 } },
+  { "NIKON", "D7100", WarmWhiteFluorescent, -3,	{ 1.546875, 1, 2.351563, 0 } },
+  { "NIKON", "D7100", WarmWhiteFluorescent, -2,	{ 1.527344, 1, 2.378906, 0 } },
+  { "NIKON", "D7100", WarmWhiteFluorescent, -1,	{ 1.500000, 1, 2.398438, 0 } },
   { "NIKON", "D7100", WarmWhiteFluorescent, 0,	{ 1.480469, 1, 2.425781, 0 } },
+  { "NIKON", "D7100", WarmWhiteFluorescent, 1,	{ 1.460938, 1, 2.449219, 0 } },
+  { "NIKON", "D7100", WarmWhiteFluorescent, 2,	{ 1.441406, 1, 2.476563, 0 } },
+  { "NIKON", "D7100", WarmWhiteFluorescent, 3,	{ 1.421875, 1, 2.500000, 0 } },
+  { "NIKON", "D7100", WarmWhiteFluorescent, 4,	{ 1.402344, 1, 2.523438, 0 } },
+  { "NIKON", "D7100", WarmWhiteFluorescent, 5,	{ 1.382813, 1, 2.546875, 0 } },
+  { "NIKON", "D7100", WarmWhiteFluorescent, 6,	{ 1.363281, 1, 2.570313, 0 } },
+  { "NIKON", "D7100", WhiteFluorescent, -6,	{ 2.199219, 1, 2.437500, 0 } },
+  { "NIKON", "D7100", WhiteFluorescent, -5,	{ 2.128906, 1, 2.492188, 0 } },
+  { "NIKON", "D7100", WhiteFluorescent, -4,	{ 2.054688, 1, 2.546875, 0 } },
+  { "NIKON", "D7100", WhiteFluorescent, -3,	{ 1.980469, 1, 2.605469, 0 } },
+  { "NIKON", "D7100", WhiteFluorescent, -2,	{ 1.902344, 1, 2.660156, 0 } },
+  { "NIKON", "D7100", WhiteFluorescent, -1,	{ 1.824219, 1, 2.718750, 0 } },
   { "NIKON", "D7100", WhiteFluorescent, 0,	{ 1.746094, 1, 2.777344, 0 } },
+  { "NIKON", "D7100", WhiteFluorescent, 1,	{ 1.671875, 1, 2.839844, 0 } },
+  { "NIKON", "D7100", WhiteFluorescent, 2,	{ 1.593750, 1, 2.902344, 0 } },
+  { "NIKON", "D7100", WhiteFluorescent, 3,	{ 1.515625, 1, 2.968750, 0 } },
+  { "NIKON", "D7100", WhiteFluorescent, 4,	{ 1.433594, 1, 3.031250, 0 } },
+  { "NIKON", "D7100", WhiteFluorescent, 5,	{ 1.347656, 1, 3.101563, 0 } },
+  { "NIKON", "D7100", WhiteFluorescent, 6,	{ 1.261719, 1, 3.167969, 0 } },
+  { "NIKON", "D7100", CoolWhiteFluorescent, -6,	{ 2.601563, 1, 2.136719, 0 } },
+  { "NIKON", "D7100", CoolWhiteFluorescent, -5,	{ 2.542969, 1, 2.179688, 0 } },
+  { "NIKON", "D7100", CoolWhiteFluorescent, -4,	{ 2.484375, 1, 2.226563, 0 } },
+  { "NIKON", "D7100", CoolWhiteFluorescent, -3,	{ 2.421875, 1, 2.273438, 0 } },
+  { "NIKON", "D7100", CoolWhiteFluorescent, -2,	{ 2.359375, 1, 2.320313, 0 } },
+  { "NIKON", "D7100", CoolWhiteFluorescent, -1,	{ 2.289063, 1, 2.367188, 0 } },
   { "NIKON", "D7100", CoolWhiteFluorescent, 0,	{ 2.222656, 1, 2.417969, 0 } },
+  { "NIKON", "D7100", CoolWhiteFluorescent, 1,	{ 2.156250, 1, 2.472656, 0 } },
+  { "NIKON", "D7100", CoolWhiteFluorescent, 2,	{ 2.082031, 1, 2.523438, 0 } },
+  { "NIKON", "D7100", CoolWhiteFluorescent, 3,	{ 2.007813, 1, 2.582031, 0 } },
+  { "NIKON", "D7100", CoolWhiteFluorescent, 4,	{ 1.933594, 1, 2.636719, 0 } },
+  { "NIKON", "D7100", CoolWhiteFluorescent, 5,	{ 1.851563, 1, 2.695313, 0 } },
+  { "NIKON", "D7100", CoolWhiteFluorescent, 6,	{ 1.773438, 1, 2.750000, 0 } },
+  { "NIKON", "D7100", DayWhiteFluorescent, -6,	{ 2.488281, 1, 1.433594, 0 } },
+  { "NIKON", "D7100", DayWhiteFluorescent, -5,	{ 2.445313, 1, 1.472656, 0 } },
+  { "NIKON", "D7100", DayWhiteFluorescent, -4,	{ 2.402344, 1, 1.507813, 0 } },
+  { "NIKON", "D7100", DayWhiteFluorescent, -3,	{ 2.363281, 1, 1.546875, 0 } },
+  { "NIKON", "D7100", DayWhiteFluorescent, -2,	{ 2.324219, 1, 1.582031, 0 } },
+  { "NIKON", "D7100", DayWhiteFluorescent, -1,	{ 2.285156, 1, 1.617188, 0 } },
   { "NIKON", "D7100", DayWhiteFluorescent, 0,	{ 2.242188, 1, 1.656250, 0 } },
+  { "NIKON", "D7100", DayWhiteFluorescent, 1,	{ 2.207031, 1, 1.691406, 0 } },
+  { "NIKON", "D7100", DayWhiteFluorescent, 2,	{ 2.175781, 1, 1.722656, 0 } },
+  { "NIKON", "D7100", DayWhiteFluorescent, 3,	{ 2.140625, 1, 1.757813, 0 } },
+  { "NIKON", "D7100", DayWhiteFluorescent, 4,	{ 2.105469, 1, 1.792969, 0 } },
+  { "NIKON", "D7100", DayWhiteFluorescent, 5,	{ 2.074219, 1, 1.824219, 0 } },
+  { "NIKON", "D7100", DayWhiteFluorescent, 6,	{ 2.039063, 1, 1.855469, 0 } },
+  { "NIKON", "D7100", DaylightFluorescent, -6,	{ 2.859375, 1, 1.062500, 0 } },
+  { "NIKON", "D7100", DaylightFluorescent, -5,	{ 2.820313, 1, 1.105469, 0 } },
+  { "NIKON", "D7100", DaylightFluorescent, -4,	{ 2.781250, 1, 1.144531, 0 } },
+  { "NIKON", "D7100", DaylightFluorescent, -3,	{ 2.742188, 1, 1.187500, 0 } },
+  { "NIKON", "D7100", DaylightFluorescent, -2,	{ 2.703125, 1, 1.226563, 0 } },
+  { "NIKON", "D7100", DaylightFluorescent, -1,	{ 2.664063, 1, 1.269531, 0 } },
   { "NIKON", "D7100", DaylightFluorescent, 0,	{ 2.628906, 1, 1.308594, 0 } },
+  { "NIKON", "D7100", DaylightFluorescent, 1,	{ 2.582031, 1, 1.347656, 0 } },
+  { "NIKON", "D7100", DaylightFluorescent, 2,	{ 2.539063, 1, 1.386719, 0 } },
+  { "NIKON", "D7100", DaylightFluorescent, 3,	{ 2.496094, 1, 1.425781, 0 } },
+  { "NIKON", "D7100", DaylightFluorescent, 4,	{ 2.453125, 1, 1.464844, 0 } },
+  { "NIKON", "D7100", DaylightFluorescent, 5,	{ 2.410156, 1, 1.500000, 0 } },
+  { "NIKON", "D7100", DaylightFluorescent, 6,	{ 2.367188, 1, 1.539063, 0 } },
+  { "NIKON", "D7100", HighTempMercuryVaporFluorescent, -6, { 3.312500, 1, 1.417969, 0 } },
+  { "NIKON", "D7100", HighTempMercuryVaporFluorescent, -5, { 3.296875, 1, 1.441406, 0 } },
+  { "NIKON", "D7100", HighTempMercuryVaporFluorescent, -4, { 3.277344, 1, 1.468750, 0 } },
+  { "NIKON", "D7100", HighTempMercuryVaporFluorescent, -3, { 3.257813, 1, 1.496094, 0 } },
+  { "NIKON", "D7100", HighTempMercuryVaporFluorescent, -2, { 3.234375, 1, 1.527344, 0 } },
+  { "NIKON", "D7100", HighTempMercuryVaporFluorescent, -1, { 3.214844, 1, 1.554688, 0 } },
   { "NIKON", "D7100", HighTempMercuryVaporFluorescent, 0, { 3.187500, 1, 1.585938, 0 } },
+  { "NIKON", "D7100", HighTempMercuryVaporFluorescent, 1, { 3.156250, 1, 1.617188, 0 } },
+  { "NIKON", "D7100", HighTempMercuryVaporFluorescent, 2, { 3.121094, 1, 1.652344, 0 } },
+  { "NIKON", "D7100", HighTempMercuryVaporFluorescent, 3, { 3.085938, 1, 1.687500, 0 } },
+  { "NIKON", "D7100", HighTempMercuryVaporFluorescent, 4, { 3.046875, 1, 1.722656, 0 } },
+  { "NIKON", "D7100", HighTempMercuryVaporFluorescent, 5, { 3.007813, 1, 1.761719, 0 } },
+  { "NIKON", "D7100", HighTempMercuryVaporFluorescent, 6, { 2.968750, 1, 1.796875, 0 } },
   { "NIKON", "D7100", "5000K", 0,		{ 2.332031, 1, 1.652344, 0 } },
 
   // Firmware C 1.00 / L 2.008
@@ -4379,7 +5187,7 @@ const wb_data wb_preset[] = {
   { "OLYMPUS", "C5060WZ", Incandescent, 0,	{ 1, 1.153153, 3.662162, 0 } },
   { "OLYMPUS", "C5060WZ", FlashAuto, 0,		{ 1.850000, 1, 1.308044, 0 } },
 
-  // Olympus C8080WZ - firmware 757-78
+  // OLYMPUS C8080WZ - firmware 757-78
   { "OLYMPUS", "C8080WZ", Shade, -7,		{ 1.515625, 1, 1.773438, 0 } },
   { "OLYMPUS", "C8080WZ", Shade, -6,		{ 1.671875, 1, 1.691406, 0 } },
   { "OLYMPUS", "C8080WZ", Shade, -5,		{ 1.832031, 1, 1.605469, 0 } },
@@ -5162,6 +5970,29 @@ const wb_data wb_preset[] = {
   { "OLYMPUS", "E-M1", Underwater, 0,		{ 1.3984, 1, 2.2813, 0 } },
   { "OLYMPUS", "E-M1", Flash, 0,		{ 2.3437, 1, 1.4219, 0 } },
 
+  /* -7/+7 fine tuning is -7/+7 in amber-blue and zero in green-magenta */
+  { "OLYMPUS", "E-M1MarkII", Daylight, -7,		{ 1.523438, 1.000000, 2.335938, 1.000000} },
+  { "OLYMPUS", "E-M1MarkII", Daylight, 0,		{ 1.789062, 1.000000, 2.062500,   1.000000} },
+  { "OLYMPUS", "E-M1MarkII", Daylight, 7,		{ 2.015625, 1.000000, 1.765625, 1.000000} },
+  { "OLYMPUS", "E-M1MarkII", Shade, -7,		{ 1.781250, 1.000000, 1.828125, 1.000000} },
+  { "OLYMPUS", "E-M1MarkII", Shade, 0,		{ 2.078125, 1.000000, 1.609375, 1.000000} },
+  { "OLYMPUS", "E-M1MarkII", Shade, 7,		{ 2.367187, 1.000000, 1.382812, 1.000000} },
+  { "OLYMPUS", "E-M1MarkII", Cloudy, -7,		{ 1.640625, 1.000000, 2.125000, 1.000000} },
+  { "OLYMPUS", "E-M1MarkII", Cloudy, 0,		{ 1.914063, 1.000000, 1.867188, 1.000000} },
+  { "OLYMPUS", "E-M1MarkII", Cloudy, 7,		{ 2.179688, 1.000000, 1.601562, 1.000000} },
+  { "OLYMPUS", "E-M1MarkII", Incandescent, -7,		{ 1.000000, 1.057851, 4.471074, 1.000000} },
+  { "OLYMPUS", "E-M1MarkII", Incandescent, 0,		{ 1.101563, 1.000000, 3.710938, 1.000000} },
+  { "OLYMPUS", "E-M1MarkII", Incandescent, 7,		{ 1.250000, 1.000000, 3.187500, 1.000000} },
+  { "OLYMPUS", "E-M1MarkII", Fluorescent, -7,		{ 1.484375, 1.000000, 3.359375, 1.000000} },
+  { "OLYMPUS", "E-M1MarkII", Fluorescent, 0,		{ 1.726562, 1.000000, 2.953125, 1.000000} },
+  { "OLYMPUS", "E-M1MarkII", Fluorescent, 7,		{ 1.960938, 1.000000, 2.539062, 1.000000} },
+  { "OLYMPUS", "E-M1MarkII", Underwater, -7,		{ 1.195313, 1.000000, 3.031250, 1.000000} },
+  { "OLYMPUS", "E-M1MarkII", Underwater, 0,		{ 1.437500, 1.000000, 2.578125, 1.000000} },
+  { "OLYMPUS", "E-M1MarkII", Underwater, 7,		{ 1.609375, 1.000000, 2.289063, 1.000000} },
+  { "OLYMPUS", "E-M1MarkII", Flash, -7,		{ 1.726562, 1.000000, 1.992187, 1.000000} },
+  { "OLYMPUS", "E-M1MarkII", Flash, 0,		{ 2.007813, 1.000000, 1.750000, 1.000000} },
+  { "OLYMPUS", "E-M1MarkII", Flash, 7,		{ 2.281250, 1.000000, 1.500000, 1.000000} },
+
   /* -7/+7 fine tuning is -7/+7 in amber-blue and zero in green-magenta */
   { "OLYMPUS", "E-M5", Daylight, -7,		{ 1.8047, 1, 2.0547, 0 } },
   { "OLYMPUS", "E-M5", Daylight, 0,		{ 2.1016, 1, 1.8047, 0 } },
@@ -5273,6 +6104,14 @@ const wb_data wb_preset[] = {
   { "OLYMPUS", "E-M10", "13000K", 0,		{ 2.437500, 1, 1.000000, 0 } },
   { "OLYMPUS", "E-M10", "14000K", 0,		{ 2.552845, 1.040650, 1, 0 } },
 
+  { "OLYMPUS", "E-M10MarkII", Daylight, 0,	{ 1.851563, 1, 1.835938, 0 } },
+  { "OLYMPUS", "E-M10MarkII", Shade, 0,		{ 2.171875, 1, 1.429688, 0 } },
+  { "OLYMPUS", "E-M10MarkII", Cloudy, 0,	{ 1.992188, 1, 1.664063, 0 } },
+  { "OLYMPUS", "E-M10MarkII", Tungsten, 0,	{ 1.140625, 1, 3.429688, 0 } },
+  { "OLYMPUS", "E-M10MarkII", Fluorescent, 0,	{ 1.875000, 1, 2.695313, 0 } },
+  { "OLYMPUS", "E-M10MarkII", Underwater, 0,	{ 1.890625, 1, 2.257813, 0 } },
+  { "OLYMPUS", "E-M10MarkII", Flash, 0,		{ 2.148438, 1, 1.601563, 0 } },
+
   { "OLYMPUS", "E-P1", Daylight, 0,		{ 1.835938, 1, 1.351563, 0 } },
   { "OLYMPUS", "E-P1", Shade, 0,		{ 2.195313, 1, 1.046875, 0 } },
   { "OLYMPUS", "E-P1", Cloudy, 0,		{ 2.031250, 1, 1.203125, 0 } },
@@ -5887,6 +6726,14 @@ const wb_data wb_preset[] = {
   { "OLYMPUS", "E-PM2", "13000K", 0,		{ 2.593750, 1, 1.093750, 0 } },
   { "OLYMPUS", "E-PM2", "14000K", 0,		{ 2.625000, 1, 1.062500, 0 } },
 
+  { "OLYMPUS", "PEN-F", Daylight, 0,		{ 1.820312, 1, 1.804688, 0 } },
+  { "OLYMPUS", "PEN-F", Shade, 0,		{ 2.132812, 1, 1.414062, 0 } },
+  { "OLYMPUS", "PEN-F", Cloudy, 0,		{ 1.960938, 1, 1.617188, 0 } },
+  { "OLYMPUS", "PEN-F", Tungsten, 0,		{ 1.156250, 1, 3.265625, 0 } },
+  { "OLYMPUS", "PEN-F", CoolWhiteFluorescent, 0, { 1.765625, 1, 2.578125, 0 } },
+  { "OLYMPUS", "PEN-F", Underwater, 0,		{ 1.789062, 1, 1.890625, 0 } },
+  { "OLYMPUS", "PEN-F", Flash, 0,		{ 2.070312, 1, 1.539062, 0 } },
+
   { "OLYMPUS", "SP500UZ", Daylight, -7,		{ 1.136719, 1, 2.359375, 0 } },
   { "OLYMPUS", "SP500UZ", Daylight, 0,		{ 1.960937, 1, 1.585937, 0 } },
   { "OLYMPUS", "SP500UZ", Daylight, 7,		{ 3.927660, 1.089362, 1, 0 } },
@@ -5910,6 +6757,13 @@ const wb_data wb_preset[] = {
   { "OLYMPUS", "SP510UZ", NeutralFluorescent, 0, { 1.644531, 1, 1.843750, 0 } },
   { "OLYMPUS", "SP510UZ", DaylightFluorescent, 0, { 1.628906, 1, 2.210938, 0 } },
 
+  /* Firmware version 1.002 */
+  { "OLYMPUS", "TG-4", Daylight, 0,		{ 1.703125, 1, 1.695313, 0 } },
+  { "OLYMPUS", "TG-4", Cloudy, 0,		{ 1.812500, 1, 1.562500, 0 } },
+  { "OLYMPUS", "TG-4", Incandescent, 0,		{ 1.070313, 1, 2.765625, 0 } },
+  { "OLYMPUS", "TG-4", Fluorescent, 0,		{ 1.601563, 1, 2.156250, 0 } },
+  { "OLYMPUS", "TG-4", Underwater, 0,		{ 1.312500, 1, 2.257813, 0 } },
+
   /* Firmware version 1.5 */
   /* -7/+7 fine tuning is -7/+7 in amber-blue and zero in green-magenta */
   { "OLYMPUS", "XZ-1", Daylight, -7,		{ 1.687500, 1, 2.054688, 0 } },
@@ -6068,6 +6922,194 @@ const wb_data wb_preset[] = {
   { "Panasonic", "DMC-FZ200", "9900K", 0,	{ 2.550943, 1, 1.373585, 0 } },
   { "Panasonic", "DMC-FZ200", "10000K", 0,	{ 2.562264, 1, 1.366038, 0 } },
 
+  /* Firmware version 2.2 */
+  /* -9/+9 fine tuning is -9/+9 in blue-amber and zero in magenta-green */
+  { "Panasonic", "DMC-FZ300", Daylight, -9,	{ 1.800781, 1, 2.355469, 0 } },
+  { "Panasonic", "DMC-FZ300", Daylight, 0,	{ 2.046875, 1, 1.972656, 0 } },
+  { "Panasonic", "DMC-FZ300", Daylight, 9,	{ 2.382813, 1, 1.742188, 0 } },
+  { "Panasonic", "DMC-FZ300", Cloudy, -9,	{ 1.937500, 1, 2.179688, 0 } },
+  { "Panasonic", "DMC-FZ300", Cloudy, 0,	{ 2.203125, 1, 1.824219, 0 } },
+  { "Panasonic", "DMC-FZ300", Cloudy, 9,	{ 2.566406, 1, 1.609375, 0 } },
+  { "Panasonic", "DMC-FZ300", Shade, -9,	{ 2.042969, 1, 2.066406, 0 } },
+  { "Panasonic", "DMC-FZ300", Shade, 0,		{ 2.324219, 1, 1.730469, 0 } },
+  { "Panasonic", "DMC-FZ300", Shade, 9,		{ 2.703125, 1, 1.527344, 0 } },
+  { "Panasonic", "DMC-FZ300", Incandescent, -9,	{ 1.250000, 1, 3.355469, 0 } },
+  { "Panasonic", "DMC-FZ300", Incandescent, 0,	{ 1.425781, 1, 2.808594, 0 } },
+  { "Panasonic", "DMC-FZ300", Incandescent, 9,	{ 1.656250, 1, 2.476563, 0 } },
+  { "Panasonic", "DMC-FZ300", Flash, -9,	{ 1.937500, 1, 2.246094, 0 } },
+  { "Panasonic", "DMC-FZ300", Flash, 0,		{ 2.203125, 1, 1.878906, 0 } },
+  { "Panasonic", "DMC-FZ300", Flash, 9,		{ 2.566406, 1, 1.656250, 0 } },
+  { "Panasonic", "DMC-FZ300", "2500K", 0,	{ 1.234375, 1, 3.289063, 0 } },
+  { "Panasonic", "DMC-FZ300", "2600K", 0,	{ 1.269531, 1, 3.214844, 0 } },
+  { "Panasonic", "DMC-FZ300", "2700K", 0,	{ 1.300781, 1, 3.140625, 0 } },
+  { "Panasonic", "DMC-FZ300", "2800K", 0,	{ 1.335938, 1, 3.066406, 0 } },
+  { "Panasonic", "DMC-FZ300", "2900K", 0,	{ 1.371094, 1, 2.980469, 0 } },
+  { "Panasonic", "DMC-FZ300", "3000K", 0,	{ 1.410156, 1, 2.890625, 0 } },
+  { "Panasonic", "DMC-FZ300", "3100K", 0,	{ 1.453125, 1, 2.785156, 0 } },
+  { "Panasonic", "DMC-FZ300", "3200K", 0,	{ 1.500000, 1, 2.679688, 0 } },
+  { "Panasonic", "DMC-FZ300", "3300K", 0,	{ 1.542969, 1, 2.574219, 0 } },
+  { "Panasonic", "DMC-FZ300", "3400K", 0,	{ 1.589844, 1, 2.472656, 0 } },
+  { "Panasonic", "DMC-FZ300", "3500K", 0,	{ 1.617188, 1, 2.441406, 0 } },
+  { "Panasonic", "DMC-FZ300", "3600K", 0,	{ 1.644531, 1, 2.410156, 0 } },
+  { "Panasonic", "DMC-FZ300", "3700K", 0,	{ 1.667969, 1, 2.382813, 0 } },
+  { "Panasonic", "DMC-FZ300", "3800K", 0,	{ 1.691406, 1, 2.355469, 0 } },
+  { "Panasonic", "DMC-FZ300", "3900K", 0,	{ 1.714844, 1, 2.328125, 0 } },
+  { "Panasonic", "DMC-FZ300", "4000K", 0,	{ 1.734375, 1, 2.300781, 0 } },
+  { "Panasonic", "DMC-FZ300", "4100K", 0,	{ 1.753906, 1, 2.281250, 0 } },
+  { "Panasonic", "DMC-FZ300", "4200K", 0,	{ 1.773438, 1, 2.257813, 0 } },
+  { "Panasonic", "DMC-FZ300", "4300K", 0,	{ 1.792969, 1, 2.238281, 0 } },
+  { "Panasonic", "DMC-FZ300", "4400K", 0,	{ 1.812500, 1, 2.214844, 0 } },
+  { "Panasonic", "DMC-FZ300", "4500K", 0,	{ 1.832031, 1, 2.191406, 0 } },
+  { "Panasonic", "DMC-FZ300", "4600K", 0,	{ 1.843750, 1, 2.175781, 0 } },
+  { "Panasonic", "DMC-FZ300", "4700K", 0,	{ 1.859375, 1, 2.160156, 0 } },
+  { "Panasonic", "DMC-FZ300", "4800K", 0,	{ 1.875000, 1, 2.144531, 0 } },
+  { "Panasonic", "DMC-FZ300", "4900K", 0,	{ 1.890625, 1, 2.125000, 0 } },
+  { "Panasonic", "DMC-FZ300", "5000K", 0,	{ 1.906250, 1, 2.109375, 0 } },
+  { "Panasonic", "DMC-FZ300", "5100K", 0,	{ 1.933594, 1, 2.082031, 0 } },
+  { "Panasonic", "DMC-FZ300", "5200K", 0,	{ 1.960938, 1, 2.054688, 0 } },
+  { "Panasonic", "DMC-FZ300", "5300K", 0,	{ 1.988281, 1, 2.027344, 0 } },
+  { "Panasonic", "DMC-FZ300", "5400K", 0,	{ 2.019531, 1, 2.000000, 0 } },
+  { "Panasonic", "DMC-FZ300", "5500K", 0,	{ 2.046875, 1, 1.972656, 0 } },
+  { "Panasonic", "DMC-FZ300", "5600K", 0,	{ 2.066406, 1, 1.953125, 0 } },
+  { "Panasonic", "DMC-FZ300", "5700K", 0,	{ 2.089844, 1, 1.933594, 0 } },
+  { "Panasonic", "DMC-FZ300", "5800K", 0,	{ 2.109375, 1, 1.914063, 0 } },
+  { "Panasonic", "DMC-FZ300", "5900K", 0,	{ 2.128906, 1, 1.894531, 0 } },
+  { "Panasonic", "DMC-FZ300", "6000K", 0,	{ 2.152344, 1, 1.875000, 0 } },
+  { "Panasonic", "DMC-FZ300", "6100K", 0,	{ 2.167969, 1, 1.859375, 0 } },
+  { "Panasonic", "DMC-FZ300", "6200K", 0,	{ 2.187500, 1, 1.843750, 0 } },
+  { "Panasonic", "DMC-FZ300", "6300K", 0,	{ 2.203125, 1, 1.824219, 0 } },
+  { "Panasonic", "DMC-FZ300", "6400K", 0,	{ 2.218750, 1, 1.816406, 0 } },
+  { "Panasonic", "DMC-FZ300", "6500K", 0,	{ 2.230469, 1, 1.804688, 0 } },
+  { "Panasonic", "DMC-FZ300", "6600K", 0,	{ 2.242188, 1, 1.792969, 0 } },
+  { "Panasonic", "DMC-FZ300", "6700K", 0,	{ 2.253906, 1, 1.785156, 0 } },
+  { "Panasonic", "DMC-FZ300", "6800K", 0,	{ 2.265625, 1, 1.777344, 0 } },
+  { "Panasonic", "DMC-FZ300", "6900K", 0,	{ 2.277344, 1, 1.765625, 0 } },
+  { "Panasonic", "DMC-FZ300", "7000K", 0,	{ 2.292969, 1, 1.753906, 0 } },
+  { "Panasonic", "DMC-FZ300", "7100K", 0,	{ 2.300781, 1, 1.746094, 0 } },
+  { "Panasonic", "DMC-FZ300", "7200K", 0,	{ 2.312500, 1, 1.738281, 0 } },
+  { "Panasonic", "DMC-FZ300", "7300K", 0,	{ 2.324219, 1, 1.730469, 0 } },
+  { "Panasonic", "DMC-FZ300", "7400K", 0,	{ 2.335938, 1, 1.718750, 0 } },
+  { "Panasonic", "DMC-FZ300", "7500K", 0,	{ 2.347656, 1, 1.707031, 0 } },
+  { "Panasonic", "DMC-FZ300", "7600K", 0,	{ 2.359375, 1, 1.699219, 0 } },
+  { "Panasonic", "DMC-FZ300", "7700K", 0,	{ 2.371094, 1, 1.691406, 0 } },
+  { "Panasonic", "DMC-FZ300", "7800K", 0,	{ 2.382813, 1, 1.679688, 0 } },
+  { "Panasonic", "DMC-FZ300", "7900K", 0,	{ 2.394531, 1, 1.671875, 0 } },
+  { "Panasonic", "DMC-FZ300", "8000K", 0,	{ 2.410156, 1, 1.660156, 0 } },
+  { "Panasonic", "DMC-FZ300", "8100K", 0,	{ 2.417969, 1, 1.652344, 0 } },
+  { "Panasonic", "DMC-FZ300", "8200K", 0,	{ 2.429688, 1, 1.644531, 0 } },
+  { "Panasonic", "DMC-FZ300", "8300K", 0,	{ 2.441406, 1, 1.636719, 0 } },
+  { "Panasonic", "DMC-FZ300", "8400K", 0,	{ 2.453125, 1, 1.628906, 0 } },
+  { "Panasonic", "DMC-FZ300", "8500K", 0,	{ 2.464844, 1, 1.617188, 0 } },
+  { "Panasonic", "DMC-FZ300", "8600K", 0,	{ 2.472656, 1, 1.609375, 0 } },
+  { "Panasonic", "DMC-FZ300", "8700K", 0,	{ 2.480469, 1, 1.601563, 0 } },
+  { "Panasonic", "DMC-FZ300", "8800K", 0,	{ 2.492188, 1, 1.593750, 0 } },
+  { "Panasonic", "DMC-FZ300", "8900K", 0,	{ 2.500000, 1, 1.585938, 0 } },
+  { "Panasonic", "DMC-FZ300", "9000K", 0,	{ 2.511719, 1, 1.578125, 0 } },
+  { "Panasonic", "DMC-FZ300", "9100K", 0,	{ 2.519531, 1, 1.574219, 0 } },
+  { "Panasonic", "DMC-FZ300", "9200K", 0,	{ 2.527344, 1, 1.566406, 0 } },
+  { "Panasonic", "DMC-FZ300", "9300K", 0,	{ 2.535156, 1, 1.558594, 0 } },
+  { "Panasonic", "DMC-FZ300", "9400K", 0,	{ 2.542969, 1, 1.554688, 0 } },
+  { "Panasonic", "DMC-FZ300", "9500K", 0,	{ 2.550781, 1, 1.546875, 0 } },
+  { "Panasonic", "DMC-FZ300", "9600K", 0,	{ 2.558594, 1, 1.542969, 0 } },
+  { "Panasonic", "DMC-FZ300", "9700K", 0,	{ 2.566406, 1, 1.535156, 0 } },
+  { "Panasonic", "DMC-FZ300", "9800K", 0,	{ 2.574219, 1, 1.531250, 0 } },
+  { "Panasonic", "DMC-FZ300", "9900K", 0,	{ 2.582031, 1, 1.523438, 0 } },
+  { "Panasonic", "DMC-FZ300", "10000K", 0,	{ 2.589844, 1, 1.515625, 0 } },
+
+  /* Firmware version 2.2 */
+  /* -9/+9 fine tuning is -9/+9 in blue-amber and zero in magenta-green */
+  { "Panasonic", "DMC-FZ330", Daylight, -9,	{ 1.800781, 1, 2.355469, 0 } },
+  { "Panasonic", "DMC-FZ330", Daylight, 0,	{ 2.046875, 1, 1.972656, 0 } },
+  { "Panasonic", "DMC-FZ330", Daylight, 9,	{ 2.382813, 1, 1.742188, 0 } },
+  { "Panasonic", "DMC-FZ330", Cloudy, -9,	{ 1.937500, 1, 2.179688, 0 } },
+  { "Panasonic", "DMC-FZ330", Cloudy, 0,	{ 2.203125, 1, 1.824219, 0 } },
+  { "Panasonic", "DMC-FZ330", Cloudy, 9,	{ 2.566406, 1, 1.609375, 0 } },
+  { "Panasonic", "DMC-FZ330", Shade, -9,	{ 2.042969, 1, 2.066406, 0 } },
+  { "Panasonic", "DMC-FZ330", Shade, 0,		{ 2.324219, 1, 1.730469, 0 } },
+  { "Panasonic", "DMC-FZ330", Shade, 9,		{ 2.703125, 1, 1.527344, 0 } },
+  { "Panasonic", "DMC-FZ330", Incandescent, -9,	{ 1.250000, 1, 3.355469, 0 } },
+  { "Panasonic", "DMC-FZ330", Incandescent, 0,	{ 1.425781, 1, 2.808594, 0 } },
+  { "Panasonic", "DMC-FZ330", Incandescent, 9,	{ 1.656250, 1, 2.476563, 0 } },
+  { "Panasonic", "DMC-FZ330", Flash, -9,	{ 1.937500, 1, 2.246094, 0 } },
+  { "Panasonic", "DMC-FZ330", Flash, 0,		{ 2.203125, 1, 1.878906, 0 } },
+  { "Panasonic", "DMC-FZ330", Flash, 9,		{ 2.566406, 1, 1.656250, 0 } },
+  { "Panasonic", "DMC-FZ330", "2500K", 0,	{ 1.234375, 1, 3.289063, 0 } },
+  { "Panasonic", "DMC-FZ330", "2600K", 0,	{ 1.269531, 1, 3.214844, 0 } },
+  { "Panasonic", "DMC-FZ330", "2700K", 0,	{ 1.300781, 1, 3.140625, 0 } },
+  { "Panasonic", "DMC-FZ330", "2800K", 0,	{ 1.335938, 1, 3.066406, 0 } },
+  { "Panasonic", "DMC-FZ330", "2900K", 0,	{ 1.371094, 1, 2.980469, 0 } },
+  { "Panasonic", "DMC-FZ330", "3000K", 0,	{ 1.410156, 1, 2.890625, 0 } },
+  { "Panasonic", "DMC-FZ330", "3100K", 0,	{ 1.453125, 1, 2.785156, 0 } },
+  { "Panasonic", "DMC-FZ330", "3200K", 0,	{ 1.500000, 1, 2.679688, 0 } },
+  { "Panasonic", "DMC-FZ330", "3300K", 0,	{ 1.542969, 1, 2.574219, 0 } },
+  { "Panasonic", "DMC-FZ330", "3400K", 0,	{ 1.589844, 1, 2.472656, 0 } },
+  { "Panasonic", "DMC-FZ330", "3500K", 0,	{ 1.617188, 1, 2.441406, 0 } },
+  { "Panasonic", "DMC-FZ330", "3600K", 0,	{ 1.644531, 1, 2.410156, 0 } },
+  { "Panasonic", "DMC-FZ330", "3700K", 0,	{ 1.667969, 1, 2.382813, 0 } },
+  { "Panasonic", "DMC-FZ330", "3800K", 0,	{ 1.691406, 1, 2.355469, 0 } },
+  { "Panasonic", "DMC-FZ330", "3900K", 0,	{ 1.714844, 1, 2.328125, 0 } },
+  { "Panasonic", "DMC-FZ330", "4000K", 0,	{ 1.734375, 1, 2.300781, 0 } },
+  { "Panasonic", "DMC-FZ330", "4100K", 0,	{ 1.753906, 1, 2.281250, 0 } },
+  { "Panasonic", "DMC-FZ330", "4200K", 0,	{ 1.773438, 1, 2.257813, 0 } },
+  { "Panasonic", "DMC-FZ330", "4300K", 0,	{ 1.792969, 1, 2.238281, 0 } },
+  { "Panasonic", "DMC-FZ330", "4400K", 0,	{ 1.812500, 1, 2.214844, 0 } },
+  { "Panasonic", "DMC-FZ330", "4500K", 0,	{ 1.832031, 1, 2.191406, 0 } },
+  { "Panasonic", "DMC-FZ330", "4600K", 0,	{ 1.843750, 1, 2.175781, 0 } },
+  { "Panasonic", "DMC-FZ330", "4700K", 0,	{ 1.859375, 1, 2.160156, 0 } },
+  { "Panasonic", "DMC-FZ330", "4800K", 0,	{ 1.875000, 1, 2.144531, 0 } },
+  { "Panasonic", "DMC-FZ330", "4900K", 0,	{ 1.890625, 1, 2.125000, 0 } },
+  { "Panasonic", "DMC-FZ330", "5000K", 0,	{ 1.906250, 1, 2.109375, 0 } },
+  { "Panasonic", "DMC-FZ330", "5100K", 0,	{ 1.933594, 1, 2.082031, 0 } },
+  { "Panasonic", "DMC-FZ330", "5200K", 0,	{ 1.960938, 1, 2.054688, 0 } },
+  { "Panasonic", "DMC-FZ330", "5300K", 0,	{ 1.988281, 1, 2.027344, 0 } },
+  { "Panasonic", "DMC-FZ330", "5400K", 0,	{ 2.019531, 1, 2.000000, 0 } },
+  { "Panasonic", "DMC-FZ330", "5500K", 0,	{ 2.046875, 1, 1.972656, 0 } },
+  { "Panasonic", "DMC-FZ330", "5600K", 0,	{ 2.066406, 1, 1.953125, 0 } },
+  { "Panasonic", "DMC-FZ330", "5700K", 0,	{ 2.089844, 1, 1.933594, 0 } },
+  { "Panasonic", "DMC-FZ330", "5800K", 0,	{ 2.109375, 1, 1.914063, 0 } },
+  { "Panasonic", "DMC-FZ330", "5900K", 0,	{ 2.128906, 1, 1.894531, 0 } },
+  { "Panasonic", "DMC-FZ330", "6000K", 0,	{ 2.152344, 1, 1.875000, 0 } },
+  { "Panasonic", "DMC-FZ330", "6100K", 0,	{ 2.167969, 1, 1.859375, 0 } },
+  { "Panasonic", "DMC-FZ330", "6200K", 0,	{ 2.187500, 1, 1.843750, 0 } },
+  { "Panasonic", "DMC-FZ330", "6300K", 0,	{ 2.203125, 1, 1.824219, 0 } },
+  { "Panasonic", "DMC-FZ330", "6400K", 0,	{ 2.218750, 1, 1.816406, 0 } },
+  { "Panasonic", "DMC-FZ330", "6500K", 0,	{ 2.230469, 1, 1.804688, 0 } },
+  { "Panasonic", "DMC-FZ330", "6600K", 0,	{ 2.242188, 1, 1.792969, 0 } },
+  { "Panasonic", "DMC-FZ330", "6700K", 0,	{ 2.253906, 1, 1.785156, 0 } },
+  { "Panasonic", "DMC-FZ330", "6800K", 0,	{ 2.265625, 1, 1.777344, 0 } },
+  { "Panasonic", "DMC-FZ330", "6900K", 0,	{ 2.277344, 1, 1.765625, 0 } },
+  { "Panasonic", "DMC-FZ330", "7000K", 0,	{ 2.292969, 1, 1.753906, 0 } },
+  { "Panasonic", "DMC-FZ330", "7100K", 0,	{ 2.300781, 1, 1.746094, 0 } },
+  { "Panasonic", "DMC-FZ330", "7200K", 0,	{ 2.312500, 1, 1.738281, 0 } },
+  { "Panasonic", "DMC-FZ330", "7300K", 0,	{ 2.324219, 1, 1.730469, 0 } },
+  { "Panasonic", "DMC-FZ330", "7400K", 0,	{ 2.335938, 1, 1.718750, 0 } },
+  { "Panasonic", "DMC-FZ330", "7500K", 0,	{ 2.347656, 1, 1.707031, 0 } },
+  { "Panasonic", "DMC-FZ330", "7600K", 0,	{ 2.359375, 1, 1.699219, 0 } },
+  { "Panasonic", "DMC-FZ330", "7700K", 0,	{ 2.371094, 1, 1.691406, 0 } },
+  { "Panasonic", "DMC-FZ330", "7800K", 0,	{ 2.382813, 1, 1.679688, 0 } },
+  { "Panasonic", "DMC-FZ330", "7900K", 0,	{ 2.394531, 1, 1.671875, 0 } },
+  { "Panasonic", "DMC-FZ330", "8000K", 0,	{ 2.410156, 1, 1.660156, 0 } },
+  { "Panasonic", "DMC-FZ330", "8100K", 0,	{ 2.417969, 1, 1.652344, 0 } },
+  { "Panasonic", "DMC-FZ330", "8200K", 0,	{ 2.429688, 1, 1.644531, 0 } },
+  { "Panasonic", "DMC-FZ330", "8300K", 0,	{ 2.441406, 1, 1.636719, 0 } },
+  { "Panasonic", "DMC-FZ330", "8400K", 0,	{ 2.453125, 1, 1.628906, 0 } },
+  { "Panasonic", "DMC-FZ330", "8500K", 0,	{ 2.464844, 1, 1.617188, 0 } },
+  { "Panasonic", "DMC-FZ330", "8600K", 0,	{ 2.472656, 1, 1.609375, 0 } },
+  { "Panasonic", "DMC-FZ330", "8700K", 0,	{ 2.480469, 1, 1.601563, 0 } },
+  { "Panasonic", "DMC-FZ330", "8800K", 0,	{ 2.492188, 1, 1.593750, 0 } },
+  { "Panasonic", "DMC-FZ330", "8900K", 0,	{ 2.500000, 1, 1.585938, 0 } },
+  { "Panasonic", "DMC-FZ330", "9000K", 0,	{ 2.511719, 1, 1.578125, 0 } },
+  { "Panasonic", "DMC-FZ330", "9100K", 0,	{ 2.519531, 1, 1.574219, 0 } },
+  { "Panasonic", "DMC-FZ330", "9200K", 0,	{ 2.527344, 1, 1.566406, 0 } },
+  { "Panasonic", "DMC-FZ330", "9300K", 0,	{ 2.535156, 1, 1.558594, 0 } },
+  { "Panasonic", "DMC-FZ330", "9400K", 0,	{ 2.542969, 1, 1.554688, 0 } },
+  { "Panasonic", "DMC-FZ330", "9500K", 0,	{ 2.550781, 1, 1.546875, 0 } },
+  { "Panasonic", "DMC-FZ330", "9600K", 0,	{ 2.558594, 1, 1.542969, 0 } },
+  { "Panasonic", "DMC-FZ330", "9700K", 0,	{ 2.566406, 1, 1.535156, 0 } },
+  { "Panasonic", "DMC-FZ330", "9800K", 0,	{ 2.574219, 1, 1.531250, 0 } },
+  { "Panasonic", "DMC-FZ330", "9900K", 0,	{ 2.582031, 1, 1.523438, 0 } },
+  { "Panasonic", "DMC-FZ330", "10000K", 0,	{ 2.589844, 1, 1.515625, 0 } },
+
   // Panasonic DMC-FZ1000 Firmware 2.0.0
   { "Panasonic", "DMC-FZ1000", Daylight, 0,	{ 2.425781, 1, 1.886719, 0 } },
   { "Panasonic", "DMC-FZ1000", Cloudy, 0,	{ 2.621094, 1, 1.714844, 0 } },
@@ -6093,6 +7135,24 @@ const wb_data wb_preset[] = {
   { "Panasonic", "DMC-ZS40", Shade, 0,		{ 2.335849, 1, 1.415094, 0 } },
   { "Panasonic", "DMC-ZS40", Incandescent, 0,	{ 1.384906, 1, 2.577358, 0 } },
 
+  // Panasonic DMC-TZ70, DMC-TZ71 and DMC-ZS50 are the same camera model.
+  { "Panasonic", "DMC-TZ70", Daylight, 0,	{ 2.090909, 1, 1.818182, 0 } },
+  { "Panasonic", "DMC-TZ70", Cloudy, 0,		{ 2.241509, 1, 1.660377, 0 } },
+  { "Panasonic", "DMC-TZ70", Shade, 0,		{ 2.378788, 1, 1.590909, 0 } },
+  { "Panasonic", "DMC-TZ70", Incandescent, 0,	{ 1.420455, 1, 2.727273, 0 } },
+
+  // Panasonic DMC-TZ70, DMC-TZ71 and DMC-ZS50 are the same camera model.
+  { "Panasonic", "DMC-TZ71", Daylight, 0,	{ 2.090909, 1, 1.818182, 0 } },
+  { "Panasonic", "DMC-TZ71", Cloudy, 0,		{ 2.241509, 1, 1.660377, 0 } },
+  { "Panasonic", "DMC-TZ71", Shade, 0,		{ 2.378788, 1, 1.590909, 0 } },
+  { "Panasonic", "DMC-TZ71", Incandescent, 0,	{ 1.420455, 1, 2.727273, 0 } },
+
+  // Panasonic DMC-TZ70, DMC-TZ71 and DMC-ZS50 are the same camera model.
+  { "Panasonic", "DMC-ZS50", Daylight, 0,	{ 2.090909, 1, 1.818182, 0 } },
+  { "Panasonic", "DMC-ZS50", Cloudy, 0,		{ 2.241509, 1, 1.660377, 0 } },
+  { "Panasonic", "DMC-ZS50", Shade, 0,		{ 2.378788, 1, 1.590909, 0 } },
+  { "Panasonic", "DMC-ZS50", Incandescent, 0,	{ 1.420455, 1, 2.727273, 0 } },
+
   { "Panasonic", "DMC-G1", Daylight, 0,		{ 1.942966, 1, 1.448669, 0 } },
   { "Panasonic", "DMC-G1", Cloudy, 0,		{ 2.106464, 1, 1.326996, 0 } },
   { "Panasonic", "DMC-G1", Shade, 0,		{ 2.323194, 1, 1.224335, 0 } },
@@ -6167,6 +7227,19 @@ const wb_data wb_preset[] = {
   { "Panasonic", "DMC-G6", Incandescent, 0,	{ 1.535156, 1, 2.375000, 0 } },
   { "Panasonic", "DMC-G6", Flash, 0,		{ 2.332031, 1, 1.566406, 0 } },
 
+  { "Panasonic", "DMC-G7", Daylight, 0,		{ 2.351563, 1, 1.664063, 0 } },
+  { "Panasonic", "DMC-G7", Cloudy, 0,		{ 2.519531, 1, 1.542969, 0 } },
+  { "Panasonic", "DMC-G7", Shade, 0,		{ 2.691406, 1, 1.464844, 0 } },
+  { "Panasonic", "DMC-G7", Incandescent, 0,	{ 1.625000, 1, 2.425781, 0 } },
+  { "Panasonic", "DMC-G7", Flash, 0,		{ 2.371094, 1, 1.589844, 0 } },
+
+  /* The Panasonic DMC-G7 is named DMC-G70 in Germany. */
+  { "Panasonic", "DMC-G70", Daylight, 0,	{ 2.351563, 1, 1.664063, 0 } },
+  { "Panasonic", "DMC-G70", Cloudy, 0,		{ 2.519531, 1, 1.542969, 0 } },
+  { "Panasonic", "DMC-G70", Shade, 0,		{ 2.691406, 1, 1.464844, 0 } },
+  { "Panasonic", "DMC-G70", Incandescent, 0,	{ 1.625000, 1, 2.425781, 0 } },
+  { "Panasonic", "DMC-G70", Flash, 0,		{ 2.371094, 1, 1.589844, 0 } },
+
   /* Firmware version 1.2 */
   /* -9/+9 fine tuning is -9/+9 in blue-amber and zero in magenta-green */
   { "Panasonic", "DMC-GF1", Daylight, -9,	{ 1.817490, 1, 1.760456, 0 } },
@@ -6400,11 +7473,17 @@ const wb_data wb_preset[] = {
   { "Panasonic", "DMC-GX1", "9900K", 0,		{ 3.452830, 1, 1.305660, 0 } },
   { "Panasonic", "DMC-GX1", "10000K", 0,	{ 3.467925, 1, 1.298113, 0 } },
 
-  { "Panasonic", "DMC-GX7", "Daylight", 0,	{ 2.539623, 1, 1.611321, 0 } },
-  { "Panasonic", "DMC-GX7", "Cloudy", 0,	{ 2.667925, 1, 1.509434, 0 } },
-  { "Panasonic", "DMC-GX7", "Shade", 0,		{ 2.879245, 1, 1.422642, 0 } },
-  { "Panasonic", "DMC-GX7", "Incandescent", 0,	{ 1.758491, 1, 2.320755, 0 } },
-  { "Panasonic", "DMC-GX7", "Flash", 0,		{ 2.607547, 1, 1.479245, 0 } },
+  { "Panasonic", "DMC-GX7", Daylight, 0,	{ 2.539623, 1, 1.611321, 0 } },
+  { "Panasonic", "DMC-GX7", Cloudy, 0,		{ 2.667925, 1, 1.509434, 0 } },
+  { "Panasonic", "DMC-GX7", Shade, 0,		{ 2.879245, 1, 1.422642, 0 } },
+  { "Panasonic", "DMC-GX7", Incandescent, 0,	{ 1.758491, 1, 2.320755, 0 } },
+  { "Panasonic", "DMC-GX7", Flash, 0,		{ 2.607547, 1, 1.479245, 0 } },
+
+  { "Panasonic", "DMC-GX8", Daylight, 0,	{ 2.296875, 1, 1.914063, 0 } },
+  { "Panasonic", "DMC-GX8", Cloudy, 0,		{ 2.437500, 1, 1.761719, 0 } },
+  { "Panasonic", "DMC-GX8", Shade, 0,		{ 2.605469, 1, 1.656250, 0 } },
+  { "Panasonic", "DMC-GX8", Incandescent, 0,	{ 1.664063, 1, 2.800781, 0 } },
+  { "Panasonic", "DMC-GX8", Flash, 0,		{ 2.320313, 1, 1.824219, 0 } },
 
   { "Panasonic", "DMC-L1", Daylight, 0,		{ 1.980989, 1, 1.444867, 0 } },
   { "Panasonic", "DMC-L1", Cloudy, 0,		{ 2.129278, 1, 1.300380, 0 } },
@@ -6446,6 +7525,11 @@ const wb_data wb_preset[] = {
   { "Panasonic", "DMC-L1", "9000K", 0,		{ 2.574145, 1, 1.068441, 0 } },
   { "Panasonic", "DMC-L1", "10000K", 0,		{ 2.692015, 1.011407, 1, 0 } },
 
+  {"Panasonic", "DMC-LF1", Daylight, 0,		{ 1.912879, 1, 1.750000, 0 } },
+  {"Panasonic", "DMC-LF1", Cloudy, 0,		{ 2.037879, 1, 1.609848, 0 } },
+  {"Panasonic", "DMC-LF1", Shade, 0,		{ 2.159091, 1, 1.511364, 0 } },
+  {"Panasonic", "DMC-LF1", Incandescent, 0,	{ 1.268939, 1, 2.799242, 0 } },
+
   { "Panasonic", "DMC-LX1", Daylight, 0,	{ 1.837121, 1, 1.484848, 0 } },
   { "Panasonic", "DMC-LX1", Cloudy, 0,		{ 2.003788, 1, 1.310606, 0 } },
   { "Panasonic", "DMC-LX1", Incandescent, 0,	{ 1.098485, 1, 2.272727, 0 } },
@@ -6517,6 +7601,15 @@ const wb_data wb_preset[] = {
   { "PENTAX", "*ist DL", Tungsten, 0,		{ 1.000000, 1, 2.074219, 0 } },
   { "PENTAX", "*ist DL", Flash, 0,		{ 1.621094, 1, 1.027344, 0 } },
 
+  { "PENTAX", "*ist DL2", Daylight, 0,		{ 1.491333, 1, 1.000000, 0 } },
+  { "PENTAX", "*ist DL2", Shade, 0,		{ 1.797485, 1, 0.763184, 0 } },
+  { "PENTAX", "*ist DL2", Cloudy, 0,		{ 1.612305, 1, 0.896729, 0 } },
+  { "PENTAX", "*ist DL2", Tungsten, 0,		{ 0.846924, 1, 2.078125, 0 } },
+  { "PENTAX", "*ist DL2", DaylightFluorescent, 0, { 1.748169, 1, 1.015137, 0 } },
+  { "PENTAX", "*ist DL2", NeutralFluorescent, 0, { 1.446899, 1, 1.133545, 0 } },
+  { "PENTAX", "*ist DL2", WhiteFluorescent, 0,	{ 1.286377, 1, 1.377808, 0 } },
+  { "PENTAX", "*ist DL2", Flash, 0,		{ 1.553101, 1, 0.937012, 0 } },
+
   /* It seems that the *ist DS WB settings are not really presets. */
   { "PENTAX", "*ist DS", Daylight, 0,		{ 1.632812, 1, 1.000000, 0 } },
   { "PENTAX", "*ist DS", Shade, 0,		{ 1.964844, 1, 1.000000, 0 } },
@@ -6593,6 +7686,31 @@ const wb_data wb_preset[] = {
   { "PENTAX", "K-01", Tungsten, 0,		{ 1.320313, 1, 2.993530, 0 } },
   { "PENTAX", "K-01", Flash, 0,			{ 2.490967, 1, 1.484985, 0 } },
 
+  /* PENTAX K-1 Firmware Version 1.10 */
+  { "PENTAX", "K-1", Daylight, 0,		{ 2.14062, 1, 1.66406, 0 } },
+  { "PENTAX", "K-1", Shade, 0,			{ 2.65625, 1, 1.25000, 0 } },
+  { "PENTAX", "K-1", Cloudy, 0,			{ 2.37109, 1, 1.43750, 0 } },
+  { "PENTAX", "K-1", DaylightFluorescent, 0,	{ 2.61328, 1, 1.60938, 0 } },
+  { "PENTAX", "K-1", CoolWhiteFluorescent, 0,	{ 2.23047, 1, 1.82031, 0 } },
+  { "PENTAX", "K-1", WhiteFluorescent, 0,	{ 2.01953, 1, 2.19531, 0 } },
+  { "PENTAX", "K-1", WarmWhiteFluorescent, 0,	{ 1.70312, 1, 2.77734, 0 } },
+  { "PENTAX", "K-1", Tungsten, 0,		{ 1.32422, 1, 2.92969, 0 } },
+  { "PENTAX", "K-1", "2500K", 0,		{ 1.14062, 1, 2.75391, 0 } },
+  { "PENTAX", "K-1", "3000K", 0,		{ 1.40234, 1, 2.33984, 0 } },
+  { "PENTAX", "K-1", "5000K", 0,		{ 2.07812, 1, 1.54688, 0 } },
+  { "PENTAX", "K-1", "5500K", 0,		{ 2.19141, 1, 1.45703, 0 } },
+
+  /* PENTAX K-3 Firmware version 1.00 */
+  { "PENTAX", "K-3", Daylight, 0,		{ 2.31250, 1, 1.48047, 0 } },
+  { "PENTAX", "K-3", Shade, 0,			{ 2.78516, 1, 1.16797, 0 } },
+  { "PENTAX", "K-3", Cloudy, 0,			{ 2.49219, 1, 1.35156, 0 } },
+  { "PENTAX", "K-3", Tungsten, 0,		{ 1.35938, 1, 2.74609, 0 } },
+  { "PENTAX", "K-3", DaylightFluorescent, 0,	{ 2.71094, 1, 1.51953, 0 } },
+  { "PENTAX", "K-3", DayWhiteFluorescent, 0,	{ 2.30469, 1, 1.70312, 0 } },
+  { "PENTAX", "K-3", WhiteFluorescent, 0,	{ 2.07031, 1, 2.03516, 0 } },
+  { "PENTAX", "K-3", WarmWhiteFluorescent, 0,	{ 1.74609, 1, 2.53125, 0 } },
+  { "PENTAX", "K-3", Flash, 0,			{ 2.56641, 1, 1.31641, 0 } },
+
   { "PENTAX", "K-5", Daylight, 0,		{ 2.1211, 1, 1.5781, 0 } },
   { "PENTAX", "K-5", Shade, 0,			{ 2.5312, 1, 1.1758, 0 } },
   { "PENTAX", "K-5", Cloudy, 0,			{ 2.2852, 1, 1.3477, 0 } },
@@ -6644,7 +7762,7 @@ const wb_data wb_preset[] = {
   { "PENTAX", "K-7", Tungsten, 0,		{ 1.105469, 1, 2.347656, 0 } },
   { "PENTAX", "K-7", Flash, 0,			{ 2.093750, 1, 1.082031, 0 } },
 
-  // Pentax K-30 (FW v1.05)
+  // PENTAX K-30 (FW v1.05)
   { "PENTAX", "K-30", Daylight, 0,		{ 2.213013, 1, 1.629150, 0 } },
   { "PENTAX", "K-30", Shade, 0,			{ 2.644287, 1, 1.215942, 0 } },
   { "PENTAX", "K-30", Cloudy, 0,		{ 2.384521, 1, 1.392944, 0 } },
@@ -6666,6 +7784,16 @@ const wb_data wb_preset[] = {
   { "PENTAX", "K-50", Tungsten, 0,		{ 1.348755, 1, 2.894653, 0 } },
   { "PENTAX", "K-50", Flash, 0,			{ 2.544678, 1, 1.435913, 0 } },
 
+  /* PENTAX K-70 Firmware Version 1.10 */
+  { "PENTAX", "K-70", Daylight, 0,		{ 2.144531, 1, 1.707031, 0 } },
+  { "PENTAX", "K-70", Shade, 0,			{ 2.656250, 1, 1.250000, 0 } },
+  { "PENTAX", "K-70", Cloudy, 0,		{ 2.378906, 1, 1.464844, 0 } },
+  { "PENTAX", "K-70", Tungsten, 0,		{ 1.312500, 1, 2.976563, 0 } },
+  { "PENTAX", "K-70", WarmWhiteFluorescent, 0,	{ 1.699219, 1, 2.910156, 0 } },
+  { "PENTAX", "K-70", DayWhiteFluorescent, 0,	{ 2.230469, 1, 1.914063, 0 } },
+  { "PENTAX", "K-70", DaylightFluorescent, 0,	{ 2.628906, 1, 1.671875, 0 } },
+  { "PENTAX", "K-70", WhiteFluorescent, 0,	{ 2.019531, 1, 2.304688, 0 } },
+
   /* PENTAX K-500 Firmware Version 1.00 */
   { "PENTAX", "K-500", Daylight, 0,		{ 2.207642, 1, 1.606079, 0 } },
   { "PENTAX", "K-500", Shade, 0,		{ 2.637695, 1, 1.198730, 0 } },
@@ -6707,6 +7835,26 @@ const wb_data wb_preset[] = {
   { "PENTAX", "K-x", Tungsten, 0,		{ 1.0463, 1, 3.4015, 0 } },
   { "PENTAX", "K-x", Flash, 0,			{ 2.1120, 1, 1.2741, 0 } },
 
+  { "PENTAX", "K-S1", Daylight, 0,		{ 2.277344, 1, 1.656250, 0 } },
+  { "PENTAX", "K-S1", Shade, 0,			{ 2.847656, 1, 1.230469, 0 } },
+  { "PENTAX", "K-S1", Cloudy, 0,		{ 2.546875, 1, 1.429688, 0 } },
+  { "PENTAX", "K-S1", Tungsten, 0,		{ 1.343750, 1, 3.089844, 0 } },
+  { "PENTAX", "K-S1", WarmWhiteFluorescent, 0,	{ 1.777344, 1, 2.781250, 0 } },
+  { "PENTAX", "K-S1", DayWhiteFluorescent, 0,	{ 2.367188, 1, 1.824219, 0 } },
+  { "PENTAX", "K-S1", DaylightFluorescent, 0,	{ 2.761719, 1, 1.617188, 0 } },
+  { "PENTAX", "K-S1", WhiteFluorescent, 0,	{ 2.125000, 1, 2.210938, 0 } },
+  { "PENTAX", "K-S1", Flash, 0,			{ 2.613281, 1, 1.351562, 0 } },
+
+  { "PENTAX", "K-S2", Daylight, 0,		{ 2.257812, 1, 1.683594, 0 } },
+  { "PENTAX", "K-S2", Shade, 0,			{ 2.882812, 1, 1.218750, 0 } },
+  { "PENTAX", "K-S2", Cloudy, 0,		{ 2.574219, 1, 1.414062, 0 } },
+  { "PENTAX", "K-S2", Tungsten, 0,		{ 1.234375, 1, 3.644531, 0 } },
+  { "PENTAX", "K-S2", WarmWhiteFluorescent, 0,	{ 1.785156, 1, 2.769531, 0 } },
+  { "PENTAX", "K-S2", DayWhiteFluorescent, 0,	{ 2.367188, 1, 1.832031, 0 } },
+  { "PENTAX", "K-S2", DaylightFluorescent, 0,	{ 2.804688, 1, 1.625000, 0 } },
+  { "PENTAX", "K-S2", WhiteFluorescent, 0,	{ 2.125000, 1, 2.199219, 0 } },
+  { "PENTAX", "K-S2", Flash, 0,			{ 2.746094, 1, 1.359375, 0 } },
+
   /* PENTAX Q Firmware Version 1.00 */
   { "PENTAX", "Q", Daylight, 0,			{ 1.515137, 1, 1.858890, 0 } },
   { "PENTAX", "Q", Shade, 0,			{ 1.818237, 1, 1.417951, 0 } },
@@ -6768,17 +7916,6 @@ const wb_data wb_preset[] = {
   { "RICOH", "GR", WarmWhiteFluorescent, 0,	{ 2.240000, 1, 2.160000, 0 } },
   { "RICOH", "GR", "5000K", 0,			{ 2.890000, 1, 1.520000, 0 } },
 
-  /* RICOH PENTAX K-3 Firmware version 1.00 */
-  { "RICOH", "PENTAX K-3", Daylight, 0,		{ 2.31250, 1, 1.48047, 0 } },
-  { "RICOH", "PENTAX K-3", Shade, 0,		{ 2.78516, 1, 1.16797, 0 } },
-  { "RICOH", "PENTAX K-3", Cloudy, 0,		{ 2.49219, 1, 1.35156, 0 } },
-  { "RICOH", "PENTAX K-3", Tungsten, 0,		{ 1.35938, 1, 2.74609, 0 } },
-  { "RICOH", "PENTAX K-3", DaylightFluorescent, 0, { 2.71094, 1, 1.51953, 0 } },
-  { "RICOH", "PENTAX K-3", DayWhiteFluorescent, 0, { 2.30469, 1, 1.70312, 0 } },
-  { "RICOH", "PENTAX K-3", WhiteFluorescent, 0,	{ 2.07031, 1, 2.03516, 0 } },
-  { "RICOH", "PENTAX K-3", WarmWhiteFluorescent, 0, { 1.74609, 1, 2.53125, 0 } },
-  { "RICOH", "PENTAX K-3", Flash, 0,		{ 2.56641, 1, 1.31641, 0 } },
-
   { "SAMSUNG", "EX1", Daylight, 0,		{ 1.8711, 1, 2.0039, 0 } },
   { "SAMSUNG", "EX1", Cloudy, 0,		{ 2.3672, 1, 1.6797, 0 } },
   { "SAMSUNG", "EX1", DaylightFluorescent, 0,	{ 1.9492, 1, 2.0586, 0 } },
@@ -7133,7 +8270,7 @@ const wb_data wb_preset[] = {
   { "SAMSUNG", "NX11", "5500K", 0,		{ 1.692022, 1, 0.843950, 0 } },
   { "SAMSUNG", "NX11", "6500K", 0,		{ 2.110371, 1, 0.879107, 0 } },
 
-  // Copied from Samsung NX200
+  // Copied from SAMSUNG NX200
   { "SAMSUNG", "NX20", Daylight, 0,		{ 2.773438, 1, 1.625000, 0 } },
   { "SAMSUNG", "NX20", Cloudy, 0,		{ 2.902344, 1, 1.546875, 0 } },
   { "SAMSUNG", "NX20", WhiteFluorescent, 0,	{ 2.445313, 1, 2.316406, 0 } },
@@ -7261,7 +8398,7 @@ const wb_data wb_preset[] = {
   { "SAMSUNG", "NX200", Tungsten, 0,		{ 1.511719, 1, 2.941406, 0 } },
   { "SAMSUNG", "NX200", Flash, 0,		{ 2.914063, 1, 1.191406, 0 } },
 
-  // Copied from Samsung NX200
+  // Copied from SAMSUNG NX200
   { "SAMSUNG", "NX210", Daylight, 0,		{ 2.773438, 1, 1.625000, 0 } },
   { "SAMSUNG", "NX210", Cloudy, 0,		{ 2.902344, 1, 1.546875, 0 } },
   { "SAMSUNG", "NX210", WhiteFluorescent, 0,	{ 2.445313, 1, 2.316406, 0 } },
@@ -7490,7 +8627,16 @@ const wb_data wb_preset[] = {
   { "SAMSUNG", "NX300M", "5500K", 0,		{ 2.636719, 1, 1.792969, 0 } },
   { "SAMSUNG", "NX300M", "6500K", 0,		{ 3.003906, 1, 1.644531, 0 } },
 
-  // Copied from Samsung NX200
+  // Firmware 1.00
+  { "SAMSUNG", "NX500", Daylight, 0,		{ 1.810484, 1, 1.471774, 0 } },
+  { "SAMSUNG", "NX500", Cloudy, 0,		{ 1.895161, 1, 1.302419, 0 } },
+  { "SAMSUNG", "NX500", CoolWhiteFluorescent, 0, { 1.802419, 1, 2.350806, 0 } },
+  { "SAMSUNG", "NX500", DayWhiteFluorescent, 0,	{ 1.975806, 1, 1.826613, 0 } },
+  { "SAMSUNG", "NX500", DaylightFluorescent, 0,	{ 2.274194, 1, 1.512097, 0 } },
+  { "SAMSUNG", "NX500", Tungsten, 0,		{ 1.298387, 1, 2.439516, 0 } },
+  { "SAMSUNG", "NX500", Flash, 0,		{ 1.959677, 1, 1.169355, 0 } },
+
+  // Copied from SAMSUNG NX200
   { "SAMSUNG", "NX1000", Daylight, 0,		{ 2.773438, 1, 1.625000, 0 } },
   { "SAMSUNG", "NX1000", Cloudy, 0,		{ 2.902344, 1, 1.546875, 0 } },
   { "SAMSUNG", "NX1000", WhiteFluorescent, 0,	{ 2.445313, 1, 2.316406, 0 } },
@@ -7499,7 +8645,7 @@ const wb_data wb_preset[] = {
   { "SAMSUNG", "NX1000", Tungsten, 0,		{ 1.511719, 1, 2.941406, 0 } },
   { "SAMSUNG", "NX1000", Flash, 0,		{ 2.914063, 1, 1.191406, 0 } },
 
-  // Copied from Samsung NX200
+  // Copied from SAMSUNG NX200
   { "SAMSUNG", "NX1100", Daylight, 0,		{ 2.773438, 1, 1.625000, 0 } },
   { "SAMSUNG", "NX1100", Cloudy, 0,		{ 2.902344, 1, 1.546875, 0 } },
   { "SAMSUNG", "NX1100", WhiteFluorescent, 0,	{ 2.445313, 1, 2.316406, 0 } },
@@ -7517,6 +8663,150 @@ const wb_data wb_preset[] = {
   { "SAMSUNG", "NX3000", Tungsten, 0,		{ 1.539063, 1, 2.816406, 0 } },
   { "SAMSUNG", "NX3000", Flash, 0,		{ 2.597656, 1, 1.566406, 0 } },
 
+  { "SONY", "DSC-RX1", Daylight, 0,		{ 2.386719, 1, 1.550781, 0 } },
+  { "SONY", "DSC-RX1", Shade, 0,		{ 2.843750, 1, 1.273438, 0 } },
+  { "SONY", "DSC-RX1", Cloudy, 0,		{ 2.578125, 1, 1.417969, 0 } },
+  { "SONY", "DSC-RX1", Tungsten, 0,		{ 1.472656, 1, 2.871094, 0 } },
+  { "SONY", "DSC-RX1", WarmWhiteFluorescent, 0,	{ 1.703125, 1, 2.851563, 0 } },
+  { "SONY", "DSC-RX1", CoolWhiteFluorescent, 0,	{ 2.148438, 1, 2.339844, 0 } },
+  { "SONY", "DSC-RX1", DayWhiteFluorescent, 0,	{ 2.308594, 1, 1.695313, 0 } },
+  { "SONY", "DSC-RX1", DaylightFluorescent, 0,	{ 2.605469, 1, 1.484375, 0 } },
+  { "SONY", "DSC-RX1", Flash, 0,		{ 2.835938, 1, 1.300781, 0 } },
+  { "SONY", "DSC-RX1", "2500K", 0,		{ 1.277344, 1, 3.507813, 0 } },
+  { "SONY", "DSC-RX1", "3200K", 0,		{ 1.644531, 1, 2.468750, 0 } },
+  { "SONY", "DSC-RX1", "4500K", 0,		{ 2.152344, 1, 1.753906, 0 } },
+  { "SONY", "DSC-RX1", "6000K", 0,		{ 2.558594, 1, 1.433594, 0 } },
+  { "SONY", "DSC-RX1", "8500K", 0,		{ 2.992188, 1, 1.203125, 0 } },
+
+  { "SONY", "DSC-RX1R", Daylight, 0,		{ 2.390625, 1, 1.597656, 0 } },
+  { "SONY", "DSC-RX1R", Shade, 0,		{ 2.843750, 1, 1.312500, 0 } },
+  { "SONY", "DSC-RX1R", Cloudy, 0,		{ 2.582031, 1, 1.464844, 0 } },
+  { "SONY", "DSC-RX1R", Tungsten, 0,		{ 1.476563, 1, 2.914063, 0 } },
+  { "SONY", "DSC-RX1R", WarmWhiteFluorescent, 0, { 1.707031, 1, 2.894531, 0 } },
+  { "SONY", "DSC-RX1R", CoolWhiteFluorescent, 0, { 2.152344, 1, 2.386719, 0 } },
+  { "SONY", "DSC-RX1R", DayWhiteFluorescent, 0,	{ 2.312500, 1, 1.742188, 0 } },
+  { "SONY", "DSC-RX1R", DaylightFluorescent, 0,	{ 2.605469, 1, 1.531250, 0 } },
+  { "SONY", "DSC-RX1R", Flash, 0,		{ 2.816406, 1, 1.312500, 0 } },
+  { "SONY", "DSC-RX1R", "2500K", 0,		{ 1.281250, 1, 3.535156, 0 } },
+  { "SONY", "DSC-RX1R", "3200K", 0,		{ 1.648438, 1, 2.515625, 0 } },
+  { "SONY", "DSC-RX1R", "4500K", 0,		{ 2.156250, 1, 1.800781, 0 } },
+  { "SONY", "DSC-RX1R", "6000K", 0,		{ 2.558594, 1, 1.476563, 0 } },
+  { "SONY", "DSC-RX1R", "8500K", 0,		{ 2.992188, 1, 1.242188, 0 } },
+
+  /* Firmware version 2.00 */
+  /* -7/+7 fine tuning is -7/+7 in amber-blue and zero in green-magenta */
+  { "SONY", "DSC-RX10", Daylight, -7,		{ 2.035156, 1, 2.292969, 0 } },
+  { "SONY", "DSC-RX10", Daylight, 0,		{ 2.503906, 1, 1.824219, 0 } },
+  { "SONY", "DSC-RX10", Daylight, 7,		{ 3.105469, 1, 1.449219, 0 } },
+  { "SONY", "DSC-RX10", Shade, -7,		{ 2.398438, 1, 1.910156, 0 } },
+  { "SONY", "DSC-RX10", Shade, 0,		{ 2.968750, 1, 1.519531, 0 } },
+  { "SONY", "DSC-RX10", Shade, 7,		{ 3.710938, 1, 1.210938, 0 } },
+  { "SONY", "DSC-RX10", Cloudy, -7,		{ 2.187500, 1, 2.113281, 0 } },
+  { "SONY", "DSC-RX10", Cloudy, 0,		{ 2.699219, 1, 1.679688, 0 } },
+  { "SONY", "DSC-RX10", Cloudy, 7,		{ 3.359375, 1, 1.335938, 0 } },
+  { "SONY", "DSC-RX10", Incandescent, -7,	{ 1.285156, 1, 3.925781, 0 } },
+  { "SONY", "DSC-RX10", Incandescent, 0,	{ 1.562500, 1, 3.109375, 0 } },
+  { "SONY", "DSC-RX10", Incandescent, 7,	{ 1.906250, 1, 2.468750, 0 } },
+  { "SONY", "DSC-RX10", WarmWhiteFluorescent, -7, { 1.515625, 1, 3.808594, 0 } },
+  { "SONY", "DSC-RX10", WarmWhiteFluorescent, 0, { 1.828125, 1, 3.058594, 0 } },
+  { "SONY", "DSC-RX10", WarmWhiteFluorescent, 7, { 2.214844, 1, 2.460938, 0 } },
+  { "SONY", "DSC-RX10", CoolWhiteFluorescent, -7, { 1.921875, 1, 3.207031, 0 } },
+  { "SONY", "DSC-RX10", CoolWhiteFluorescent, 0, { 2.316406, 1, 2.601563, 0 } },
+  { "SONY", "DSC-RX10", CoolWhiteFluorescent, 7, { 2.804688, 1, 2.113281, 0 } },
+  { "SONY", "DSC-RX10", DayWhiteFluorescent, -7, { 1.949219, 1, 2.332031, 0 } },
+  { "SONY", "DSC-RX10", DayWhiteFluorescent, 0,	{ 2.402344, 1, 1.851563, 0 } },
+  { "SONY", "DSC-RX10", DayWhiteFluorescent, 7,	{ 2.976563, 1, 1.468750, 0 } },
+  { "SONY", "DSC-RX10", DaylightFluorescent, -7, { 2.156250, 1, 2.097656, 0 } },
+  { "SONY", "DSC-RX10", DaylightFluorescent, 0,	{ 2.664063, 1, 1.664063, 0 } },
+  { "SONY", "DSC-RX10", DaylightFluorescent, 7,	{ 3.316406, 1, 1.324219, 0 } },
+  { "SONY", "DSC-RX10", Flash, -7,		{ 2.367188, 1, 1.867188, 0 } },
+  { "SONY", "DSC-RX10", Flash, 0,		{ 2.937500, 1, 1.484375, 0 } },
+  { "SONY", "DSC-RX10", Flash, 7,		{ 3.675781, 1, 1.179688, 0 } },
+  { "SONY", "DSC-RX10", "2500K", 0,		{ 1.359375, 1, 3.660156, 0 } },
+  { "SONY", "DSC-RX10", "2600K", 0,		{ 1.421875, 1, 3.480469, 0 } },
+  { "SONY", "DSC-RX10", "2700K", 0,		{ 1.476563, 1, 3.316406, 0 } },
+  { "SONY", "DSC-RX10", "2800K", 0,		{ 1.535156, 1, 3.175781, 0 } },
+  { "SONY", "DSC-RX10", "2900K", 0,		{ 1.589844, 1, 3.046875, 0 } },
+  { "SONY", "DSC-RX10", "3000K", 0,		{ 1.640625, 1, 2.933594, 0 } },
+  { "SONY", "DSC-RX10", "3100K", 0,		{ 1.691406, 1, 2.832031, 0 } },
+  { "SONY", "DSC-RX10", "3200K", 0,		{ 1.742188, 1, 2.738281, 0 } },
+  { "SONY", "DSC-RX10", "3300K", 0,		{ 1.789063, 1, 2.656250, 0 } },
+  { "SONY", "DSC-RX10", "3400K", 0,		{ 1.835938, 1, 2.578125, 0 } },
+  { "SONY", "DSC-RX10", "3500K", 0,		{ 1.882813, 1, 2.507813, 0 } },
+  { "SONY", "DSC-RX10", "3600K", 0,		{ 1.925781, 1, 2.441406, 0 } },
+  { "SONY", "DSC-RX10", "3700K", 0,		{ 1.968750, 1, 2.382813, 0 } },
+  { "SONY", "DSC-RX10", "3800K", 0,		{ 2.007813, 1, 2.328125, 0 } },
+  { "SONY", "DSC-RX10", "3900K", 0,		{ 2.046875, 1, 2.277344, 0 } },
+  { "SONY", "DSC-RX10", "4000K", 0,		{ 2.085938, 1, 2.226563, 0 } },
+  { "SONY", "DSC-RX10", "4100K", 0,		{ 2.125000, 1, 2.183594, 0 } },
+  { "SONY", "DSC-RX10", "4200K", 0,		{ 2.160156, 1, 2.144531, 0 } },
+  { "SONY", "DSC-RX10", "4300K", 0,		{ 2.195313, 1, 2.105469, 0 } },
+  { "SONY", "DSC-RX10", "4400K", 0,		{ 2.230469, 1, 2.066406, 0 } },
+  { "SONY", "DSC-RX10", "4500K", 0,		{ 2.265625, 1, 2.035156, 0 } },
+  { "SONY", "DSC-RX10", "4600K", 0,		{ 2.300781, 1, 2.003906, 0 } },
+  { "SONY", "DSC-RX10", "4700K", 0,		{ 2.332031, 1, 1.972656, 0 } },
+  { "SONY", "DSC-RX10", "4800K", 0,		{ 2.363281, 1, 1.945313, 0 } },
+  { "SONY", "DSC-RX10", "4900K", 0,		{ 2.390625, 1, 1.917969, 0 } },
+  { "SONY", "DSC-RX10", "5000K", 0,		{ 2.421875, 1, 1.890625, 0 } },
+  { "SONY", "DSC-RX10", "5100K", 0,		{ 2.449219, 1, 1.867188, 0 } },
+  { "SONY", "DSC-RX10", "5200K", 0,		{ 2.476563, 1, 1.843750, 0 } },
+  { "SONY", "DSC-RX10", "5300K", 0,		{ 2.503906, 1, 1.824219, 0 } },
+  { "SONY", "DSC-RX10", "5400K", 0,		{ 2.531250, 1, 1.800781, 0 } },
+  { "SONY", "DSC-RX10", "5500K", 0,		{ 2.558594, 1, 1.781250, 0 } },
+  { "SONY", "DSC-RX10", "5600K", 0,		{ 2.582031, 1, 1.761719, 0 } },
+  { "SONY", "DSC-RX10", "5700K", 0,		{ 2.609375, 1, 1.746094, 0 } },
+  { "SONY", "DSC-RX10", "5800K", 0,		{ 2.632813, 1, 1.726563, 0 } },
+  { "SONY", "DSC-RX10", "5900K", 0,		{ 2.656250, 1, 1.710938, 0 } },
+  { "SONY", "DSC-RX10", "6000K", 0,		{ 2.679688, 1, 1.695313, 0 } },
+  { "SONY", "DSC-RX10", "6100K", 0,		{ 2.699219, 1, 1.679688, 0 } },
+  { "SONY", "DSC-RX10", "6200K", 0,		{ 2.722656, 1, 1.667969, 0 } },
+  { "SONY", "DSC-RX10", "6300K", 0,		{ 2.746094, 1, 1.652344, 0 } },
+  { "SONY", "DSC-RX10", "6400K", 0,		{ 2.765625, 1, 1.640625, 0 } },
+  { "SONY", "DSC-RX10", "6500K", 0,		{ 2.785156, 1, 1.625000, 0 } },
+  { "SONY", "DSC-RX10", "6600K", 0,		{ 2.804688, 1, 1.613281, 0 } },
+  { "SONY", "DSC-RX10", "6700K", 0,		{ 2.824219, 1, 1.601563, 0 } },
+  { "SONY", "DSC-RX10", "6800K", 0,		{ 2.843750, 1, 1.589844, 0 } },
+  { "SONY", "DSC-RX10", "6900K", 0,		{ 2.863281, 1, 1.578125, 0 } },
+  { "SONY", "DSC-RX10", "7000K", 0,		{ 2.882813, 1, 1.570313, 0 } },
+  { "SONY", "DSC-RX10", "7100K", 0,		{ 2.898438, 1, 1.558594, 0 } },
+  { "SONY", "DSC-RX10", "7200K", 0,		{ 2.917969, 1, 1.546875, 0 } },
+  { "SONY", "DSC-RX10", "7300K", 0,		{ 2.933594, 1, 1.539063, 0 } },
+  { "SONY", "DSC-RX10", "7400K", 0,		{ 2.953125, 1, 1.531250, 0 } },
+  { "SONY", "DSC-RX10", "7500K", 0,		{ 2.968750, 1, 1.519531, 0 } },
+  { "SONY", "DSC-RX10", "7600K", 0,		{ 2.984375, 1, 1.511719, 0 } },
+  { "SONY", "DSC-RX10", "7700K", 0,		{ 3.000000, 1, 1.503906, 0 } },
+  { "SONY", "DSC-RX10", "7800K", 0,		{ 3.015625, 1, 1.496094, 0 } },
+  { "SONY", "DSC-RX10", "7900K", 0,		{ 3.031250, 1, 1.488281, 0 } },
+  { "SONY", "DSC-RX10", "8000K", 0,		{ 3.046875, 1, 1.480469, 0 } },
+  { "SONY", "DSC-RX10", "8100K", 0,		{ 3.062500, 1, 1.472656, 0 } },
+  { "SONY", "DSC-RX10", "8200K", 0,		{ 3.074219, 1, 1.464844, 0 } },
+  { "SONY", "DSC-RX10", "8300K", 0,		{ 3.089844, 1, 1.457031, 0 } },
+  { "SONY", "DSC-RX10", "8400K", 0,		{ 3.101563, 1, 1.453125, 0 } },
+  { "SONY", "DSC-RX10", "8500K", 0,		{ 3.117188, 1, 1.445313, 0 } },
+  { "SONY", "DSC-RX10", "8600K", 0,		{ 3.128906, 1, 1.437500, 0 } },
+  { "SONY", "DSC-RX10", "8700K", 0,		{ 3.144531, 1, 1.433594, 0 } },
+  { "SONY", "DSC-RX10", "8800K", 0,		{ 3.156250, 1, 1.425781, 0 } },
+  { "SONY", "DSC-RX10", "8900K", 0,		{ 3.167969, 1, 1.421875, 0 } },
+  { "SONY", "DSC-RX10", "9000K", 0,		{ 3.183594, 1, 1.414063, 0 } },
+  { "SONY", "DSC-RX10", "9100K", 0,		{ 3.195313, 1, 1.410156, 0 } },
+  { "SONY", "DSC-RX10", "9200K", 0,		{ 3.207031, 1, 1.402344, 0 } },
+  { "SONY", "DSC-RX10", "9300K", 0,		{ 3.218750, 1, 1.398438, 0 } },
+  { "SONY", "DSC-RX10", "9400K", 0,		{ 3.230469, 1, 1.394531, 0 } },
+  { "SONY", "DSC-RX10", "9500K", 0,		{ 3.242188, 1, 1.386719, 0 } },
+  { "SONY", "DSC-RX10", "9600K", 0,		{ 3.253906, 1, 1.382813, 0 } },
+  { "SONY", "DSC-RX10", "9700K", 0,		{ 3.265625, 1, 1.378906, 0 } },
+  { "SONY", "DSC-RX10", "9800K", 0,		{ 3.273438, 1, 1.375000, 0 } },
+  { "SONY", "DSC-RX10", "9900K", 0,		{ 3.285156, 1, 1.367188, 0 } },
+
+  { "SONY", "DSC-RX10M2", Cloudy, 0,		{ 2.886719, 1, 1.652344, 0 } },
+  { "SONY", "DSC-RX10M2", Daylight, 0,		{ 2.667969, 1, 1.796875, 0 } },
+  { "SONY", "DSC-RX10M2", Incandescent, 0,	{ 1.636719, 1, 3.117188, 0 } },
+  { "SONY", "DSC-RX10M2", WarmWhiteFluorescent, 0, { 1.996094, 1, 3.039063, 0 } },
+  { "SONY", "DSC-RX10M2", CoolWhiteFluorescent, 0, { 2.578125, 1, 2.476563, 0 } },
+  { "SONY", "DSC-RX10M2", DayWhiteFluorescent, 0, { 2.628906, 1, 1.812500, 0 } },
+  { "SONY", "DSC-RX10M2", DaylightFluorescent, 0, { 2.921875, 1, 1.628906, 0 } },
+  { "SONY", "DSC-RX10M2", Flash, 0,		{ 3.140625, 1, 1.460938, 0 } },
+
   { "SONY", "DSC-RX100", Daylight, 0,		{ 2.0703, 1, 2.1602, 0 } },
   { "SONY", "DSC-RX100", Shade, 0,		{ 2.4531, 1, 1.7852, 0 } },
   { "SONY", "DSC-RX100", Cloudy, 0,		{ 2.2305, 1, 1.9844, 0 } },
@@ -7548,6 +8838,16 @@ const wb_data wb_preset[] = {
   { "SONY", "DSC-RX100M3", Flash, 0,		{ 2.761719, 1, 1.515625, 0 } },
   { "SONY", "DSC-RX100M3", "5500K", 0,		{ 2.441406, 1, 1.742188, 0 } },
 
+  { "SONY", "DSC-RX100M4", Daylight, 0,		{ 2.566406, 1, 1.769531, 0 } },
+  { "SONY", "DSC-RX100M4", Cloudy, 0,		{ 2.773438, 1, 1.628906, 0 } },
+  { "SONY", "DSC-RX100M4", Incandescent, 0,	{ 1.582031, 1, 3.082031, 0 } },
+  { "SONY", "DSC-RX100M4", WarmWhiteFluorescent, 0, { 1.917969, 1, 2.933594, 0 } },
+  { "SONY", "DSC-RX100M4", CoolWhiteFluorescent, 0, { 2.488281, 1, 2.402344, 0 } },
+  { "SONY", "DSC-RX100M4", DayWhiteFluorescent, 0, { 2.535156, 1, 1.769531, 0 } },
+  { "SONY", "DSC-RX100M4", DaylightFluorescent, 0, { 2.808594, 1, 1.582031, 0 } },
+  { "SONY", "DSC-RX100M4", Flash, 0,		{ 2.953125, 1, 1.464844, 0 } },
+  { "SONY", "DSC-RX100M4", "5500K", 0,		{ 2.625000, 1, 1.726563, 0 } },
+
   { "SONY", "DSLR-A100", Daylight, -3,		{ 1.601562, 1, 2.101562, 0 } },
   { "SONY", "DSLR-A100", Daylight, 0,		{ 1.746094, 1, 1.843750, 0 } },
   { "SONY", "DSLR-A100", Daylight, 3,		{ 1.914062, 1, 1.628906, 0 } },
@@ -7588,7 +8888,7 @@ const wb_data wb_preset[] = {
   { "SONY", "DSLR-A200", Flash, 3 ,		{ 2.109375, 1, 1.285156, 0 } },
   { "SONY", "DSLR-A200", "5600K", 0 ,		{ 1.710938, 1, 1.683594, 0 } },
 
-  /* Sony A230 presets - firmware v1.10 */
+  /* SONY DSLR-A230 presets - firmware v1.10 */
   { "SONY", "DSLR-A230", Daylight, -3,		{ 1.621094, 1, 1.949219, 0 } },
   { "SONY", "DSLR-A230", Daylight, -2,		{ 1.675781, 1, 1.859375, 0 } },
   { "SONY", "DSLR-A230", Daylight, -1,		{ 1.726563, 1, 1.773438, 0 } },
@@ -7759,7 +9059,7 @@ const wb_data wb_preset[] = {
   { "SONY", "DSLR-A390", Flash, 0,		{ 2.4336, 1, 1.1953, 0 } },
   { "SONY", "DSLR-A390", Flash, 3,		{ 2.6484, 1, 1.0313, 0 } },
 
-  /* Sony A450 presets */
+  /* SONY DSLR-A450 presets */
   { "SONY", "DSLR-A450", Daylight, -3,		{ 2.109375, 1, 1.593750, 0 } },
   { "SONY", "DSLR-A450", Daylight, 0,		{ 2.296875, 1, 1.445312, 0 } },
   { "SONY", "DSLR-A450", Daylight, 3,		{ 2.503906, 1, 1.312500, 0 } },
@@ -7779,6 +9079,21 @@ const wb_data wb_preset[] = {
   { "SONY", "DSLR-A450", Flash, 0,		{ 2.550781, 1, 1.304688, 0 } },
   { "SONY", "DSLR-A450", Flash, 3,		{ 2.777344, 1, 1.183594, 0 } },
 
+  { "SONY", "DSLR-A500", Daylight, 0,		{ 2.242188, 1, 1.300781, 0 } },
+  { "SONY", "DSLR-A500", Shade, 0,		{ 2.609375, 1, 1.066406, 0 } },
+  { "SONY", "DSLR-A500", Cloudy, 0,		{ 2.398438, 1, 1.191406, 0 } },
+  { "SONY", "DSLR-A500", Tungsten, 0,		{ 1.433594, 1, 2.328125, 0 } },
+  { "SONY", "DSLR-A500", WarmWhiteFluorescent, 0, { 1.679688, 1, 2.351563, 0 } },
+  { "SONY", "DSLR-A500", CoolWhiteFluorescent, 0, { 2.000000, 1, 1.878906, 0 } },
+  { "SONY", "DSLR-A500", DayWhiteFluorescent, 0, { 2.222656, 1, 1.359375, 0 } },
+  { "SONY", "DSLR-A500", DaylightFluorescent, 0, { 2.484375, 1, 1.199219, 0 } },
+  { "SONY", "DSLR-A500", Flash, 0,		{ 2.453125, 1, 1.152344, 0 } },
+  { "SONY", "DSLR-A500", "2500K", 0,		{ 1.250000, 1, 2.781250, 0 } },
+  { "SONY", "DSLR-A500", "3200K", 0,		{ 1.589844, 1, 2.027344, 0 } },
+  { "SONY", "DSLR-A500", "4500K", 0,		{ 2.039063, 1, 1.464844, 0 } },
+  { "SONY", "DSLR-A500", "6000K", 0,		{ 2.378906, 1, 1.199219, 0 } },
+  { "SONY", "DSLR-A500", "8500K", 0,		{ 2.726563, 1, 1.007813, 0 } },
+
   { "SONY", "DSLR-A550", Daylight, 0,		{ 2.160156, 1, 1.496094, 0 } },
   { "SONY", "DSLR-A550", Shade, 0,		{ 2.519531, 1, 1.234375, 0 } },
   { "SONY", "DSLR-A550", Cloudy, 0,		{ 2.312500, 1, 1.375000, 0 } },
@@ -7786,7 +9101,22 @@ const wb_data wb_preset[] = {
   { "SONY", "DSLR-A550", Fluorescent, 0,	{ 1.902344, 1, 2.117188, 0 } },
   { "SONY", "DSLR-A550", Flash, 0,		{ 2.390625, 1, 1.335938, 0 } },
 
-  /* Sony A700 presets - firmware v4 */
+  { "SONY", "DSLR-A580", Daylight, 0,		{ 2.570313, 1, 1.578125, 0 } },
+  { "SONY", "DSLR-A580", Shade, 0,		{ 3.015625, 1, 1.304688, 0 } },
+  { "SONY", "DSLR-A580", Cloudy, 0,		{ 2.757813, 1, 1.453125, 0 } },
+  { "SONY", "DSLR-A580", Tungsten, 0,		{ 1.593750, 1, 2.781250, 0 } },
+  { "SONY", "DSLR-A580", WarmWhiteFluorescent, 0, { 1.824219, 1, 2.785156, 0 } },
+  { "SONY", "DSLR-A580", CoolWhiteFluorescent, 0, { 2.253906, 1, 2.210938, 0 } },
+  { "SONY", "DSLR-A580", DayWhiteFluorescent, 0, { 2.488281, 1, 1.621094, 0 } },
+  { "SONY", "DSLR-A580", DaylightFluorescent, 0, { 2.820313, 1, 1.445313, 0 } },
+  { "SONY", "DSLR-A580", Flash, 0,		{ 2.867188, 1, 1.394531, 0 } },
+  { "SONY", "DSLR-A580", "2500K", 0,		{ 1.375000, 1, 3.308594, 0 } },
+  { "SONY", "DSLR-A580", "3200K", 0,		{ 1.781250, 1, 2.429688, 0 } },
+  { "SONY", "DSLR-A580", "4500K", 0,		{ 2.324219, 1, 1.769531, 0 } },
+  { "SONY", "DSLR-A580", "6000K", 0,		{ 2.734375, 1, 1.464844, 0 } },
+  { "SONY", "DSLR-A580", "8500K", 0,		{ 3.156250, 1, 1.238281, 0 } },
+
+  /* SONY DSLR-A700 presets - firmware v4 */
   { "SONY", "DSLR-A700", Daylight, -3,		{ 1.972656, 1, 1.777344, 0 } },
   { "SONY", "DSLR-A700", Daylight, -2,		{ 2.027344, 1, 1.718750, 0 } },
   { "SONY", "DSLR-A700", Daylight, -1,		{ 2.089844, 1, 1.664063, 0 } },
@@ -7830,7 +9160,7 @@ const wb_data wb_preset[] = {
   { "SONY", "DSLR-A700", Flash, 2,		{ 2.484375, 1, 1.328125, 0 } },
   { "SONY", "DSLR-A700", Flash, 3,		{ 2.554688, 1, 1.285156, 0 } },
 
-  /* Sony A850 presets - firmware v1.00 */
+  /* SONY DSLR-A850 presets - firmware v1.00 */
   { "SONY", "DSLR-A850", Daylight, -3,		{ 2.445313, 1, 1.515625, 0 } },
   { "SONY", "DSLR-A850", Daylight, 0,		{ 2.683594, 1, 1.359375, 0 } },
   { "SONY", "DSLR-A850", Daylight, 3,		{ 2.929688, 1, 1.222656, 0 } },
@@ -7869,6 +9199,21 @@ const wb_data wb_preset[] = {
   { "SONY", "DSLR-A900", Flash, 0,		{ 2.910156, 1, 1.183594, 0 } },
   { "SONY", "DSLR-A900", Flash, 3,		{ 3.183594, 1, 1.062500, 0 } },
 
+  { "SONY", "ILCA-68", Daylight, 0,		{ 2.503906, 1, 1.597656, 0 } },
+  { "SONY", "ILCA-68", Shade, 0,		{ 2.992188, 1, 1.316406, 0 } },
+  { "SONY", "ILCA-68", Cloudy, 0,		{ 2.710938, 1, 1.464844, 0 } },
+  { "SONY", "ILCA-68", Tungsten, 0,		{ 1.535156, 1, 2.890625, 0 } },
+  { "SONY", "ILCA-68", WarmWhiteFluorescent, 0, { 1.761719, 1, 2.843750, 0 } },
+  { "SONY", "ILCA-68", CoolWhiteFluorescent, 0, { 2.234375, 1, 2.300781, 0 } },
+  { "SONY", "ILCA-68", DayWhiteFluorescent, 0,	{ 2.386719, 1, 1.687500, 0 } },
+  { "SONY", "ILCA-68", DaylightFluorescent, 0,	{ 2.660156, 1, 1.542969, 0 } },
+  { "SONY", "ILCA-68", Flash, 0,		{ 2.875000, 1, 1.386719, 0 } },
+  { "SONY", "ILCA-68", "2500K", 0,		{ 1.335938, 1, 3.492188, 0 } },
+  { "SONY", "ILCA-68", "3200K", 0,		{ 1.718750, 1, 2.500000, 0 } },
+  { "SONY", "ILCA-68", "4500K", 0,		{ 2.257812, 1, 1.800781, 0 } },
+  { "SONY", "ILCA-68", "6000K", 0,		{ 2.687500, 1, 1.476562, 0 } },
+  { "SONY", "ILCA-68", "8500K", 0,		{ 3.148438, 1, 1.246094, 0 } },
+
   { "SONY", "ILCA-77M2", Daylight, 0,		{ 2.785156, 1, 1.679688, 0 } },
   { "SONY", "ILCA-77M2", Shade, 0,		{ 3.285156, 1, 1.386719, 0 } },
   { "SONY", "ILCA-77M2", Cloudy, 0,		{ 2.996094, 1, 1.542969, 0 } },
@@ -7891,6 +9236,16 @@ const wb_data wb_preset[] = {
   { "SONY", "ILCE-7", Flash, 0,			{ 2.648438, 1, 1.324219, 0 } },
   { "SONY", "ILCE-7", "5500K", 0,		{ 2.214844, 1, 1.406250, 0 } },
 
+  { "SONY", "ILCE-7M2", Daylight, 0,		{ 2.277344, 1, 1.488281, 0 } },
+  { "SONY", "ILCE-7M2", Shade, 0,		{ 2.714844, 1, 1.234375, 0 } },
+  { "SONY", "ILCE-7M2", Cloudy, 0,		{ 2.460938, 1, 1.367188, 0 } },
+  { "SONY", "ILCE-7M2", Incandescent, 0,	{ 1.398438, 1, 2.625000, 0 } },
+  { "SONY", "ILCE-7M2", WarmWhiteFluorescent, 0, { 1.625000, 1, 2.609375, 0 } },
+  { "SONY", "ILCE-7M2", CoolWhiteFluorescent, 0, { 2.132813, 1, 2.132813, 0 } },
+  { "SONY", "ILCE-7M2", DayWhiteFluorescent, 0,	{ 2.179688, 1, 1.613281, 0 } },
+  { "SONY", "ILCE-7M2", DaylightFluorescent, 0,	{ 2.445313, 1, 1.406250, 0 } },
+  { "SONY", "ILCE-7M2", Flash, 0,		{ 2.507813, 1, 1.347656, 0 } },
+
   // firmware ILCE-7R (A7R) Ver 1.0.1
   { "SONY", "ILCE-7R", Daylight, 0,		{ 2.507813, 1, 1.492188, 0 } },
   { "SONY", "ILCE-7R", Shade, 0,		{ 2.964844, 1, 1.226563, 0 } },
@@ -7903,6 +9258,120 @@ const wb_data wb_preset[] = {
   { "SONY", "ILCE-7R", Flash, 0,		{ 2.750000, 1, 1.343750, 0 } },
   { "SONY", "ILCE-7R", "5500K", 0,		{ 2.558594, 1, 1.457031, 0 } },
 
+  // firmware ILCE-7RM2 (A7R II) Ver 1.0
+  { "SONY", "ILCE-7RM2", Daylight, 0,		{ 2.402344, 1, 1.566406, 0 } },
+  { "SONY", "ILCE-7RM2", Shade, 0,		{ 2.878906, 1, 1.289063, 0 } },
+  { "SONY", "ILCE-7RM2", Cloudy, 0,		{ 2.601563, 1, 1.433594, 0 } },
+  { "SONY", "ILCE-7RM2", Incandescent, 0,	{ 1.464844, 1, 2.847656, 0 } },
+  { "SONY", "ILCE-7RM2", WarmWhiteFluorescent, 0, { 1.730469, 1, 2.734375, 0 } },
+  { "SONY", "ILCE-7RM2", CoolWhiteFluorescent, 0, { 2.187500, 1, 2.226563, 0 } },
+  { "SONY", "ILCE-7RM2", DayWhiteFluorescent, 0, { 2.328125, 1, 1.644531, 0 } },
+  { "SONY", "ILCE-7RM2", DaylightFluorescent, 0, { 2.617188, 1, 1.515625, 0 } },
+  { "SONY", "ILCE-7RM2", Flash, 0,		{ 2.656250, 1, 1.410156, 0 } },
+  { "SONY", "ILCE-7RM2", "5500K", 0,		{ 2.457031, 1, 1.527344, 0 } },
+
+  { "SONY", "ILCE-7S", Daylight, 0,		{ 2.402344, 1, 1.609375, 0 } },
+  { "SONY", "ILCE-7S", Shade, 0,		{ 2.742188, 1, 1.347656, 0 } },
+  { "SONY", "ILCE-7S", Cloudy, 0,		{ 2.546875, 1, 1.484375, 0 } },
+  { "SONY", "ILCE-7S", Tungsten, 0,		{ 1.617188, 1, 2.710938, 0 } },
+  { "SONY", "ILCE-7S", WarmWhiteFluorescent, 0, { 1.835938, 1, 2.660156, 0 } },
+  { "SONY", "ILCE-7S", CoolWhiteFluorescent, 0, { 2.250000, 1, 2.320313, 0 } },
+  { "SONY", "ILCE-7S", DayWhiteFluorescent, 0,	{ 2.355469, 1, 1.687500, 0 } },
+  { "SONY", "ILCE-7S", DaylightFluorescent, 0,	{ 2.574219, 1, 1.558594, 0 } },
+  { "SONY", "ILCE-7S", Flash, 0,		{ 2.664063, 1, 1.488281, 0 } },
+  { "SONY", "ILCE-7S", "2500K", 0,		{ 1.433594, 1, 3.175781, 0 } },
+  { "SONY", "ILCE-7S", "3200K", 0,		{ 1.777344, 1, 2.394531, 0 } },
+  { "SONY", "ILCE-7S", "4500K", 0,		{ 2.210938, 1, 1.792969, 0 } },
+  { "SONY", "ILCE-7S", "6000K", 0,		{ 2.531250, 1, 1.500000, 0 } },
+  { "SONY", "ILCE-7S", "8500K", 0,		{ 2.847656, 1, 1.281250, 0 } },
+
+  { "SONY", "ILCE-7SM2", Daylight, 0,		{ 2.480469, 1, 1.609375, 0 } },
+  { "SONY", "ILCE-7SM2", Shade, 0,		{ 2.824219, 1, 1.351563, 0 } },
+  { "SONY", "ILCE-7SM2", Cloudy, 0,		{ 2.628906, 1, 1.488281, 0 } },
+  { "SONY", "ILCE-7SM2", Tungsten, 0,		{ 1.683594, 1, 2.691406, 0 } },
+  { "SONY", "ILCE-7SM2", WarmWhiteFluorescent, 0, { 1.906250, 1, 2.640625, 0 } },
+  { "SONY", "ILCE-7SM2", CoolWhiteFluorescent, 0, { 2.324219, 1, 2.308594, 0 } },
+  { "SONY", "ILCE-7SM2", DayWhiteFluorescent, 0, { 2.433594, 1, 1.687500, 0 } },
+  { "SONY", "ILCE-7SM2", DaylightFluorescent, 0, { 2.656250, 1, 1.562500, 0 } },
+  { "SONY", "ILCE-7SM2", Flash, 0,		{ 2.746094, 1, 1.488281, 0 } },
+  { "SONY", "ILCE-7SM2", "2500K", 0,		{ 1.492188, 1, 3.140625, 0 } },
+  { "SONY", "ILCE-7SM2", "3200K", 0,		{ 1.843750, 1, 2.382813, 0 } },
+  { "SONY", "ILCE-7SM2", "4500K", 0,		{ 2.289063, 1, 1.789063, 0 } },
+  { "SONY", "ILCE-7SM2", "6000K", 0,		{ 2.613281, 1, 1.500000, 0 } },
+  { "SONY", "ILCE-7SM2", "8500K", 0,		{ 2.933594, 1, 1.285156, 0 } },
+
+  { "SONY", "ILCE-3000", Daylight, 0,		{ 2.597656, 1, 1.613281, 0 } },
+  { "SONY", "ILCE-3000", Shade, 0,		{ 3.136719, 1, 1.324219, 0 } },
+  { "SONY", "ILCE-3000", Cloudy, 0,		{ 2.824219, 1, 1.476563, 0 } },
+  { "SONY", "ILCE-3000", Tungsten, 0,		{ 1.562500, 1, 2.953125, 0 } },
+  { "SONY", "ILCE-3000", WarmWhiteFluorescent, 0, { 1.835938, 1, 2.902344, 0 } },
+  { "SONY", "ILCE-3000", CoolWhiteFluorescent, 0, { 2.332031, 1, 2.328125, 0 } },
+  { "SONY", "ILCE-3000", DayWhiteFluorescent, 0, { 2.507813, 1, 1.761719, 0 } },
+  { "SONY", "ILCE-3000", DaylightFluorescent, 0, { 2.847656, 1, 1.535156, 0 } },
+  { "SONY", "ILCE-3000", Flash, 0,		{ 3.042969, 1, 1.363281, 0 } },
+  { "SONY", "ILCE-3000", "2500K", 0,		{ 1.347656, 1, 3.585938, 0 } },
+  { "SONY", "ILCE-3000", "3200K", 0,		{ 1.753906, 1, 2.546875, 0 } },
+  { "SONY", "ILCE-3000", "4500K", 0,		{ 2.328125, 1, 1.820313, 0 } },
+  { "SONY", "ILCE-3000", "6000K", 0,		{ 2.796875, 1, 1.492188, 0 } },
+  { "SONY", "ILCE-3000", "8500K", 0,		{ 3.316406, 1, 1.253906, 0 } },
+
+  { "SONY", "ILCE-5000", Daylight, 0,		{ 2.746094, 1, 1.656250, 0 } },
+  { "SONY", "ILCE-5000", Shade, 0,		{ 3.328125, 1, 1.359375, 0 } },
+  { "SONY", "ILCE-5000", Cloudy, 0,		{ 2.988281, 1, 1.515625, 0 } },
+  { "SONY", "ILCE-5000", Tungsten, 0,		{ 1.632813, 1, 3.035156, 0 } },
+  { "SONY", "ILCE-5000", WarmWhiteFluorescent, 0, { 1.925781, 1, 2.980469, 0 } },
+  { "SONY", "ILCE-5000", CoolWhiteFluorescent, 0, { 2.457031, 1, 2.390625, 0 } },
+  { "SONY", "ILCE-5000", DayWhiteFluorescent, 0, { 2.648438, 1, 1.808594, 0 } },
+  { "SONY", "ILCE-5000", DaylightFluorescent, 0, { 3.015625, 1, 1.574219, 0 } },
+  { "SONY", "ILCE-5000", Flash, 0,		{ 3.121094, 1, 1.507813, 0 } },
+  { "SONY", "ILCE-5000", "2500K", 0,		{ 1.406250, 1, 3.691406, 0 } },
+  { "SONY", "ILCE-5000", "3200K", 0,		{ 1.835938, 1, 2.617188, 0 } },
+  { "SONY", "ILCE-5000", "4500K", 0,		{ 2.453125, 1, 1.867188, 0 } },
+  { "SONY", "ILCE-5000", "6000K", 0,		{ 2.960938, 1, 1.531250, 0 } },
+  { "SONY", "ILCE-5000", "8500K", 0,		{ 3.523438, 1, 1.285156, 0 } },
+
+  { "SONY", "ILCE-5100", Daylight, 0,		{ 2.695313, 1, 1.671875, 0 } },
+  { "SONY", "ILCE-5100", Shade, 0,		{ 3.164063, 1, 1.378906, 0 } },
+  { "SONY", "ILCE-5100", Cloudy, 0,		{ 2.894531, 1, 1.531250, 0 } },
+  { "SONY", "ILCE-5100", Tungsten, 0,		{ 1.710938, 1, 3.023438, 0 } },
+  { "SONY", "ILCE-5100", WarmWhiteFluorescent, 0, { 1.968750, 1, 2.984375, 0 } },
+  { "SONY", "ILCE-5100", CoolWhiteFluorescent, 0, { 2.453125, 1, 2.472656, 0 } },
+  { "SONY", "ILCE-5100", DayWhiteFluorescent, 0, { 2.597656, 1, 1.773438, 0 } },
+  { "SONY", "ILCE-5100", DaylightFluorescent, 0, { 2.902344, 1, 1.601563, 0 } },
+  { "SONY", "ILCE-5100", Flash, 0,		{ 3.039063, 1, 1.550781, 0 } },
+  { "SONY", "ILCE-5100", "2500K", 0,		{ 1.496094, 1, 3.648438, 0 } },
+  { "SONY", "ILCE-5100", "3200K", 0,		{ 1.902344, 1, 2.617188, 0 } },
+  { "SONY", "ILCE-5100", "4500K", 0,		{ 2.449219, 1, 1.882813, 0 } },
+  { "SONY", "ILCE-5100", "6000K", 0,		{ 2.871094, 1, 1.546875, 0 } },
+  { "SONY", "ILCE-5100", "8500K", 0,		{ 3.316406, 1, 1.304688, 0 } },
+
+  { "SONY", "ILCE-6000", Daylight, 0,		{ 2.800781, 1, 1.671875, 0 } },
+  { "SONY", "ILCE-6000", Shade, 0,		{ 3.296875, 1, 1.382813, 0 } },
+  { "SONY", "ILCE-6000", Cloudy, 0,		{ 3.011719, 1, 1.535156, 0 } },
+  { "SONY", "ILCE-6000", Tungsten, 0,		{ 1.769531, 1, 2.957031, 0 } },
+  { "SONY", "ILCE-6000", WarmWhiteFluorescent, 0, { 2.039063, 1, 2.921875, 0 } },
+  { "SONY", "ILCE-6000", CoolWhiteFluorescent, 0, { 2.550781, 1, 2.437500, 0 } },
+  { "SONY", "ILCE-6000", DayWhiteFluorescent, 0, { 2.699219, 1, 1.765625, 0 } },
+  { "SONY", "ILCE-6000", DaylightFluorescent, 0, { 3.019531, 1, 1.601563, 0 } },
+  { "SONY", "ILCE-6000", Flash, 0,		{ 3.183594, 1, 1.535156, 0 } },
+  { "SONY", "ILCE-6000", "2500K", 0,		{ 1.546875, 1, 3.542969, 0 } },
+  { "SONY", "ILCE-6000", "3200K", 0,		{ 1.968750, 1, 2.578125, 0 } },
+  { "SONY", "ILCE-6000", "4500K", 0,		{ 2.542969, 1, 1.875000, 0 } },
+  { "SONY", "ILCE-6000", "6000K", 0,		{ 2.988281, 1, 1.546875, 0 } },
+  { "SONY", "ILCE-6000", "8500K", 0,		{ 3.453125, 1, 1.308594, 0 } },
+
+  { "SONY", "ILCE-6300", Daylight, 0,		{ 2.601563, 1, 1.785156, 0 } },
+  { "SONY", "ILCE-6300", Shade, 0,		{ 3.058594, 1, 1.472656, 0 } },
+  { "SONY", "ILCE-6300", Cloudy, 0,		{ 2.792969, 1, 1.636719, 0 } },
+  { "SONY", "ILCE-6300", Tungsten, 0,		{ 1.644531, 1, 3.226563, 0 } },
+  { "SONY", "ILCE-6300", WarmWhiteFluorescent, 0, { 1.910156, 1, 3.179688, 0 } },
+  { "SONY", "ILCE-6300", CoolWhiteFluorescent, 0, { 2.429688, 1, 2.625000, 0 } },
+  { "SONY", "ILCE-6300", DayWhiteFluorescent, 0, { 2.531250, 1, 1.886719, 0 } },
+  { "SONY", "ILCE-6300", DaylightFluorescent, 0, { 2.812500, 1, 1.710938, 0 } },
+  { "SONY", "ILCE-6300", Flash, 0,		{ 2.914063, 1, 1.636719, 0 } },
+  { "SONY", "ILCE-6300", Underwater, 0,		{ 2.812500, 1, 1.875000, 0 } },
+  { "SONY", "ILCE-6300", "5500k", 0,		{ 2.652344, 1, 1.746094, 0 } },
+
   { "SONY", "NEX-3", Daylight, -3,		{ 2.0742, 1, 1.6289, 0 } },
   { "SONY", "NEX-3", Daylight, -2,		{ 2.1328, 1, 1.5742, 0 } },
   { "SONY", "NEX-3", Daylight, -1,		{ 2.1914, 1, 1.5195, 0 } },
@@ -7943,6 +9412,21 @@ const wb_data wb_preset[] = {
   { "SONY", "NEX-3", Flash, 2,			{ 2.9063, 1, 1.1602, 0 } },
   { "SONY", "NEX-3", Flash, 3,			{ 2.9883, 1, 1.1211, 0 } },
 
+  { "SONY", "NEX-3N", Daylight, 0,		{ 2.617188, 1, 1.601563, 0 } },
+  { "SONY", "NEX-3N", Shade, 0,			{ 3.144531, 1, 1.316406, 0 } },
+  { "SONY", "NEX-3N", Cloudy, 0,		{ 2.835938, 1, 1.464844, 0 } },
+  { "SONY", "NEX-3N", Tungsten, 0,		{ 1.578125, 1, 2.945313, 0 } },
+  { "SONY", "NEX-3N", WarmWhiteFluorescent, 0,	{ 1.855469, 1, 2.894531, 0 } },
+  { "SONY", "NEX-3N", CoolWhiteFluorescent, 0,	{ 2.347656, 1, 2.320313, 0 } },
+  { "SONY", "NEX-3N", DayWhiteFluorescent, 0,	{ 2.527344, 1, 1.753906, 0 } },
+  { "SONY", "NEX-3N", DaylightFluorescent, 0,	{ 2.863281, 1, 1.523438, 0 } },
+  { "SONY", "NEX-3N", Flash, 0,			{ 2.941406, 1, 1.476563, 0 } },
+  { "SONY", "NEX-3N", "2500K", 0,		{ 1.367188, 1, 3.589844, 0 } },
+  { "SONY", "NEX-3N", "3200K", 0,		{ 1.773438, 1, 2.539063, 0 } },
+  { "SONY", "NEX-3N", "4500K", 0,		{ 2.347656, 1, 1.808594, 0 } },
+  { "SONY", "NEX-3N", "6000K", 0,		{ 2.812500, 1, 1.480469, 0 } },
+  { "SONY", "NEX-3N", "8500K", 0,		{ 3.324219, 1, 1.246094, 0 } },
+
   { "SONY", "NEX-5", Daylight, -3,		{ 2.1250, 1, 1.6055, 0 } },
   { "SONY", "NEX-5", Daylight, -2,		{ 2.1836, 1, 1.5508, 0 } },
   { "SONY", "NEX-5", Daylight, -1,		{ 2.2500, 1, 1.4961, 0 } },
@@ -8129,16 +9613,31 @@ const wb_data wb_preset[] = {
   { "SONY", "NEX-5R", DaylightFluorescent, 0,	{ 2.8555, 1, 1.4648, 0 } },
   { "SONY", "NEX-5R", Flash, 0,			{ 2.8828, 1, 1.3906, 0 } },
 
-  // copied from NEX-5R
-  { "SONY", "NEX-6", Daylight, 0,		{ 2.5000, 1, 1.5117, 0 } },
-  { "SONY", "NEX-6", Shade, 0,			{ 3.0156, 1, 1.2422, 0 } },
-  { "SONY", "NEX-6", Cloudy, 0,			{ 2.7188, 1, 1.3828, 0 } },
-  { "SONY", "NEX-6", Tungsten, 0,		{ 1.5039, 1, 2.7695, 0 } },
-  { "SONY", "NEX-6", WarmWhiteFluorescent, 0,	{ 1.8164, 1, 2.7305, 0 } },
-  { "SONY", "NEX-6", CoolWhiteFluorescent, 0,	{ 2.3086, 1, 2.1758, 0 } },
-  { "SONY", "NEX-6", DayWhiteFluorescent, 0,	{ 2.4844, 1, 1.5703, 0 } },
-  { "SONY", "NEX-6", DaylightFluorescent, 0,	{ 2.8555, 1, 1.4648, 0 } },
-  { "SONY", "NEX-6", Flash, 0,			{ 2.8828, 1, 1.3906, 0 } },
+  { "SONY", "NEX-5T", Daylight, 0,		{ 2.441406, 1, 1.550781, 0 } },
+  { "SONY", "NEX-5T", Shade, 0,			{ 2.941406, 1, 1.273438, 0 } },
+  { "SONY", "NEX-5T", Cloudy, 0,		{ 2.648438, 1, 1.421875, 0 } },
+  { "SONY", "NEX-5T", Tungsten, 0,		{ 1.468750, 1, 2.835938, 0 } },
+  { "SONY", "NEX-5T", WarmWhiteFluorescent, 0,	{ 1.773438, 1, 2.800781, 0 } },
+  { "SONY", "NEX-5T", CoolWhiteFluorescent, 0,	{ 2.253906, 1, 2.230469, 0 } },
+  { "SONY", "NEX-5T", DayWhiteFluorescent, 0,	{ 2.421875, 1, 1.609375, 0 } },
+  { "SONY", "NEX-5T", DaylightFluorescent, 0,	{ 2.785156, 1, 1.503906, 0 } },
+  { "SONY", "NEX-5T", Flash, 0,			{ 2.812500, 1, 1.429688, 0 } },
+  { "SONY", "NEX-5T", "2500K", 0,		{ 1.269531, 1, 3.445313, 0 } },
+  { "SONY", "NEX-5T", "3200K", 0,		{ 1.648438, 1, 2.449219, 0 } },
+  { "SONY", "NEX-5T", "4500K", 0,		{ 2.187500, 1, 1.750000, 0 } },
+  { "SONY", "NEX-5T", "6000K", 0,		{ 2.625000, 1, 1.433594, 0 } },
+  { "SONY", "NEX-5T", "8500K", 0,		{ 3.105469, 1, 1.207031, 0 } },
+
+  // firmware NEX-6 1.03
+  { "SONY", "NEX-6", Daylight, 0,		{ 2.6250, 1, 1.4765, 0 } },
+  { "SONY", "NEX-6", Shade, 0,			{ 3.1718, 1, 1.2109, 0 } },
+  { "SONY", "NEX-6", Cloudy, 0,			{ 2.8515, 1, 1.3515, 0 } },
+  { "SONY", "NEX-6", Tungsten, 0,		{ 1.5742, 1, 2.7148, 0 } },
+  { "SONY", "NEX-6", WarmWhiteFluorescent, 0,	{ 1.9023, 1, 2.6796, 0 } },
+  { "SONY", "NEX-6", CoolWhiteFluorescent, 0,	{ 2.4218, 1, 2.1289, 0 } },
+  { "SONY", "NEX-6", DayWhiteFluorescent, 0,	{ 2.6054, 1, 1.5312, 0 } },
+  { "SONY", "NEX-6", DaylightFluorescent, 0,	{ 3.0000, 1, 1.4296, 0 } },
+  { "SONY", "NEX-6", Flash, 0,			{ 3.0312, 1, 1.3554, 0 } },
 
   { "SONY", "NEX-7", Daylight, 0,		{ 2.5820, 1, 1.5273, 0 } },
   { "SONY", "NEX-7", Shade, 0,			{ 3.0781, 1, 1.2734, 0 } },
@@ -8161,6 +9660,51 @@ const wb_data wb_preset[] = {
   { "SONY", "NEX-C3", "5500K", 0,		{ 2.753906, 1, 1.492188, 0 } },
   { "SONY", "NEX-C3", "6500K", 0,		{ 2.996094, 1, 1.351563, 0 } },
 
+  { "SONY", "NEX-F3", Daylight, 0,		{ 2.613281, 1, 1.542969, 0 } },
+  { "SONY", "NEX-F3", Shade, 0,			{ 3.121094, 1, 1.277344, 0 } },
+  { "SONY", "NEX-F3", Cloudy, 0,		{ 2.824219, 1, 1.417969, 0 } },
+  { "SONY", "NEX-F3", Tungsten, 0,		{ 1.601563, 1, 2.703125, 0 } },
+  { "SONY", "NEX-F3", WarmWhiteFluorescent, 0,	{ 1.878906, 1, 2.687500, 0 } },
+  { "SONY", "NEX-F3", CoolWhiteFluorescent, 0,	{ 2.371094, 1, 2.167969, 0 } },
+  { "SONY", "NEX-F3", DayWhiteFluorescent, 0,	{ 2.562500, 1, 1.621094, 0 } },
+  { "SONY", "NEX-F3", DaylightFluorescent, 0,	{ 2.929688, 1, 1.421875, 0 } },
+  { "SONY", "NEX-F3", Flash, 0,			{ 3.105469, 1, 1.394531, 0 } },
+  { "SONY", "NEX-F3", "2500K", 0,		{ 1.390625, 1, 3.222656, 0 } },
+  { "SONY", "NEX-F3", "3200K", 0,		{ 1.792969, 1, 2.363281, 0 } },
+  { "SONY", "NEX-F3", "4500K", 0,		{ 2.351563, 1, 1.726563, 0 } },
+  { "SONY", "NEX-F3", "6000K", 0,		{ 2.800781, 1, 1.429688, 0 } },
+  { "SONY", "NEX-F3", "8500K", 0,		{ 3.285156, 1, 1.210938, 0 } },
+
+  { "SONY", "SLT-A33", Daylight, 0,		{ 2.406250, 1, 1.425781, 0 } },
+  { "SONY", "SLT-A33", Shade, 0,		{ 2.832031, 1, 1.164063, 0 } },
+  { "SONY", "SLT-A33", Cloudy, 0,		{ 2.585938, 1, 1.300781, 0 } },
+  { "SONY", "SLT-A33", Tungsten, 0,		{ 1.468750, 1, 2.585938, 0 } },
+  { "SONY", "SLT-A33", WarmWhiteFluorescent, 0,	{ 1.683594, 1, 2.628906, 0 } },
+  { "SONY", "SLT-A33", CoolWhiteFluorescent, 0,	{ 2.101563, 1, 2.058594, 0 } },
+  { "SONY", "SLT-A33", DayWhiteFluorescent, 0,	{ 2.328125, 1, 1.488281, 0 } },
+  { "SONY", "SLT-A33", DaylightFluorescent, 0,	{ 2.632813, 1, 1.320313, 0 } },
+  { "SONY", "SLT-A33", Flash, 0,		{ 2.691406, 1, 1.234375, 0 } },
+  { "SONY", "SLT-A33", "2500K", 0,		{ 1.257813, 1, 3.093750, 0 } },
+  { "SONY", "SLT-A33", "3200K", 0,		{ 1.648438, 1, 2.246094, 0 } },
+  { "SONY", "SLT-A33", "4500K", 0,		{ 2.171875, 1, 1.613281, 0 } },
+  { "SONY", "SLT-A33", "6000K", 0,		{ 2.562500, 1, 1.316406, 0 } },
+  { "SONY", "SLT-A33", "8500K", 0,		{ 2.964844, 1, 1.097656, 0 } },
+
+  { "SONY", "SLT-A35", Daylight, 0,		{ 2.710938, 1, 1.585938, 0 } },
+  { "SONY", "SLT-A35", Shade, 0,		{ 3.207031, 1, 1.292969, 0 } },
+  { "SONY", "SLT-A35", Cloudy, 0,		{ 2.921875, 1, 1.449219, 0 } },
+  { "SONY", "SLT-A35", Tungsten, 0,		{ 1.621094, 1, 2.863281, 0 } },
+  { "SONY", "SLT-A35", WarmWhiteFluorescent, 0,	{ 1.878906, 1, 2.769531, 0 } },
+  { "SONY", "SLT-A35", CoolWhiteFluorescent, 0,	{ 2.371094, 1, 2.238281, 0 } },
+  { "SONY", "SLT-A35", DayWhiteFluorescent, 0,	{ 2.613281, 1, 1.636719, 0 } },
+  { "SONY", "SLT-A35", DaylightFluorescent, 0,	{ 2.941406, 1, 1.460938, 0 } },
+  { "SONY", "SLT-A35", Flash, 0,		{ 3.042969, 1, 1.390625, 0 } },
+  { "SONY", "SLT-A35", "2500K", 0,		{ 1.375000, 1, 3.425781, 0 } },
+  { "SONY", "SLT-A35", "3200K", 0,		{ 1.832031, 1, 2.488281, 0 } },
+  { "SONY", "SLT-A35", "4500K", 0,		{ 2.437500, 1, 1.789063, 0 } },
+  { "SONY", "SLT-A35", "6000K", 0,		{ 2.894531, 1, 1.464844, 0 } },
+  { "SONY", "SLT-A35", "8500K", 0,		{ 3.363281, 1, 1.226563, 0 } },
+
   { "SONY", "SLT-A37", Daylight, 0,		{ 2.6641, 1, 1.5156, 0 } },
   { "SONY", "SLT-A37", Shade, 0,		{ 3.1836, 1, 1.2539, 0 } },
   { "SONY", "SLT-A37", Cloudy, 0,		{ 2.8828, 1, 1.3906, 0 } },
@@ -8173,6 +9717,46 @@ const wb_data wb_preset[] = {
   { "SONY", "SLT-A37", "5500K", 0,		{ 2.7227, 1, 1.4805, 0 } },
   { "SONY", "SLT-A37", "9200K", 0,		{ 1.8945, 1, 2.4492, 0 } },
 
+  { "SONY", "SLT-A55", Daylight, -3,		{ 2.3320, 1, 1.6758, 0 } },
+  { "SONY", "SLT-A55", Daylight, -2,		{ 2.3984, 1, 1.6172, 0 } },
+  { "SONY", "SLT-A55", Daylight, -1,		{ 2.4727, 1, 1.5625, 0 } },
+  { "SONY", "SLT-A55", Daylight, 0,		{ 2.5469, 1, 1.5117, 0 } },
+  { "SONY", "SLT-A55", Daylight, 1,		{ 2.6172, 1, 1.4609, 0 } },
+  { "SONY", "SLT-A55", Daylight, 2,		{ 2.6992, 1, 1.4102, 0 } },
+  { "SONY", "SLT-A55", Daylight, 3,		{ 2.7773, 1, 1.3633, 0 } },
+  { "SONY", "SLT-A55", Shade, -3,		{ 2.7422, 1, 1.3867, 0 } },
+  { "SONY", "SLT-A55", Shade, -2,		{ 2.8203, 1, 1.3398, 0 } },
+  { "SONY", "SLT-A55", Shade, -1,		{ 2.8984, 1, 1.2969, 0 } },
+  { "SONY", "SLT-A55", Shade, 0,		{ 2.9922, 1, 1.2500, 0 } },
+  { "SONY", "SLT-A55", Shade, 1,		{ 3.0781, 1, 1.2109, 0 } },
+  { "SONY", "SLT-A55", Shade, 2,		{ 3.1680, 1, 1.1719, 0 } },
+  { "SONY", "SLT-A55", Shade, 3,		{ 3.2578, 1, 1.1328, 0 } },
+  { "SONY", "SLT-A55", Cloudy, -3,		{ 2.5039, 1, 1.5352, 0 } },
+  { "SONY", "SLT-A55", Cloudy, -2,		{ 2.5781, 1, 1.4844, 0 } },
+  { "SONY", "SLT-A55", Cloudy, -1,		{ 2.6562, 1, 1.4375, 0 } },
+  { "SONY", "SLT-A55", Cloudy, 0,		{ 2.7344, 1, 1.3906, 0 } },
+  { "SONY", "SLT-A55", Cloudy, 1,		{ 2.8125, 1, 1.3437, 0 } },
+  { "SONY", "SLT-A55", Cloudy, 2,		{ 2.8984, 1, 1.2969, 0 } },
+  { "SONY", "SLT-A55", Cloudy, 3,		{ 2.9844, 1, 1.2539, 0 } },
+  { "SONY", "SLT-A55", Incandescent, -3,	{ 1.4297, 1, 2.9453, 0 } },
+  { "SONY", "SLT-A55", Incandescent, -2,	{ 1.4727, 1, 2.8477, 0 } },
+  { "SONY", "SLT-A55", Incandescent, -1,	{ 1.5234, 1, 2.7461, 0 } },
+  { "SONY", "SLT-A55", Incandescent, 0,		{ 1.5703, 1, 2.6523, 0 } },
+  { "SONY", "SLT-A55", Incandescent, 1,		{ 1.6172, 1, 2.5625, 0 } },
+  { "SONY", "SLT-A55", Incandescent, 2,		{ 1.6680, 1, 2.4727, 0 } },
+  { "SONY", "SLT-A55", Incandescent, 3,		{ 1.7148, 1, 2.3906, 0 } },
+  { "SONY", "SLT-A55", Fluorescent, -1,		{ 1.8008, 1, 2.6562, 0 } },
+  { "SONY", "SLT-A55", Fluorescent, 0,		{ 2.2305, 1, 2.1094, 0 } },
+  { "SONY", "SLT-A55", Fluorescent, 1,		{ 2.4648, 1, 1.5508, 0 } },
+  { "SONY", "SLT-A55", Fluorescent, 2,		{ 2.7969, 1, 1.3828, 0 } },
+  { "SONY", "SLT-A55", Flash, -3,		{ 2.6055, 1, 1.4805, 0 } },
+  { "SONY", "SLT-A55", Flash, -2,		{ 2.6797, 1, 1.4297, 0 } },
+  { "SONY", "SLT-A55", Flash, -1,		{ 2.7578, 1, 1.3828, 0 } },
+  { "SONY", "SLT-A55", Flash, 0,		{ 2.8437, 1, 1.3359, 0 } },
+  { "SONY", "SLT-A55", Flash, 1,		{ 2.9258, 1, 1.2930, 0 } },
+  { "SONY", "SLT-A55", Flash, 2,		{ 3.0156, 1, 1.2461, 0 } },
+  { "SONY", "SLT-A55", Flash, 3,		{ 3.1016, 1, 1.2070, 0 } },
+
   { "SONY", "SLT-A55V", Daylight, -3,		{ 2.3320, 1, 1.6758, 0 } },
   { "SONY", "SLT-A55V", Daylight, -2,		{ 2.3984, 1, 1.6172, 0 } },
   { "SONY", "SLT-A55V", Daylight, -1,		{ 2.4727, 1, 1.5625, 0 } },
@@ -8359,6 +9943,13 @@ const wb_data wb_preset[] = {
   { "SONY", "SLT-A58", DaylightFluorescent, 0,	{ 2.898438, 1, 1.472656, 0 } },
   { "SONY", "SLT-A58", Flash, 0,		{ 2.992188, 1, 1.355469, 0 } },
 
+  { "SONY", "SLT-A65", Daylight, 0,		{ 2.628906, 1, 1.433594, 0 } },
+  { "SONY", "SLT-A65", Shade, 0,		{ 3.132813, 1, 1.191406, 0 } },
+  { "SONY", "SLT-A65", Cloudy, 0,		{ 2.839844, 1, 1.316406, 0 } },
+  { "SONY", "SLT-A65", Tungsten, 0,		{ 1.617188, 1, 2.488281, 0 } },
+  { "SONY", "SLT-A65", Fluorescent, 0,		{ 2.363281, 1, 1.980469, 0 } },
+  { "SONY", "SLT-A65", Flash, 0,		{ 3.070313, 1, 1.238281, 0 } },
+
   { "SONY", "SLT-A65V", Daylight, 0,		{ 2.628906, 1, 1.433594, 0 } },
   { "SONY", "SLT-A65V", Shade, 0,		{ 3.132813, 1, 1.191406, 0 } },
   { "SONY", "SLT-A65V", Cloudy, 0,		{ 2.839844, 1, 1.316406, 0 } },
@@ -8366,6 +9957,16 @@ const wb_data wb_preset[] = {
   { "SONY", "SLT-A65V", Fluorescent, 0,		{ 2.363281, 1, 1.980469, 0 } },
   { "SONY", "SLT-A65V", Flash, 0,		{ 3.070313, 1, 1.238281, 0 } },
 
+  { "SONY", "SLT-A77", Daylight, 0,		{ 2.726563, 1, 1.390625, 0 } },
+  { "SONY", "SLT-A77", Shade, 0,		{ 3.296875, 1, 1.156250, 0 } },
+  { "SONY", "SLT-A77", Cloudy, 0,		{ 2.964844, 1, 1.281250, 0 } },
+  { "SONY", "SLT-A77", Tungsten, 0,		{ 1.636719, 1, 2.417969, 0 } },
+  { "SONY", "SLT-A77", Fluorescent, -1,		{ 1.886719, 1, 2.375000, 0 } },
+  { "SONY", "SLT-A77", Fluorescent, 0,		{ 2.433594, 1, 1.925781, 0 } },
+  { "SONY", "SLT-A77", Fluorescent, 1,		{ 2.589844, 1, 1.464844, 0 } },
+  { "SONY", "SLT-A77", Fluorescent, 2,		{ 2.945313, 1, 1.300781, 0 } },
+  { "SONY", "SLT-A77", Flash, 0,		{ 3.222656, 1, 1.207031, 0 } },
+
   { "SONY", "SLT-A77V", Daylight, 0,		{ 2.726563, 1, 1.390625, 0 } },
   { "SONY", "SLT-A77V", Shade, 0,		{ 3.296875, 1, 1.156250, 0 } },
   { "SONY", "SLT-A77V", Cloudy, 0,		{ 2.964844, 1, 1.281250, 0 } },
@@ -8386,6 +9987,16 @@ const wb_data wb_preset[] = {
   { "SONY", "SLT-A99", DaylightFluorescent, 0,	{ 2.636719, 1, 1.378906, 0 } },
   { "SONY", "SLT-A99", Flash, 0,		{ 2.707031, 1, 1.320313, 0 } },
 
+  { "SONY", "SLT-A99V", Daylight, 0,		{ 2.449219, 1, 1.464844, 0 } },
+  { "SONY", "SLT-A99V", Shade, 0,		{ 2.933594, 1, 1.207031, 0 } },
+  { "SONY", "SLT-A99V", Cloudy, 0,		{ 2.652344, 1, 1.343750, 0 } },
+  { "SONY", "SLT-A99V", Incandescent, 0,	{ 1.496094, 1, 2.667969, 0 } },
+  { "SONY", "SLT-A99V", WarmWhiteFluorescent, 0, { 1.738281, 1, 2.652344, 0 } },
+  { "SONY", "SLT-A99V", CoolWhiteFluorescent, 0, { 2.292969, 1, 2.136719, 0 } },
+  { "SONY", "SLT-A99V", DayWhiteFluorescent, 0,	{ 2.343750, 1, 1.589844, 0 } },
+  { "SONY", "SLT-A99V", DaylightFluorescent, 0,	{ 2.636719, 1, 1.378906, 0 } },
+  { "SONY", "SLT-A99V", Flash, 0,		{ 2.707031, 1, 1.320313, 0 } },
+
 };
 
 const int wb_preset_count = sizeof(wb_preset) / sizeof(wb_data);
