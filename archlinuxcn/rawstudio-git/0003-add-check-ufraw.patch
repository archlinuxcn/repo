diff --git a/ac_openmp.m4 b/ac_openmp.m4
new file mode 100644
index 00000000..32c4ced7
--- /dev/null
+++ b/ac_openmp.m4
@@ -0,0 +1,92 @@
+# openmp.m4 serial 4
+dnl Copyright (C) 2006-2007 Free Software Foundation, Inc.
+dnl This file is free software; the Free Software Foundation
+dnl gives unlimited permission to copy and/or distribute it,
+dnl with or without modifications, as long as this notice is preserved.
+
+dnl This file can be removed once we assume autoconf >= 2.62.
+
+# _AC_LANG_OPENMP
+# ---------------
+# Expands to some language dependent source code for testing the presence of
+# OpenMP.
+AC_DEFUN([_AC_LANG_OPENMP],
+[_AC_LANG_DISPATCH([$0], _AC_LANG, $@)])
+
+# _AC_LANG_OPENMP(C)
+# ------------------
+m4_define([_AC_LANG_OPENMP(C)],
+[
+#ifndef _OPENMP
+ choke me
+#endif
+#include <omp.h>
+int main () { return omp_get_num_threads (); }
+])
+
+# _AC_LANG_OPENMP(C++)
+# --------------------
+m4_copy([_AC_LANG_OPENMP(C)], [_AC_LANG_OPENMP(C++)])
+
+# _AC_LANG_OPENMP(Fortran 77)
+# ---------------------------
+m4_define([_AC_LANG_OPENMP(Fortran 77)],
+[AC_LANG_FUNC_LINK_TRY([omp_get_num_threads])])
+
+# _AC_LANG_OPENMP(Fortran)
+# ---------------------------
+m4_copy([_AC_LANG_OPENMP(Fortran 77)], [_AC_LANG_OPENMP(Fortran)])
+
+# AC_OPENMP
+# ---------
+# Check which options need to be passed to the C compiler to support OpenMP.
+# Set the OPENMP_CFLAGS / OPENMP_CXXFLAGS / OPENMP_FFLAGS variable to these
+# options.
+# The options are necessary at compile time (so the #pragmas are understood)
+# and at link time (so the appropriate library is linked with).
+# This macro takes care to not produce redundant options if $CC $CFLAGS already
+# supports OpenMP. It also is careful to not pass options to compilers that
+# misinterpret them; for example, most compilers accept "-openmp" and create
+# an output file called 'penmp' rather than activating OpenMP support.
+AC_DEFUN([AC_OPENMP],
+[
+  OPENMP_[]_AC_LANG_PREFIX[]FLAGS=
+  AC_ARG_ENABLE([openmp],
+    [AS_HELP_STRING([--disable-openmp], [do not use OpenMP])])
+  if test "$enable_openmp" != no; then
+    AC_CACHE_CHECK([for $CC option to support OpenMP],
+      [ac_cv_prog_[]_AC_LANG_ABBREV[]_openmp],
+      [AC_LINK_IFELSE([_AC_LANG_OPENMP],
+     [ac_cv_prog_[]_AC_LANG_ABBREV[]_openmp='none needed'],
+     [ac_cv_prog_[]_AC_LANG_ABBREV[]_openmp='unsupported'
+      dnl Try these flags:
+      dnl   GCC >= 4.2           -fopenmp
+      dnl   SunPRO C             -xopenmp
+      dnl   Intel C              -openmp
+      dnl   SGI C, PGI C         -mp
+      dnl   Tru64 Compaq C       -omp
+      dnl   IBM C (AIX, Linux)   -qsmp=omp
+      dnl If in this loop a compiler is passed an option that it doesn't
+      dnl understand or that it misinterprets, the AC_LINK_IFELSE test
+      dnl will fail (since we know that it failed without the option),
+      dnl therefore the loop will continue searching for an option, and
+      dnl no output file called 'penmp' or 'mp' is created.
+      for ac_option in -fopenmp -xopenmp -openmp -mp -omp -qsmp=omp; do
+        ac_save_[]_AC_LANG_PREFIX[]FLAGS=$[]_AC_LANG_PREFIX[]FLAGS
+        _AC_LANG_PREFIX[]FLAGS="$[]_AC_LANG_PREFIX[]FLAGS $ac_option"
+        AC_LINK_IFELSE([_AC_LANG_OPENMP],
+          [ac_cv_prog_[]_AC_LANG_ABBREV[]_openmp=$ac_option])
+        _AC_LANG_PREFIX[]FLAGS=$ac_save_[]_AC_LANG_PREFIX[]FLAGS
+        if test "$ac_cv_prog_[]_AC_LANG_ABBREV[]_openmp" != unsupported; then
+          break
+        fi
+      done])])
+    case $ac_cv_prog_[]_AC_LANG_ABBREV[]_openmp in #(
+      "none needed" | unsupported)
+        ;; #(
+      *)
+        OPENMP_[]_AC_LANG_PREFIX[]FLAGS=$ac_cv_prog_[]_AC_LANG_ABBREV[]_openmp ;;
+    esac
+  fi
+  AC_SUBST([OPENMP_]_AC_LANG_PREFIX[FLAGS])
+])
diff --git a/configure.ac b/configure.ac
index b62791cb..e94fb146 100644
--- a/configure.ac
+++ b/configure.ac
@@ -10,9 +10,22 @@ AC_CONFIG_MACRO_DIR([m4])
 AC_SEARCH_LIBS([strerror],[cposix])
 AC_PROG_CC
 AC_PROG_CXX
+AC_PROG_CPP
+AC_PROG_INSTALL
+LT_INIT
 #AC_CHECK_INCLUDES_DEFAULT
 AC_PROG_EGREP
 
+# Make sure that pow is available, trying libm if necessary.
+AC_SEARCH_LIBS(pow, m)
+AC_CHECK_FUNCS(canonicalize_file_name)
+AC_CHECK_FUNCS(strcasestr)
+
+m4_ifndef([AC_OPENMP], [m4_include([ac_openmp.m4])])
+AC_OPENMP
+CFLAGS="$CFLAGS $OPENMP_CFLAGS"
+CXXFLAGS="$CXXFLAGS $OPENMP_CFLAGS"
+
 AC_ARG_ENABLE(experimental, 
 	AS_HELP_STRING(
 		[--enable-experimental],
diff --git a/plugins/load-dcraw/Makefile.am b/plugins/load-dcraw/Makefile.am
index f46b9521..165da256 100644
--- a/plugins/load-dcraw/Makefile.am
+++ b/plugins/load-dcraw/Makefile.am
@@ -35,8 +35,6 @@
 #
 
 AM_CFLAGS =\
-	-Wall\
-	-O4\
 	-DDCRAW_NOMAIN\
 	-DDCRAW_NOLCMS\
 	-DWITH_MMAP_HACK\
@@ -47,7 +45,8 @@ AM_CFLAGS =\
 	-I$(top_srcdir)/
 
 AM_CXXFLAGS = $(AM_CFLAGS)
-AM_CPPFLAGS = -DUFRAW_LOCALEDIR=\"$(datadir)/locale\"
+AM_CPPFLAGS = -DDCRAW_NOMAIN \
+	-DUFRAW_LOCALEDIR=\"$(datadir)/locale\"
 
 
 lib_LTLIBRARIES = load_dcraw.la
