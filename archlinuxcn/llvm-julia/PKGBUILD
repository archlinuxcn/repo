# Maintainer: Evangelos Foutras <evangelos@foutrelis.com>
# Contributor: Jan "heftig" Steffens <jan.steffens@gmail.com>

pkgname=(llvm-julia llvm-libs-julia llvm-ocaml-julia)
pkgver=12.0.0
pkgrel=2
arch=(i686 x86_64 armv7h aarch64)
url="https://llvm.org/"
license=('custom:Apache 2.0 with LLVM Exception')
makedepends=(cmake ninja libffi libedit ncurses libxml2 ocaml ocaml-ctypes ocaml-findlib
             python-setuptools python-psutil python-sphinx python-recommonmark)
options=('staticlibs' '!strip')
_source_base=https://github.com/llvm/llvm-project/releases/download/llvmorg-$pkgver
source=($_source_base/llvm-$pkgver.src.tar.xz
        llvm7-revert-D44485.patch
        llvm-D75072-SCEV-add-type.patch
        llvm-julia-tsan-custom-as.patch
        llvm-D93154-globalisel-as.patch
        llvm-D94813-mergeicmps.patch
        llvm-AArch64-FastIsel-bug.patch
        llvm-D97435-AArch64-movaddrreg.patch
        llvm-D97571-AArch64-loh.patch # LLVM 13
        llvm-aarch64-addrspace.patch # LLVM 13
        # Archlinux Patch
        force-visibility-of-llvm-Any-to-external.patch
        llvm-link-with-Bsymbolic-functions.patch
        add-fno-semantic-interposition.patch
        no-strict-aliasing-DwarfCompileUnit.patch
        llvm-config.h)
sha256sums=('49dc47c8697a1a0abd4ee51629a696d7bfe803662f2a7252a3b16fc75f3a8b50'
            '1629672afa288b89c09559ecd3c18b8606603f89ebfaa9ebd2fcd671079ea938'
            '39c37fd49d1d8b992b9e432d87fdcd70554b293763e05e518d0e96623f67388c'
            '3a3d98f8f457dfd9c5b5eaeb1090c4f960ee605da1496d83e5a452e32620902b'
            'f27eb3fbb280bcf84a62edac45316c062489e33e2e4ee91f90ffa83b3e69bccc'
            '49f833616fecf156c0069fac98357ba4792a426ad7b495f2662dfb37b907be32'
            '09fa7fa3389561e53ab58df3d345decb781faf403d2f88645c93f01a646b5bd4'
            'e5c6391061ad461bb65bad8dcf9d0aa9bce9ec7176d5c09e1cb723ae2597c92a'
            'd66c41901b734c8ba2b9f2e12ca879911a46d551e11fa79f8547061ede621f89'
            'd5c86ea2d9c51938a8776d3130b35c34da77eeb3d7c6bb4a132ef71cddfb6b32'
            '98721af5a36af2a8e88c14a81b16d3929b12515d7d2d1ba385eb243dca3c32cb'
            '560ce1e206c19f4b86f4c583b743db0ad47a610418999350710aafd60ae50fcd'
            'fc8c64267a5d179e9fc24fb2bc6150edef2598c83f5b2d138d14e05ce9f4e345'
            'd1eff24508e35aae6c26a943dbaa3ef5acb60a145b008fd1ef9ac6f6c4faa662'
            '597dc5968c695bbdbb0eac9e8eb5117fcd2773bc91edf5ec103ecffffab8bc48')

_FLTO=''

# _FLTO='-flto'
# if [[ "${CARCH}" == "aarch64" ]] || [[ "${CARCH}" == "armv7h" ]]; then
#     # GCC miscompiles LLVM on AArch64 with LTO and segfault on arm during linking...
#     _FLTO=''
# fi

apply_julia_patch() {
  local name=$1
  msg "Applying Julia patch $name"
  patch -p1 < ../$name.patch
}

apply_julia_proj_patch() {
  local name=$1
  msg "Applying Julia patch $name"
  patch -p2 < ../$name.patch
}

prepare() {
  rm -rf bin/
  mkdir -p bin/

  for p in cc c++ gcc g++; do
    cat > bin/$p <<EOF
#!/bin/bash
exec /usr/bin/$p $_FLTO "\${@}"
EOF
    chmod +x bin/$p
  done

  cd "$srcdir/llvm-$pkgver.src"
  mkdir build

  apply_julia_patch llvm7-revert-D44485
  apply_julia_patch llvm-D75072-SCEV-add-type
  apply_julia_patch llvm-julia-tsan-custom-as
  apply_julia_patch llvm-D93154-globalisel-as
  apply_julia_patch llvm-D94813-mergeicmps
  apply_julia_proj_patch llvm-AArch64-FastIsel-bug
  apply_julia_patch llvm-D97435-AArch64-movaddrreg
  apply_julia_proj_patch llvm-D97571-AArch64-loh
  apply_julia_proj_patch llvm-aarch64-addrspace

  # Arch patches
  msg "Applying Arch patches"

  # https://bugs.llvm.org/show_bug.cgi?id=48992
  patch -Np2 -i ../force-visibility-of-llvm-Any-to-external.patch

  # https://bugs.archlinux.org/task/70697
  patch -Np2 -i ../llvm-link-with-Bsymbolic-functions.patch
  # https://reviews.llvm.org/D102453
  patch -Np2 -i ../add-fno-semantic-interposition.patch

  # Work around intermittent 'clang -O -g' crashes
  # https://bugs.llvm.org/show_bug.cgi?id=50611#c3
  patch -Np2 -i ../no-strict-aliasing-DwarfCompileUnit.patch
}

build() {
  cd "$srcdir/llvm-$pkgver.src/build"

  export PATH="${srcdir}/bin:${PATH}"
  CFLAGS+=" -ffile-prefix-map=${srcdir}=${DBGSRCDIR:-/usr/src/debug}"
  CXXFLAGS+=" -ffile-prefix-map=${srcdir}=${DBGSRCDIR:-/usr/src/debug}"
  CFLAGS+=' -ggdb1 -O3 -fasynchronous-unwind-tables'
  CXXFLAGS+=' -ggdb1 -O3 -fasynchronous-unwind-tables'
  LDFLAGS+=' -O3 -fasynchronous-unwind-tables'

  cmake .. -G Ninja \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DLLVM_HOST_TRIPLE=$CHOST \
        -DLLVM_BUILD_LLVM_DYLIB=ON \
        -DLLVM_LINK_LLVM_DYLIB=ON \
        -DLLVM_INSTALL_UTILS=ON \
        -DLLVM_ENABLE_RTTI=ON \
        -DLLVM_ENABLE_FFI=ON \
        -DLLVM_BUILD_TESTS=ON \
        -DLLVM_BUILD_DOCS=ON \
        -DLLVM_ENABLE_SPHINX=ON \
        -DLLVM_ENABLE_DOXYGEN=OFF \
        -DSPHINX_WARNINGS_AS_ERRORS=OFF \
        -DLLVM_BINUTILS_INCDIR=/usr/include
  ninja all ocaml_doc
}

package_llvm-julia() {
  pkgdesc="Collection of modular and reusable compiler and toolchain technologies (with patch for julia)"
  depends=("llvm-libs-julia=$pkgver-$pkgrel" perl)
  optdepends=('python-setuptools: for using lit (LLVM Integrated Tester)')
  conflicts=(llvm)
  provides=("llvm=$pkgver-$pkgrel")

  cd "$srcdir/llvm-$pkgver.src/build"

  DESTDIR="$pkgdir" ninja install

  # Include lit for running lit-based tests in other projects
  pushd ../utils/lit
  python3 setup.py install --root="$pkgdir" -O1
  popd

  # Remove documentation sources
  rm -r "$pkgdir"/usr/share/doc/llvm/html/{_sources,.buildinfo}

  # The runtime libraries go into llvm-libs
  mv -f "$pkgdir"/usr/lib/lib{LLVM,LTO,Remarks}*.so* "$srcdir"
  mv -f "$pkgdir"/usr/lib/LLVMgold.so "$srcdir"

  # OCaml bindings go to a separate package
  rm -rf "$srcdir"/ocaml.{lib,doc}
  mv "$pkgdir/usr/lib/ocaml" "$srcdir/ocaml.lib"
  mv "$pkgdir/usr/share/doc/llvm/ocaml-html" "$srcdir/ocaml.doc"

  if [[ $CARCH == x86_64 ]]; then
    # Needed for multilib (https://bugs.archlinux.org/task/29951)
    # Header stub is taken from Fedora
    mv "$pkgdir/usr/include/llvm/Config/llvm-config"{,-64}.h
    cp "$srcdir/llvm-config.h" "$pkgdir/usr/include/llvm/Config/llvm-config.h"
  fi

  install -Dm644 ../LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}

package_llvm-libs-julia() {
  pkgdesc="LLVM runtime libraries (with patch for julia)"
  depends=(gcc-libs zlib libffi libedit ncurses libxml2)
  conflicts=("llvm-libs")
  provides=("llvm-libs=$pkgver-$pkgrel")

  install -d "$pkgdir/usr/lib"
  cp -P \
     "$srcdir"/lib{LLVM,LTO,Remarks}*.so* \
     "$srcdir"/LLVMgold.so \
     "$pkgdir/usr/lib/"

  # Symlink LLVMgold.so from /usr/lib/bfd-plugins
  # https://bugs.archlinux.org/task/28479
  install -d "$pkgdir/usr/lib/bfd-plugins"
  ln -s ../LLVMgold.so "$pkgdir/usr/lib/bfd-plugins/LLVMgold.so"

  install -Dm644 "$srcdir/llvm-$pkgver.src/LICENSE.TXT" \
          "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}

package_llvm-ocaml-julia() {
  _ocaml_ver=$(ocamlc --version)

  pkgdesc="OCaml bindings for LLVM (with patch for julia)"
  depends=("llvm-julia=$pkgver-$pkgrel" "ocaml=$_ocaml_ver" ocaml-ctypes)
  conflicts=("llvm-ocaml")
  provides=("llvm-ocaml=$pkgver-$pkgrel")

  install -d "$pkgdir"/{usr/lib,usr/share/doc/llvm-ocaml}
  cp -a "$srcdir/ocaml.lib" "$pkgdir/usr/lib/ocaml"
  cp -a "$srcdir/ocaml.doc" "$pkgdir/usr/share/doc/llvm-ocaml/html"

  install -Dm644 "$srcdir/llvm-$pkgver.src/LICENSE.TXT" \
          "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}
