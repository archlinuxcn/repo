# Maintainer: Brendan Szymanski <bscubed@pm.me>

_pkgname=yuzu
pkgname=$_pkgname-early-access
epoch=2
pkgver=4176
pkgrel=3
pkgdesc="An experimental open-source Nintendo Switch emulator/debugger (early access version)"
arch=('i686' 'x86_64')
url="https://yuzu-emu.org/"
license=('GPL2')
depends=('boost-libs' 'shared-mime-info' 'hicolor-icon-theme' 'sdl2' 'qt5-base' 'qt5-multimedia' 'qt5-webengine' 'libxkbcommon-x11' 'fmt' 'libzip' 'opus' 'libfdk-aac' 'lz4' 'openssl' 'zstd' 'cubeb' 'enet' 'libinih' 'discord-rpc' 'cpp-httplib' 'enet') 
makedepends=('llvm' 'git' 'glslang' 'cmake' 'vulkan-memory-allocator' 'vulkan-utility-libraries' 'ninja' 'graphviz' 'doxygen' 'boost' 'catch2' 'nlohmann-json' 'rapidjson' 'qt5-tools' 'desktop-file-utils' 'robin-map' 'cpp-jwt' 'vulkan-headers' 'spirv-headers' 'dos2unix' 'clang' 'python' 'renderdoc' 'gamemode' 'perl' 'yasm' 'python-jsonschema' 'python-jinja')
optdepends=('qt5-wayland: for Wayland support')
provides=('yuzu')
conflicts=('yuzu')
source=("git+https://source.hodakov.me/hdkv/yuzu.git"
yuzu-mainline::"git+https://notabug.org/yuzu-emu-mirror/yuzu-mainline")
options=('!buildflags') #[heavysink] Disable _FORTIFY_SOURCE for temporary fix for Bayonetta 3
sha256sums=('SKIP'
            'SKIP')

prepare() {    
  cd ${srcdir}/yuzu-mainline
  cp -Rf .git* $srcdir/yuzu/
 
  cd $srcdir/yuzu
  for i in $(git config --file .gitmodules --get-regexp path | awk '{ print $2 }') ; do
      rm -rf "$i"
  done

  git submodule set-url externals/mbedtls https://github.com/yuzu-mirror/mbedtls
  git submodule set-url externals/sirit https://github.com/yuzu-mirror/sirit
  git submodule set-url externals/dynarmic https://github.com/lioncash/dynarmic
  git submodule update --init --remote externals/sirit
  git submodule update --init --remote externals/libadrenotools
  git submodule update --init --remote --recursive externals/nx_tzdb
  git submodule update --init --remote externals/simpleini
  git submodule update --init --remote externals/ffmpeg
  git submodule update --init --remote externals/mbedtls
  git submodule update --init --remote externals/dynarmic
  git submodule update --init --remote externals/xbyak

  cd externals/mbedtls
  git checkout 8c88150
  cd ../sirit
  git checkout ab75463
  cd ../libadrenotools
  git checkout 5cd3f5c
  cd ../dynarmic
  git checkout ba8192d
  cd ../xbyak
  git checkout a1ac375
  cd ../nx_tzdb/tzdb_to_nx
  git checkout 9792969
  cd ../../simpleini
  git checkout 382ddbb
  cd ../ffmpeg/ffmpeg
  git checkout 9c1294e

  cd $srcdir/yuzu
  find . -name "CMakeLists.txt" -exec sed -i 's/^.*-Werror$/-W/g' {} +
  find . -name "CMakeLists.txt" -exec sed -i 's/^.*-Werror=.*$/ /g' {} +
  find . -name "CMakeLists.txt" -exec sed -i 's/-Werror/-W/g' {} +
  sed -i -e 's/0.11 //g' CMakeLists.txt
  sed -i -e 's/1.3.238/1.3.233/g' CMakeLists.txt
  sed -i -e 's/xbyak 6/xbyak 7.0/g' CMakeLists.txt
  sed -i -e 's/httplib 0.12/httplib/g' CMakeLists.txt
  sed -i -e 's/--quiet //g' src/video_core/host_shaders/CMakeLists.txt
  sed -i -e 's#${SPIRV_HEADER_FILE} ${SOURCE_FILE}#${SPIRV_HEADER_FILE} ${SOURCE_FILE} 2>/dev/null#g' src/video_core/host_shaders/CMakeLists.txt
  sed -i -e '1i #include <cstring>' src/video_core/textures/bcn.cpp
  sed -i -e '/Name=yuzu/ s/$/ Early Access/' dist/yuzu.desktop
  sed -i -e '/yuzu %f/a StartupWMClass=yuzu' dist/yuzu.desktop
  sed -i -e 's_^MimeType=.*_&application/x-nx-nsp;application/x-nx-xci;_' dist/yuzu.desktop
  sed -i -e 's| (%2)||' src/yuzu/aboutdialog.ui

  perl -0777 -i.original -pe 's/(\s*target_compile_options\(video_core PRIVATE\s*-Wno-sign-conversion)/$1\n        -msse4.1/igs' src/video_core/CMakeLists.txt
}
build() {
  cd yuzu
	mkdir -p build && cd build

  export CXXFLAGS+=' -Wno-switch'
  cmake -GNinja .. \
    -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=ON \
    -DTITLE_BAR_FORMAT_IDLE="yuzu Early Access $pkgver" \
    -DTITLE_BAR_FORMAT_RUNNING="yuzu Early Access $pkgver | {3}" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_BUILD_TYPE=Release \
    -DYUZU_ENABLE_COMPATIBILITY_REPORTING=OFF \
    -DENABLE_COMPATIBILITY_LIST_DOWNLOAD=OFF \
    -DYUZU_USE_QT_WEB_ENGINE=ON \
    -DUSE_DISCORD_PRESENCE=ON \
    -DENABLE_QT_TRANSLATION=ON \
    -DYUZU_USE_BUNDLED_FFMPEG=ON \
    -DYUZU_USE_BUNDLED_QT=OFF \
    -DYUZU_USE_EXTERNAL_SDL2=OFF \
    -DSIRIT_USE_SYSTEM_SPIRV_HEADERS=ON \
    -DYUZU_CHECK_SUBMODULES=OFF \
    -DYUZU_USE_EXTERNAL_VULKAN_HEADERS=OFF \
    -DYUZU_USE_EXTERNAL_VULKAN_UTILITY_LIBRARIES=OFF \
    -DYUZU_USE_FASTER_LD=OFF \
    -DYUZU_USE_PRECOMPILED_HEADERS=OFF \
	-DYUZU_USE_QT_MULTIMEDIA=ON \
    -DYUZU_DOWNLOAD_TIME_ZONE_DATA=ON \
    -DYUZU_TESTS=OFF
  ninja
}

package() {
	cd yuzu/build
	DESTDIR="$pkgdir" ninja install

    rm -rf $pkgdir/usr/lib $pkgdir/usr/include 
}

