# Maintainer: Butui Hu <hot123tea123@gmail.com>

_CUDA_ARCH_LIST="60;61;62;70;72;75;80;86;89;90"
pkgname=python-nvidia-dali
_pkgname=dali
pkgver=1.40.0
pkgrel=1
pkgdesc='A library containing both highly optimized building blocks and an execution engine for data pre-processing in deep learning applications'
arch=('x86_64')
url='https://github.com/NVIDIA/DALI'
license=('Apache-2.0')
depends=(
  abseil-cpp
  cfitsio
  cuda
  ffmpeg
  gcc-libs
  glibc
  libcudart.so
  libsndfile
  libtar
  libtiff
  lmdb
  opencv
  protobuf
  python-astunparse
  python-dm-tree
  python-gast
  python-six
)
makedepends=(
  python-build
  python-installer
  python-wheel
  clang
  cmake
  git
  git-lfs
  python-setuptools
  python-black
)
optdepends=(
  python-pytorch
  python-tensorflow
)
options=(!emptydirs !lto)
source=("${pkgname}::git+https://github.com/NVIDIA/DALI.git#tag=v${pkgver}"
)
sha512sums=('033a6b8e082ddd3fd5edbae9ac2417100eeefe82656940bac9ac2712f2bcc446e0c28cab8122b5932eccc7f7c2b5e80648e855254b6dab2fced76ab9f61ba4f3')

prepare() {
  cd "${srcdir}/${pkgname}"
  git lfs install
  git submodule update --init --recursive
  # quick fix for https://github.com/archlinuxcn/repo/issues/2877
  export CXXFLAGS=${CXXFLAGS/-Wp,-D_GLIBCXX_ASSERTIONS}
  # fix lib not found error
  export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${srcdir}/build/dali/python/nvidia/dali:${srcdir}/build/lib"
  # fix missing cstdint header
  # ref https://github.com/NVIDIA/DALI/issues/5591
  sed -i '18i#include <cstdint>' dali/util/uri.h
}

build() {
  cmake \
    -B "${srcdir}/build" \
    -DBUILD_BENCHMARK=OFF \
    -DBUILD_CFITSIO=ON \
    -DBUILD_CUFILE=ON \
    -DBUILD_FFTS=ON \
    -DBUILD_LIBSND=ON \
    -DBUILD_LIBTAR=ON \
    -DBUILD_LIBTIFF=ON \
    -DBUILD_LMDB=ON \
    -DBUILD_NVDEC=ON \
    -DBUILD_NVJPEG2K=OFF \
    -DBUILD_NVJPEG=OFF \
    -DBUILD_NVML=ON \
    -DBUILD_NVOF=ON \
    -DBUILD_NVTX=OFF \
    -DBUILD_PROTOBUF=ON \
    -DBUILD_PYTHON=ON \
    -DBUILD_TEST=OFF \
    -DCMAKE_BUILD_TYPE=None \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_SKIP_RPATH=ON \
    -DCUDA_TARGET_ARCHS=${_CUDA_ARCH_LIST} \
    -DProtobuf_USE_STATIC_LIBS=OFF \
    -DVERBOSE_LOGS=ON \
    -DWITH_DYNAMIC_CUDA_TOOLKIT=ON \
    -S "${srcdir}/${pkgname}"
  make -C "${srcdir}/build"
  cd "${srcdir}/build/dali/python"
  python -m build --wheel --no-isolation
  # built tf plugin
  cmake -B ${srcdir}/build-tf \
    -DCUDA_VERSION=12.5.1 \
    -S ${srcdir}/${pkgname}/dali_tf_plugin
  make -C ${srcdir}/build-tf
}

package() {
  local site_packages=$(python -c "import site; print(site.getsitepackages()[0])")
  make -C "${srcdir}/build" DESTDIR="${pkgdir}" install
  cd "${srcdir}/build/dali/python"
  python -m installer --destdir="${pkgdir}" dist/*.whl
  # create softlink to save space
  ln -sf "${site_packages}/nvidia/dali/libdali.so" "${pkgdir}/usr/lib/libdali.so"
  ln -sf "${site_packages}/nvidia/dali/libdali_core.so" "${pkgdir}/usr/lib/libdali_core.so"
  ln -sf "${site_packages}/nvidia/dali/libdali_imgcodec.so" "${pkgdir}/usr/lib/libdali_imgcodec.so"
  ln -sf "${site_packages}/nvidia/dali/libdali_kernels.so" "${pkgdir}/usr/lib/libdali_kernels.so"
  ln -sf "${site_packages}/nvidia/dali/libdali_operators.so" "${pkgdir}/usr/lib/libdali_operators.so"
  # install tf plugin
  make -C ${srcdir}/build-tf
  python setup.py install --root="${pkgdir}" --optimize=1 --skip-build
}
# vim:set ts=2 sw=2 et:
