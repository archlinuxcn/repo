From 7f7b890cc786e3b33d2ac4c8c247b2770dfd13dc Mon Sep 17 00:00:00 2001
From: Yichao Yu <yyc1992@gmail.com>
Date: Fri, 24 Oct 2025 09:43:36 -0400
Subject: [PATCH 1/2] Support LLVM 21 in LLVMExtra

---
 deps/LLVMExtra/include/LLVMExtra.h |  6 ++++++
 deps/LLVMExtra/lib/Core.cpp        | 17 +++++++++++++++++
 2 files changed, 23 insertions(+)

diff --git a/deps/LLVMExtra/include/LLVMExtra.h b/deps/LLVMExtra/include/LLVMExtra.h
index 0773ca49..bcc40bfb 100644
--- a/deps/LLVMExtra/include/LLVMExtra.h
+++ b/deps/LLVMExtra/include/LLVMExtra.h
@@ -162,8 +162,10 @@ void LLVMReplaceMDNodeOperandWith(LLVMValueRef V, unsigned Index,
 #endif
 
 // Constant data
+#if LLVM_VERSION_MAJOR < 21
 LLVMValueRef LLVMConstDataArray(LLVMTypeRef ElementTy, const void *Data,
                                 unsigned NumElements);
+#endif
 
 // Missing opaque pointer APIs
 #if LLVM_VERSION_MAJOR < 17
@@ -258,5 +260,9 @@ LLVMErrorRef LLVMRunJuliaPassesOnFunction(LLVMValueRef F, const char *Passes,
 // More DataLayout queries
 unsigned LLVMGlobalsAddressSpace(LLVMTargetDataRef TD);
 
+#if LLVM_VERSION_MAJOR >= 21
+LLVMContextRef LLVMOrcThreadSafeContextGetContext(LLVMOrcThreadSafeContextRef TSCtx);
+#endif
+
 LLVM_C_EXTERN_C_END
 #endif
diff --git a/deps/LLVMExtra/lib/Core.cpp b/deps/LLVMExtra/lib/Core.cpp
index 1d2311b7..d583052c 100644
--- a/deps/LLVMExtra/lib/Core.cpp
+++ b/deps/LLVMExtra/lib/Core.cpp
@@ -569,12 +569,14 @@ void LLVMReplaceMDNodeOperandWith(LLVMValueRef V, unsigned Index,
 // Constant data
 //
 
+#if LLVM_VERSION_MAJOR < 21
 LLVMValueRef LLVMConstDataArray(LLVMTypeRef ElementTy, const void *Data,
                                 unsigned NumElements) {
   StringRef S((const char *)Data,
               NumElements * unwrap(ElementTy)->getPrimitiveSizeInBits() / 8);
   return wrap(ConstantDataArray::getRaw(S, NumElements, unwrap(ElementTy)));
 }
+#endif
 
 
 //
@@ -807,3 +809,18 @@ LLVMContextRef LLVMGetBuilderContext(LLVMBuilderRef Builder) {
 unsigned LLVMGlobalsAddressSpace(LLVMTargetDataRef TD) {
   return unwrap(TD)->getDefaultGlobalsAddressSpace();
 }
+
+#if LLVM_VERSION_MAJOR >= 21
+
+DEFINE_SIMPLE_CONVERSION_FUNCTIONS(orc::ThreadSafeContext, LLVMOrcThreadSafeContextRef)
+
+//
+// Removed from LLVM and unsafe but it's only used to provide an unsafe API
+// on the julia side anyway
+//
+
+LLVMContextRef LLVMOrcThreadSafeContextGetContext(LLVMOrcThreadSafeContextRef TSCtx) {
+  return wrap(unwrap(TSCtx)->withContextDo([] (LLVMContext *ctx) { return ctx; }));
+}
+
+#endif
-- 
2.51.2

