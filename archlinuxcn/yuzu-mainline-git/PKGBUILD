# Maintainer: Brendan Szymanski <bscubed@pm.me>

_pkgname=yuzu
pkgname=$_pkgname-mainline-git
epoch=3
pkgver=1733.r0.g7ffac53c9
pkgrel=3
pkgdesc="An experimental open-source Nintendo Switch emulator/debugger (mainline GIT version)"
arch=('i686' 'x86_64')
url="https://github.com/yuzu-emu/yuzu-mainline"
license=('GPL2')
depends=('boost-libs' 'shared-mime-info' 'hicolor-icon-theme' 'sdl2' 'qt5-base' 'qt5-multimedia' 'qt5-webengine' 'libxkbcommon-x11' 'fmt' 'libzip' 'opus' 'libfdk-aac' 'lz4' 'openssl' 'zstd' 'cubeb' 'enet' 'libinih' 'discord-rpc' 'cpp-httplib')
makedepends=('llvm' 'git' 'glslang' 'cmake' 'vulkan-memory-allocator' 'ninja' 'graphviz' 'doxygen' 'clang' 'boost' 'catch2' 'nlohmann-json' 'rapidjson' 'qt5-tools' 'desktop-file-utils' 'robin-map' 'cpp-jwt' 'vulkan-headers' 'spirv-headers' 'dos2unix' 'python' 'gamemode' 'stb' 'vulkan-utility-libraries' 'python-jsonschema' 'python-jinja')
optdepends=('qt5-wayland: for Wayland support')
provides=('yuzu')
conflicts=('yuzu')
replaces=('yuzu-canary-git')
source=("$_pkgname::git+https://notabug.org/yuzu-emu-mirror/yuzu-mainline")
md5sums=('SKIP')

pkgver() {
	cd "$srcdir/$_pkgname"
  git describe --long --tags `git rev-list --tags --max-count=1` | sed 's/\([^-]*-g\)/r\1/;s/mainline-0-//g;s/-/./g'
}

prepare() {
  cd "$srcdir/$_pkgname"

  git submodule set-url externals/mbedtls https://github.com/yuzu-mirror/mbedtls
  git submodule set-url externals/sirit https://github.com/yuzu-mirror/sirit
  git submodule set-url externals/dynarmic https://github.com/lioncash/dynarmic
  git submodule update --init --remote externals/sirit
  git submodule update --init --remote externals/mbedtls
  git submodule update --init --remote externals/libadrenotools
  git submodule update --init --remote --recursive externals/nx_tzdb
  git submodule update --init --remote externals/simpleini
  git submodule update --init --remote externals/ffmpeg
  git submodule update --init --remote externals/mbedtls
  git submodule update --init --remote externals/dynarmic
  git submodule update --init --remote externals/xbyak

  cd externals/mbedtls
  git checkout 8c88150
  cd ../sirit
  git checkout ab75463
  cd ../libadrenotools
  git checkout 5cd3f5c
  cd ../dynarmic
  git checkout ba8192d
  cd ../xbyak
  git checkout a1ac375
  cd ../nx_tzdb/tzdb_to_nx
  git checkout 9792969
  cd ../../simpleini
  git checkout 382ddbb
  cd ../ffmpeg/ffmpeg
  git checkout 9c1294e

  cd "$srcdir/$_pkgname"
  find . -name "CMakeLists.txt" -exec sed -i 's/^.*-Werror$/-W/g' {} +
  find . -name "CMakeLists.txt" -exec sed -i 's/^.*-Werror=.*$/ /g' {} +
  find . -name "CMakeLists.txt" -exec sed -i 's/-Werror/-W/g' {} +
  sed -i -e 's/0.11 //g' CMakeLists.txt
  sed -i -e 's/1.3.238/1.3.233/g' CMakeLists.txt
  sed -i -e 's/xbyak 6/xbyak 7.0/g' CMakeLists.txt
  sed -i -e 's/httplib 0.12/httplib/g' CMakeLists.txt
  sed -i -e '/#define VK_NO_PROTOTYPES/a #define VK_ENABLE_BETA_EXTENSIONS' src/video_core/vulkan_common/vulkan_wrapper.h
  sed -i -e 's/--quiet //g' src/video_core/host_shaders/CMakeLists.txt
  sed -i -e '1i #include <cstring>' src/video_core/textures/bcn.cpp
  sed -i -e 's#${SPIRV_HEADER_FILE} ${SOURCE_FILE}#${SPIRV_HEADER_FILE} ${SOURCE_FILE} 2>/dev/null#g' src/video_core/host_shaders/CMakeLists.txt
  sed -i -e '/Name=yuzu/ s/$/ Mainline/' dist/org.yuzu_emu.yuzu.desktop
  sed -i -e '/yuzu %f/a StartupWMClass=yuzu' dist/org.yuzu_emu.yuzu.desktop
  sed -i -e 's_^MimeType=.*_&application/x-nx-nsp;application/x-nx-xci;_' dist/org.yuzu_emu.yuzu.desktop
  sed -i -e 's| (%2)||' src/yuzu/aboutdialog.ui
}

build() {
	# Trick the compiler into thinking we're building from a continuous
	# integration tool so the build number is correctly shown in the title
	cd "$srcdir/$_pkgname"
	export CI=true
	export TRAVIS=true
	export TRAVIS_REPO_SLUG=yuzu-emu/yuzu-mainline
	export TRAVIS_TAG=$(git describe --tags)

	mkdir -p build && cd build
  cmake .. -GNinja \
    -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=ON \
    -DTITLE_BAR_FORMAT_IDLE="yuzu Mainline $pkgver" \
    -DTITLE_BAR_FORMAT_RUNNING="yuzu Mainline $pkgver | {3}" \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_BUILD_TYPE=Release \
    -DYUZU_ENABLE_COMPATIBILITY_REPORTING=ON \
    -DENABLE_COMPATIBILITY_LIST_DOWNLOAD=ON \
    -DYUZU_USE_QT_WEB_ENGINE=ON \
    -DUSE_DISCORD_PRESENCE=ON \
    -DENABLE_QT_TRANSLATION=ON \
    -DYUZU_USE_BUNDLED_FFMPEG=OFF \
    -DYUZU_USE_BUNDLED_QT=OFF \
    -DYUZU_USE_EXTERNAL_SDL2=OFF \
    -DSIRIT_USE_SYSTEM_SPIRV_HEADERS=ON \
    -DYUZU_CHECK_SUBMODULES=OFF \
    -DYUZU_USE_EXTERNAL_VULKAN_HEADERS=OFF \
    -DYUZU_USE_FASTER_LD=OFF \
    -DYUZU_USE_PRECOMPILED_HEADERS=OFF \
	-DYUZU_USE_QT_MULTIMEDIA=ON \
    -DYUZU_DOWNLOAD_TIME_ZONE_DATA=ON \
    -DYUZU_TESTS=OFF \
    -DYUZU_USE_EXTERNAL_VULKAN_UTILITY_LIBRARIES=OFF
 ninja
}

package() {
	cd "$srcdir/$_pkgname/build"
	DESTDIR="$pkgdir" ninja install
}
