# Maintainer: Rocket Aaron <i at rocka dot me>
# Contributor: Kabir Kwatra <kabir@kwatra.me>
# Contributor: George Rawlinson <george@rawlinson.net.nz>

_pkgname=cloudflared
pkgname="$_pkgname-git"
pkgver=2024.3.0.r0.gbb29a0e1
pkgrel=2
pkgdesc='Command-line client for Cloudflare Tunnel'
arch=('x86_64' 'armv7h' 'aarch64')
url='https://github.com/cloudflare/cloudflared'
license=('Apache-2.0')
depends=('glibc')
makedepends=('git' 'go')
provides=("$_pkgname")
conflicts=("$_pkgname")
backup=("etc/$_pkgname/config.yml")
source=(
  "$_pkgname::git+$url.git"
  'config.yml'
  'systemd.service'
  'sysusers.conf'
  'tmpfiles.conf'
)
sha256sums=('SKIP'
            '672fe9c3d8acbe6fd89ef7cf245824b087870888d20f1fe04ce8668f4bc8c689'
            '8d96bb81fc971c182288ce2b10156a3b57ea8b2c893165d4408a848a39714839'
            '38e40336f87e4381abba991d5a1c250dc9bfbab1fa64acfb5e976199ebe28d68'
            '9a115ff8ab607335141b19f266bd16d1ba05fb9b73b61fdb894cf933b8c13617')

pkgver() {
  cd "$_pkgname"

  git describe --long --tags | sed 's/^v//;s/\([^-]*-g\)/r\1/;s/-/./g'
}

prepare() {
  cd "$_pkgname"

  # create directory for build output
  mkdir build
}

build() {
  cd "$_pkgname"

  # define buildtime for use in man page & binary
  local build_time="$(date -d@"$SOURCE_DATE_EPOCH" +%Y%m%d-%H:%M:%S)"

  # generate man page
  sed -e "s/\${VERSION}/${pkgver}/" \
      -e "s/\${DATE}/${build_time}/" \
    cloudflared_man_template > "build/$_pkgname.1"

  # verify go modules
  go mod verify

  # go flags
  # https://wiki.archlinux.org/title/Go_package_guidelines#Supporting_debug_packages
  export CGO_CPPFLAGS="${CPPFLAGS}"
  export CGO_CFLAGS="${CFLAGS}"
  export CGO_CXXFLAGS="${CXXFLAGS}"
  export CGO_LDFLAGS="${LDFLAGS}"
  export GOPATH="${srcdir}"
  export GOFLAGS="-buildmode=pie -mod=readonly -modcacherw"

  # build cloudflared
  go build -v \
    -ldflags "-compressdwarf=false \
      -linkmode external \
      -X main.Version=${pkgver} \
      -X main.BuildTime=${build_time}" \
    -o build \
    ./cmd/...
}

check() {
  cd "$_pkgname"
  go test ./...
}

package() {
  # systemd integration
  install -vDm644 systemd.service "$pkgdir/usr/lib/systemd/system/$_pkgname.service"
  install -vDm644 sysusers.conf "$pkgdir/usr/lib/sysusers.d/$_pkgname.conf"
  install -vDm644 tmpfiles.conf "$pkgdir/usr/lib/tmpfiles.d/$_pkgname.conf"

  # config
  install -vDm644 -t "$pkgdir/etc/$_pkgname" config.yml

  cd "$_pkgname"

  # binary
  install -vDm755 -t "$pkgdir/usr/bin" "build/$_pkgname"

  # man page
  install -vDm644 -t "$pkgdir/usr/share/man/man1" "build/$_pkgname.1"
}
