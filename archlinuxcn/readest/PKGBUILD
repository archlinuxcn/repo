# Maintainer: Roald Clark <roaldclark at gmail dot com>
# Contributor: Archisman Panigrahi <apandada1 at gmail dot com>
# Contributor: MareDevi <maredevi at foxmail dot com>

_name=Readest
pkgname="${_name,,}"
pkgver=0.9.56
pkgrel=1
pkgdesc="An open-source ebook reader designed for immersive and deep reading experiences"
arch=('x86_64')
url="https://github.com/${pkgname}/${pkgname}"
license=('AGPL-3.0-or-later')
depends=(
    'cairo'
    'desktop-file-utils'
    'gcc-libs'
    'gdk-pixbuf2'
    'glib2'
    'glibc'
    'gst-plugins-good'
    'gtk3'
    'hicolor-icon-theme'
    'libsoup3'
    'openssl'
    'pango'
    'webkit2gtk-4.1'
)
makedepends=(
    'git'
    'librsvg'
    'nodejs'
    'npm'
    'openssl'
    'pnpm'
    'rust'
)
conflicts=(
    'readest-bin'
    'readest-deb'
    'readest-git'
)
options=('!lto') # Disable Link Time Optimization. Otherwise build fails with some 'cc' linking error.
source=("${pkgname}::git+${url}.git#tag=v${pkgver}")
sha256sums=('5e64219935681b52f79d72a89fd2ce2d9d8ba7dd2871d6d698f940a353b7c396')

prepare() {
    cd "${srcdir}/${pkgname}"
    git submodule update --init --recursive
    # might need to rerun this when code is updated
    pnpm install
    # copy pdfjs-dist to Next.js public directory
    pnpm --filter @readest/readest-app setup-pdfjs
    # Disable updater artifacts in tauri.conf.json
    # Otherwise it will try to sign the built package with developer's GPG key which is unnecessary,
    # and then it causes build failure because the GPG key is not available in the build environment.
    # Also the updater artifacts are not needed for the AUR package.
    # For more details, see https://github.com/tauri-apps/tauri/issues/13259
    sed -i 's/"createUpdaterArtifacts": true/"createUpdaterArtifacts": false/' \
        "apps/${pkgname}-app/src-tauri/tauri.conf.json"
}

build() {
    cd "${srcdir}/${pkgname}"
    pnpm tauri build --bundles deb
}

package() {
    cd "${srcdir}/${pkgname}"
    [[ "${arch}" = x86_64 ]] && _arch=amd64
    cp --archive --verbose "target/release/bundle/deb/${_name}_${pkgver}_${_arch}/data/"* "${pkgdir}/"
}
