# Maintainer: Joffrey <j-off@live.fr>
# Contributor: eolianoe <eolianoe [at] gmail [DoT] com>
# Contributor: Edvinas Valatka <edacval@gmail.com>
# Contributor: Aaron Lindsay <aaron@aclindsay.com>

pkgname=seafile-server
pkgver=12.0.4
pkgrel=1
pkgdesc='Seafile server core'
arch=('i686' 'x86_64' 'armv7h' 'armv6h' 'aarch64')
url='https://github.com/haiwen/seafile-server'
license=('AGPL3')
depends=(
  "ccnet-server"
  'fuse2'
  'libevhtp-seafile'
  'libarchive'
  libjwt.so
  libcrypto.so)
# libevhtp-seafile uses oniguruma headers
makedepends=('vala' 'go' 'oniguruma')
conflicts=('seafile')
source=(
  "$pkgname-$pkgver.tar.gz::$url/archive/v$pkgver-server.tar.gz"
  0001-Fix-controller-path-and-migrate-old-pids-directory.patch
  0002-Fix-seafile-admin.patch
  'seafile-server@.service'
)
sha256sums=('ed625a0dc58480483ab90bfd0b0ec9973b9710168990ce0dfd2da85de2e65622'
            '5b07463acdd9ac1a9063eabcec8b691401de13fc611e518b83337570514988ee'
            'af1808c4413cb05829d1e6f8416fd042a6d771b8a6486a85e756557e20e79325'
            '347982254a025ce86cd53fbb6bf505320638bf69736d65a96d17f74551139072')

prepare() {
  cd "$srcdir/$pkgname-$pkgver-server"
  # Remove scripts for tests and others OS
  rm -rf "./integration-tests"

  # Apply patchs
  sed -i "s|(DESTDIR)@prefix@|@prefix@|" "./lib/libseafile.pc.in"
  patch -Np1 --no-backup-if-mismatch < ../0001-Fix-controller-path-and-migrate-old-pids-directory.patch
  patch -Np1 --no-backup-if-mismatch < ../0002-Fix-seafile-admin.patch
  2to3 -nw --no-diffs tools/seafile-admin
}

build() {
  cd "$srcdir/$pkgname-$pkgver-server"
  ./autogen.sh
  ./configure \
    --enable-fuse \
    --enable-python \
    --prefix=/usr \
    PYTHON='/usr/bin/python'
  make

  # Build Go packages
  export GOPATH="$srcdir"
  export CGO_CPPFLAGS="$CPPFLAGS"
  export CGO_CFLAGS="$CFLAGS"
  export CGO_CXXFLAGS="$CXXFLAGS"
  export CGO_LDFLAGS="$LDFLAGS"
  export CGO_ENABLED=1

  GOFLAGS='-buildmode=pie'
  GOFLAGS+=' -trimpath'
  GOFLAGS+=' -ldflags=-linkmode=external'
  GOFLAGS+=' -mod=readonly'
  GOFLAGS+=' -modcacherw'
  export GOFLAGS

  for pkg in fileserver notification-server; do
    pushd "$pkg"
    go build .
    popd
  done
}

package() {
  cd "$srcdir/$pkgname-$pkgver-server"
  make DESTDIR="$pkgdir" install

  # Prepare directories layout for deploying
  # These makes setup-seafile*.sh happy, whether we use them or not
  mkdir -p "$pkgdir/usr/share/seafile-server/"{runtime,seafile/docs}
  # The scripts needs this bin directory.
  ln -s /usr/bin/ "$pkgdir/usr/share/seafile-server/seafile/bin"

  # Install Go binaries
  for bin in fileserver notification-server; do
    install -Dm755 "$bin/$bin" "$pkgdir/usr/bin/$bin"
  done

  install -Dm644 \
          "$srcdir/seafile-server@.service" \
          "$pkgdir/usr/lib/systemd/system/seafile-server@.service"
}
