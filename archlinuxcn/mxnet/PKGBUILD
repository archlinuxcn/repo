# Maintainer: Butui Hu <hot123tea123@gmail.com>
# Contributor: Jingbei Li <i@jingbei.li>

cudaarch=Common
pkgbase=mxnet
pkgname=('mxnet' 'mxnet-mkl' 'mxnet-cuda' 'mxnet-cuda-mkl')
pkgver=1.5.1
pkgrel=7
epoch=1
pkgdesc="A flexible and efficient library for deep learning"
arch=('x86_64')
url="http://mxnet.io/"
license=('Apache')
depends=(
  'cblas'
  'curl'
  'double-conversion'
  'hdf5'
  'intel-tbb'
  'lapack'
  'openblas'
  'protobuf'
  'python-graphviz'
  'python-numpy'
  'python-requests'
  'zeromq'
)
makedepends=(
  'cmake'
  'cuda'
  'cudnn'
  'cython'
  'gettext'
  'git'
  'gtk3'
  'nccl'
  'patchelf'
)

source=("${pkgbase}::git+https://github.com/apache/incubator-mxnet.git#tag=${pkgver}")
sha512sums=('SKIP')

prepare() {
  cd "${srcdir}/${pkgbase}"
  git submodule update --init --recursive
  # do not use 3rd party openmp
  rm -rfv "${srcdir}/${pkgbase}/3rdparty/openmp"
  # the latest cmake set OpenMP_FOUND instead of OPENMP_FOUND
  sed -i 's/OPENMP_FOUND/OpenMP_FOUND/g' "${srcdir}/${pkgbase}/CMakeLists.txt"
  cd "${srcdir}"
  rm -rf "${srcdir}/${pkgbase}/build"
  mkdir "${srcdir}/${pkgbase}/build"
  cp -r "${pkgbase}" "${pkgbase}-mkl"
  cp -r "${pkgbase}" "${pkgbase}-cuda"
  cp -r "${pkgbase}" "${pkgbase}-cuda-mkl"
}

build() {
  cmake_opts=(
    -DBUILD_CPP_EXAMPLES:BOOL=OFF
    -DBUILD_TESTING:BOOL=OFF
    -DCMAKE_BUILD_TYPE:String=Release
    -DCMAKE_EXE_LINKER_FLAGS="$(pkg-config --libs cblas)"
    -DCMAKE_INSTALL_LIBDIR:PATH=lib
    -DCMAKE_INSTALL_PREFIX:PATH=/usr
    -DCMAKE_SHARED_LINKER_FLAGS="$(pkg-config --libs cblas)"
    -DCMAKE_SKIP_INSTALL_RPATH:BOOL=ON
    -DINSTALL_DOCUMENTATION:BOOL=OFF
    -DUSE_BLAS=open
    -DUSE_CPP_PACKAGE:BOOL=ON
    -DUSE_DIST_KVSTORE:BOOL=ON
    -DUSE_GPERFTOOLS:BOOL=OFF
    -DUSE_JEMALLOC:BOOL=OFF
    -DUSE_LAPACK:BOOL=ON
    -DUSE_MKLML_MKL:BOOL=OFF
    -DUSE_MKL_IF_AVAILABLE:BOOL=OFF
    -DUSE_OPENMP:BOOL=ON
    -DUSE_S3:BOOL=ON
)

  export CC=/opt/cuda/bin/gcc
  export CXX=/opt/cuda/bin/g++

  # building without CUDA and without MKL-DNN
  cd "${srcdir}/${pkgbase}/build"
  cmake \
    ${cmake_opts[@]} \
    -DUSE_CUDA:BOOL=OFF \
    -DUSE_CUDNN:BOOL=OFF \
    -DUSE_MKLDNN:BOOL=OFF \
    -DUSE_NCCL:BOOL=OFF \
    -DUSE_OPENCV:BOOL=OFF \
    ..
  make
  cd ../python
  python setup.py build --with-cython
  
  # building without CUDA and with MKL-DNN
  cd "${srcdir}/${pkgbase}-mkl/build"
  cmake \
    ${cmake_opts[@]} \
    -DUSE_CUDA:BOOL=OFF \
    -DUSE_CUDNN:BOOL=OFF \
    -DUSE_MKLDNN:BOOL=ON \
    -DUSE_NCCL:BOOL=OFF \
    -DUSE_OPENCV:BOOL=OFF \
    ..
  make
  cd ../python
  python setup.py build --with-cython

  # building with CUDA and without MKL-DNN
  cd "${srcdir}/${pkgbase}-cuda/build"
  cmake \
    ${cmake_opts[@]} \
    -DCUDA_ARCH_LIST=${cudaarch} \
    -DUSE_CUDA:BOOL=ON \
    -DUSE_CUDNN:BOOL=ON \
    -DUSE_MKLDNN:BOOL=OFF \
    -DUSE_NCCL:BOOL=ON \
    -DUSE_OPENCV:BOOL=OFF \
    ..
  make
  cd ../python
  python setup.py build --with-cython

  # building with CUDA and with MKL-DNN
  cd "${srcdir}/${pkgbase}-cuda-mkl/build"
  cmake \
    ${cmake_opts[@]} \
    -DCUDA_ARCH_LIST=${cudaarch} \
    -DUSE_CUDA:BOOL=ON \
    -DUSE_CUDNN:BOOL=ON \
    -DUSE_MKLDNN:BOOL=ON \
    -DUSE_NCCL:BOOL=ON \
    -DUSE_OPENCV:BOOL=OFF \
    ..
  make
  cd ../python
  python setup.py build --with-cython
}

package_mxnet() {

  cd "${srcdir}/${pkgname}/build"
  # install mxnet core component
  make DESTDIR="${pkgdir}" install
  if [ -f "${srcdir}/${pkgname}/build/im2rec" ]; then
    install -Dm755 "${srcdir}/${pkgname}/build/im2rec" "${pkgdir}/usr/bin/im2rec"
  fi
  # install python binding
  cd "${srcdir}/${pkgname}/python"
  python setup.py install --root="${pkgdir}" --optimize=1 --with-cython --skip-build
  install -Dm644 "${srcdir}/${pkgname}/LICENSE" "${pkgdir}/usr/share/licenses/${pkgname}/LICENSE"
  rm -rfv "${pkgdir}/usr/mxnet"
  ln -sf '/usr/lib/libmxnet.so' "${pkgdir}/usr/lib/python3.8/site-packages/mxnet/libmxnet.so"
  ln -s "/usr/include" "${pkgdir}/usr/lib/python3.8/site-packages/mxnet/include"
  # install missing lib files from mklml
  # currently mkldnn needs mklml libs
  # install them to /usr/lib/mxnet/mkldnn to avoid conficts with mkl & mkldnn
  if [ -d "${srcdir}/${pkgname}/build/mklml" ]; then
    find "${srcdir}/${pkgname}/build/mklml" -name '*.so' -exec install -Dm755 {} -t "${pkgdir}/usr/lib/mxnet/mkldnn" \;
  fi
  find "${pkgdir}/usr/lib" -name 'libmkldnn*' -exec mv {} "${pkgdir}/usr/lib/mxnet/mkldnn" \;
  # patch rpath
  find "${pkgdir}" -type f -perm 755 -exec patchelf --set-rpath '/usr/lib/mxnet/mkldnn' {} \;
  # remove unwantted files
  rm -rfv "${pkgdir}/usr/lib/cmake" "${pkgdir}/usr/share/doc"
  find "${pkgdir}/usr/include" -type f -name 'mkldnn*' -delete
}

package_mxnet-mkl() {
  pkgdesc="${pkgdesc} (with MKL-DNN)"
  conflicts=(mxnet)
  provides=(mxnet)

  cd "${srcdir}/${pkgname}/build"
  # install mxnet core component
  make DESTDIR="${pkgdir}" install
  if [ -f "${srcdir}/${pkgname}/build/im2rec" ]; then
    install -Dm755 "${srcdir}/${pkgname}/build/im2rec" "${pkgdir}/usr/bin/im2rec"
  fi
  # install python binding
  cd "${srcdir}/${pkgname}/python"
  python setup.py install --root="${pkgdir}" --optimize=1 --with-cython --skip-build
  install -Dm644 "${srcdir}/${pkgname}/LICENSE" "${pkgdir}/usr/share/licenses/${pkgname}/LICENSE"
  rm -rfv "${pkgdir}/usr/mxnet"
  ln -sf '/usr/lib/libmxnet.so' "${pkgdir}/usr/lib/python3.8/site-packages/mxnet/libmxnet.so"
  ln -s "/usr/include" "${pkgdir}/usr/lib/python3.8/site-packages/mxnet/include"
  # install missing lib files from mklml
  # currently mkldnn needs mklml libs
  # install them to /usr/lib/mxnet/mkldnn to avoid conficts with mkl & mkldnn
  if [ -d "${srcdir}/${pkgname}/build/mklml" ]; then
    find "${srcdir}/${pkgname}/build/mklml" -name '*.so' -exec install -Dm755 {} -t "${pkgdir}/usr/lib/mxnet/mkldnn" \;
  fi
  find "${pkgdir}/usr/lib" -name 'libmkldnn*' -exec mv {} "${pkgdir}/usr/lib/mxnet/mkldnn" \;
  # patch rpath
  find "${pkgdir}" -type f -perm 755 -exec patchelf --set-rpath '/usr/lib/mxnet/mkldnn' {} \;
  # remove unwantted files
  rm -rfv "${pkgdir}/usr/lib/cmake" "${pkgdir}/usr/share/doc"
  find "${pkgdir}/usr/include" -type f -name 'mkldnn*' -delete
}

package_mxnet-cuda() {
  pkgdesc="${pkgdesc} (with CUDA)"
  depends+=(cuda cudnn nccl)
  conflicts=(mxnet)
  provides=(mxnet)

  cd "${srcdir}/${pkgname}/build"
  # install mxnet core component
  make DESTDIR="${pkgdir}" install
  if [ -f "${srcdir}/${pkgname}/build/im2rec" ]; then
    install -Dm755 "${srcdir}/${pkgname}/build/im2rec" "${pkgdir}/usr/bin/im2rec"
  fi
  # install python binding
  cd "${srcdir}/${pkgname}/python"
  python setup.py install --root="${pkgdir}" --optimize=1 --with-cython --skip-build
  install -Dm644 "${srcdir}/${pkgname}/LICENSE" "${pkgdir}/usr/share/licenses/${pkgname}/LICENSE"
  rm -rfv "${pkgdir}/usr/mxnet"
  ln -sf '/usr/lib/libmxnet.so' "${pkgdir}/usr/lib/python3.8/site-packages/mxnet/libmxnet.so"
  ln -s "/usr/include" "${pkgdir}/usr/lib/python3.8/site-packages/mxnet/include"
  # install missing lib files from mklml
  # currently mkldnn needs mklml libs
  # install them to /usr/lib/mxnet/mkldnn to avoid conficts with mkl & mkldnn
  if [ -d "${srcdir}/${pkgname}/build/mklml" ]; then
    find "${srcdir}/${pkgname}/build/mklml" -name '*.so' -exec install -Dm755 {} -t "${pkgdir}/usr/lib/mxnet/mkldnn" \;
  fi
  find "${pkgdir}/usr/lib" -name 'libmkldnn*' -exec mv {} "${pkgdir}/usr/lib/mxnet/mkldnn" \;
  # patch rpath
  find "${pkgdir}" -type f -perm 755 -exec patchelf --set-rpath '/usr/lib/mxnet/mkldnn' {} \;
  # remove unwantted files
  rm -rfv "${pkgdir}/usr/lib/cmake" "${pkgdir}/usr/share/doc"
  find "${pkgdir}/usr/include" -type f -name 'mkldnn*' -delete
}

package_mxnet-cuda-mkl() {
  pkgdesc="${pkgdesc} (with CUDA and MKL-DNN)"
  depends+=(cuda cudnn nccl)
  conflicts=(mxnet)
  provides=(mxnet)

  cd "${srcdir}/${pkgname}/build"
  # install mxnet core component
  make DESTDIR="${pkgdir}" install
  if [ -f "${srcdir}/${pkgname}/build/im2rec" ]; then
    install -Dm755 "${srcdir}/${pkgname}/build/im2rec" "${pkgdir}/usr/bin/im2rec"
  fi
  # install python binding
  cd "${srcdir}/${pkgname}/python"
  python setup.py install --root="${pkgdir}" --optimize=1 --with-cython --skip-build
  install -Dm644 "${srcdir}/${pkgname}/LICENSE" "${pkgdir}/usr/share/licenses/${pkgname}/LICENSE"
  rm -rfv "${pkgdir}/usr/mxnet"
  ln -sf '/usr/lib/libmxnet.so' "${pkgdir}/usr/lib/python3.8/site-packages/mxnet/libmxnet.so"
  ln -s "/usr/include" "${pkgdir}/usr/lib/python3.8/site-packages/mxnet/include"
  # install missing lib files from mklml
  # currently mkldnn needs mklml libs
  # install them to /usr/lib/mxnet/mkldnn to avoid conficts with mkl & mkldnn
  if [ -d "${srcdir}/${pkgname}/build/mklml" ]; then
    find "${srcdir}/${pkgname}/build/mklml" -name '*.so' -exec install -Dm755 {} -t "${pkgdir}/usr/lib/mxnet/mkldnn" \;
  fi
  find "${pkgdir}/usr/lib" -name 'libmkldnn*' -exec mv {} "${pkgdir}/usr/lib/mxnet/mkldnn" \;
  # patch rpath
  find "${pkgdir}" -type f -perm 755 -exec patchelf --set-rpath '/usr/lib/mxnet/mkldnn' {} \;
  # remove unwantted files
  rm -rfv "${pkgdir}/usr/lib/cmake" "${pkgdir}/usr/share/doc"
  find "${pkgdir}/usr/include" -type f -name 'mkldnn*' -delete
}
# vim:set ts=2 sw=2 et:

